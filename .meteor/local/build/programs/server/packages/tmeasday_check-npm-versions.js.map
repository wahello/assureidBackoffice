{"version":3,"sources":["meteor://ðŸ’»app/packages/tmeasday:check-npm-versions/check-npm-versions.js"],"names":["module1","module","export","checkNpmVersions","semver","watch","require","default","v","_","compatibleVersionIsInstalled","name","range","installedVersion","version","satisfies","e","console","log","packages","packageName","failures","forEach","failure","keys","length","errors","installed","requirement","push","qualifier","warn","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,UAAQC,MAAd;AAAqBD,QAAQE,MAAR,CAAe;AAACC,oBAAiB,MAAIA;AAAtB,CAAf;AAAwD,IAAIC,MAAJ;AAAWJ,QAAQK,KAAR,CAAcC,QAAQ,QAAR,CAAd,EAAgC;AAACC,UAAQC,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;;AAArB,CAAhC,EAAuD,CAAvD;;AAA0D,IAAIC,CAAJ;;AAAMT,QAAQK,KAAR,CAAcC,QAAQ,mBAAR,CAAd,EAA2C;AAACG,IAAED,CAAF,EAAI;AAACC,QAAED,CAAF;AAAI;;AAAV,CAA3C,EAAuD,CAAvD;;AAGxJ;AACA;AACA;AACA;AACA,MAAME,+BAA+B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpD,MAAI;AACF,UAAMC,mBAAmBP,QAAS,GAAEK,IAAK,eAAhB,EAAgCG,OAAzD;;AACA,QAAIV,OAAOW,SAAP,CAAiBF,gBAAjB,EAAmCD,KAAnC,CAAJ,EAA+C;AAC7C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOC,gBAAP;AACD;AACF,GAPD,CAOE,OAAOG,CAAP,EAAU;AACVC,YAAQC,GAAR,CAAYF,CAAZ,EADU,CAEV;;AACA,WAAO,KAAP;AACD;AACF,CAbD;;AAeO,MAAMb,mBAAmB,CAACgB,QAAD,EAAWC,WAAX,KAA2B;AACzD,QAAMC,WAAW,EAAjB;;AACAZ,IAAEa,OAAF,CAAUH,QAAV,EAAoB,CAACP,KAAD,EAAQD,IAAR,KAAiB;AACnC,UAAMY,UAAUb,6BAA6BC,IAA7B,EAAmCC,KAAnC,CAAhB;;AACA,QAAIW,YAAY,IAAhB,EAAsB;AACpBF,eAASV,IAAT,IAAiBY,OAAjB;AACD;AACF,GALD;;AAOA,MAAId,EAAEe,IAAF,CAAOH,QAAP,EAAiBI,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,QAAMC,SAAS,EAAf;;AACAjB,IAAEa,OAAF,CAAUD,QAAV,EAAoB,CAACM,SAAD,EAAYhB,IAAZ,KAAqB;AACvC,UAAMiB,cAAe,GAAEjB,IAAK,IAAGQ,SAASR,IAAT,CAAe,EAA9C;;AAEA,QAAIgB,SAAJ,EAAe;AACbD,aAAOG,IAAP,CAAa,MAAKlB,IAAK,IAAGgB,SAAU,eAAcC,WAAY,SAA9D;AACD,KAFD,MAEO;AACLF,aAAOG,IAAP,CAAa,MAAKlB,IAAK,IAAGQ,SAASR,IAAT,CAAe,iBAAzC;AACD;AACF,GARD;;AAUA,QAAMmB,YAAYV,cAAe,QAAOA,WAAY,IAAlC,GAAwC,EAA1D;AACAH,UAAQc,IAAR,CAAc,kCAAiCD,SAAU;EACzDJ,OAAOM,IAAP,CAAY,IAAZ,CAAkB;;;;CADlB;AAMD,CA/BM,C","file":"/packages/tmeasday_check-npm-versions.js","sourcesContent":["import semver from 'semver';\nimport { _ } from 'meteor/underscore';\n\n// Returns:\n//   - true      if a version of the package in the range is installed\n//   - false     if no version is installed\n//   - version#  if incompatible version is installed\nconst compatibleVersionIsInstalled = (name, range) => {\n  try {\n    const installedVersion = require(`${name}/package.json`).version;  \n    if (semver.satisfies(installedVersion, range)) {\n      return true;\n    } else {\n      return installedVersion;\n    }\n  } catch (e) {\n    console.log(e)\n    // XXX I guess the only error here is that the module doesn't exist?\n    return false;\n  }\n};\n\nexport const checkNpmVersions = (packages, packageName) => {\n  const failures = {};\n  _.forEach(packages, (range, name) => {\n    const failure = compatibleVersionIsInstalled(name, range);\n    if (failure !== true) {\n      failures[name] = failure;\n    }\n  });\n\n  if (_.keys(failures).length === 0) {\n    return true;\n  }\n\n  const errors = [];\n  _.forEach(failures, (installed, name) => {\n    const requirement = `${name}@${packages[name]}`;\n\n    if (installed) {\n      errors.push(` - ${name}@${installed} installed, ${requirement} needed`);\n    } else {\n      errors.push(` - ${name}@${packages[name]} not installed.`);\n    }\n  });\n\n  const qualifier = packageName ? `(for ${packageName}) ` : '';\n  console.warn(`WARNING: npm peer requirements ${qualifier}not installed:\n${errors.join('\\n')}\n\nRead more about installing npm peer dependencies:\n  http://guide.meteor.com/using-packages.html#peer-npm-dependencies\n`);\n};\n"]}
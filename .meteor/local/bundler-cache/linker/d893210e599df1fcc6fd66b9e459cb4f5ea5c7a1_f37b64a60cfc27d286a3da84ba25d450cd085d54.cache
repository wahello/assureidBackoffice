[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar blocking = Package['peerlibrary:blocking'].blocking;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar AWS;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// packages/peerlibrary_aws-sdk/server.js                                     //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n                                                                              //\nAWS = Npm.require('aws-sdk');\n\nvar originalDefineMethods = AWS.Service.defineMethods;\n\nfunction makeBlocking(proto, methodName) {\n  var syncMethod = methodName + 'Sync';\n  if (!proto[methodName]) return;\n  if (!_.isFunction(proto[methodName])) return;\n  if (proto[syncMethod]) return;\n  proto[syncMethod] = blocking(proto[methodName]);\n}\n\nAWS.Service.defineMethods = function defineMethods(svc) {\n  originalDefineMethods(svc);\n  AWS.util.each(svc.prototype.api.operations, function iterator(methodName) {\n    makeBlocking(svc.prototype, methodName);\n  });\n};\n\nAWS.util.each(AWS, function iterator(name) {\n  if (!(AWS[name].prototype instanceof AWS.Service)) return;\n\n  AWS.util.each(AWS[name].prototype, function iterator(methodName) {\n    makeBlocking(AWS[name].prototype, methodName);\n  });\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['peerlibrary:aws-sdk'] = {}, {\n  AWS: AWS\n});\n\n})();\n","servePath":"/packages/peerlibrary_aws-sdk.js"}]
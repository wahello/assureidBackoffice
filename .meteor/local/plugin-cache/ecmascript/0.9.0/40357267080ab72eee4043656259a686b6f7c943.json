{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"/imports/website/ServiceProcess/api/TicketMaster.js","imported":["TicketMaster"],"specifiers":[{"kind":"named","imported":"TicketMaster","local":"TicketMaster"}]}],"exports":{"exported":["NewTickets"],"specifiers":[{"kind":"local","local":"NewTickets","exported":"default"}]}}},"options":{"filename":"imports/dashboard/ticketManagement/myTickets/NewTickets.jsx","filenameRelative":"imports/dashboard/ticketManagement/myTickets/NewTickets.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/myTickets/NewTickets.jsx.map","sourceFileName":"imports/dashboard/ticketManagement/myTickets/NewTickets.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NewTickets"},"ignored":false,"code":"module.export({\n    default: () => NewTickets\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 1);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n    default(v) {\n        React = v;\n    },\n\n    Component(v) {\n        Component = v;\n    }\n\n}, 2);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n    render(v) {\n        render = v;\n    }\n\n}, 3);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n    default(v) {\n        TrackerReact = v;\n    }\n\n}, 4);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    createContainer(v) {\n        createContainer = v;\n    }\n\n}, 5);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n    default(v) {\n        Validation = v;\n    }\n\n}, 6);\nlet validator;\nmodule.watch(require(\"validator\"), {\n    default(v) {\n        validator = v;\n    }\n\n}, 7);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker(v) {\n        Tracker = v;\n    }\n\n}, 8);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n    browserHistory(v) {\n        browserHistory = v;\n    }\n\n}, 9);\nlet TicketMaster;\nmodule.watch(require(\"/imports/website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketMaster(v) {\n        TicketMaster = v;\n    }\n\n}, 10);\n\nclass NewTickets extends TrackerReact(Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"tableListData\": [],\n            \"tatDate\": \"\",\n            \"subscribe\": Meteor.subscribe(\"allTickets\")\n        };\n    }\n\n    componentDidMount() {\n        this.userTracker = Tracker.autorun(() => {\n            if (this.state.subscribe.ready()) {\n                var allTickets = TicketMaster.find({\n                    \"ticketStatus.status\": \"New\"\n                }).fetch();\n\n                for (var i = 0; i < allTickets.length; i++) {\n                    for (var j = 0; j < allTickets[i].ticketStatus.length; j++) {\n                        var dateValue = allTickets[i].ticketStatus[0].createdAt;\n                        var startdate = moment(dateValue).format('L');\n                        var new_date = moment(startdate, \"MM-DD-YYYY\").add(1, 'days');\n                        var day = new_date.format('DD');\n                        var month = new_date.format('MM');\n                        var year = new_date.format('YYYY');\n                        var tatDate = day + '/' + month + '/' + year;\n                    }\n                }\n\n                console.log(\"allTickets :\" + JSON.stringify(allTickets));\n\n                if (allTickets) {\n                    this.setState({\n                        'tableListData': allTickets,\n                        'tatDate': tatDate\n                    });\n                }\n            }\n        });\n    }\n\n    render() {\n        return React.createElement(\n            \"div\",\n            {\n                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n                \"div\",\n                null,\n                React.createElement(\n                    \"div\",\n                    {\n                        className: \"reports-table-main\"\n                    },\n                    React.createElement(\n                        \"table\",\n                        {\n                            id: \"subscriber-list-outerTable\",\n                            className: \"newOrderwrap subscriber-list-outerTable table table-bordered table-hover table-striped table-striped table-responsive table-condensed table-bordered\"\n                        },\n                        React.createElement(\n                            \"thead\",\n                            {\n                                className: \"table-head umtblhdr\"\n                            },\n                            React.createElement(\n                                \"tr\",\n                                {\n                                    className: \"hrTableHeader info UML-TableTr\"\n                                },\n                                React.createElement(\n                                    \"th\",\n                                    {\n                                        className: \"\"\n                                    },\n                                    \" Ticket No.\"\n                                ),\n                                React.createElement(\n                                    \"th\",\n                                    {\n                                        className: \"\"\n                                    },\n                                    \" Order ID \"\n                                ),\n                                React.createElement(\n                                    \"th\",\n                                    {\n                                        className: \"\"\n                                    },\n                                    \" Service Name \"\n                                ),\n                                React.createElement(\n                                    \"th\",\n                                    {\n                                        className: \"\"\n                                    },\n                                    \" Arrival Date \"\n                                ),\n                                React.createElement(\n                                    \"th\",\n                                    {\n                                        className: \"\"\n                                    },\n                                    \" TAT(Date) \"\n                                ),\n                                React.createElement(\n                                    \"th\",\n                                    {\n                                        className: \"\"\n                                    },\n                                    \" Status \"\n                                )\n                            )\n                        ),\n                        React.createElement(\n                            \"tbody\",\n                            null,\n                            this.state.tableListData.map((data, index) => {\n                                return React.createElement(\n                                    \"tr\",\n                                    {\n                                        key: index\n                                    },\n                                    React.createElement(\n                                        \"td\",\n                                        null,\n                                        data.ticketNumber\n                                    ),\n                                    React.createElement(\n                                        \"td\",\n                                        null,\n                                        data.orderNo\n                                    ),\n                                    React.createElement(\n                                        \"td\",\n                                        null,\n                                        data.serviceName\n                                    ),\n                                    React.createElement(\n                                        \"td\",\n                                        null,\n                                        moment(data.ticketStatus[0].createdAt).format('l')\n                                    ),\n                                    React.createElement(\n                                        \"td\",\n                                        null,\n                                        \" \",\n                                        this.state.tatDate\n                                    ),\n                                    React.createElement(\n                                        \"td\",\n                                        null,\n                                        React.createElement(\n                                            \"button\",\n                                            {\n                                                type: \"button\",\n                                                className: \" newOrderbtn btn btn-primary\"\n                                            },\n                                            \"New\"\n                                        )\n                                    )\n                                );\n                            })\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n}","map":{"version":3,"sources":["imports/dashboard/ticketManagement/myTickets/NewTickets.jsx"],"names":["module","export","default","NewTickets","Meteor","watch","require","v","Mongo","React","Component","render","TrackerReact","createContainer","Validation","validator","Tracker","browserHistory","TicketMaster","constructor","props","state","subscribe","componentDidMount","userTracker","autorun","ready","allTickets","find","fetch","i","length","j","ticketStatus","dateValue","createdAt","startdate","moment","format","new_date","add","day","month","year","tatDate","console","log","JSON","stringify","setState","tableListData","map","data","index","ticketNumber","orderNo","serviceName"],"mappings":"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","file":"imports/dashboard/ticketManagement/myTickets/NewTickets.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\nimport { browserHistory } from 'react-router';\n\nimport {TicketMaster} from \"/imports/website/ServiceProcess/api/TicketMaster.js\";\n\n\n// import { UserSubscriptions } from '/imports/website/contactUs/api/SubscriptionMaster.js';\n\n\nexport default class NewTickets extends TrackerReact(Component){\n\tconstructor(props){\n        super(props);\n        this.state = {\n            \"tableListData\":[],\n            \"tatDate\": \"\",\n            \"subscribe\": Meteor.subscribe(\"allTickets\"),\n        }\n        \n    }\n\n    componentDidMount(){\n\n            this.userTracker = Tracker.autorun(()=>{\n                if(this.state.subscribe.ready()){\n                    var allTickets = TicketMaster.find({\"ticketStatus.status\":\"New\"}).fetch();\n                    for(var i=0;i<allTickets.length;i++){\n                        for(var j=0;j<allTickets[i].ticketStatus.length;j++){\n                            var dateValue = allTickets[i].ticketStatus[0].createdAt;\n                            var startdate = moment(dateValue).format('L');\n                            var new_date  = moment(startdate, \"MM-DD-YYYY\").add(1, 'days');\n                            var day       = new_date.format('DD');\n                            var month     = new_date.format('MM');\n                            var year      = new_date.format('YYYY');\n                            var tatDate   = day + '/' + month + '/' + year\n                          \n                            \n                        }\n                        \n                    }\n                    console.log(\"allTickets :\"+JSON.stringify(allTickets));\n                    \n                    if(allTickets){\n                        this.setState({\n                            'tableListData' : allTickets,\n                            'tatDate'       : tatDate\n                        })\n                    }\n                }\n            });\n    }\n   \n    render(){\n        return( \n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n           \n                <div>\n                    <div className=\"reports-table-main\">\n                        <table id=\"subscriber-list-outerTable\" className=\"newOrderwrap subscriber-list-outerTable table table-bordered table-hover table-striped table-striped table-responsive table-condensed table-bordered\">\n                        <thead className=\"table-head umtblhdr\">\n                        <tr className=\"hrTableHeader info UML-TableTr\">\n                          <th className=\"\"> Ticket No.</th>\n                          <th className=\"\"> Order ID </th>\n                          <th className=\"\"> Service Name </th>\n                          <th className=\"\"> Arrival Date </th>\n                          <th className=\"\"> TAT(Date) </th>\n                          <th className=\"\"> Status </th>\n                          \n                        </tr>\n                      </thead>\n                            <tbody>\n\n                            {  this.state.tableListData.map((data, index)=>{\n                                return(\n                                    <tr key={index}>\n                                        <td>{data.ticketNumber}</td>\n                                        <td>{data.orderNo}</td>\n                                        <td>{data.serviceName}</td>\n                                        <td>{moment(data.ticketStatus[0].createdAt).format('l')}</td>\n                                        <td> {this.state.tatDate}</td>\n                                        <td><button type=\"button\" className=\" newOrderbtn btn btn-primary\">New</button></td>                                    \n                                    </tr>\n                                );\n                            })\n                            }\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n}"]},"hash":"40357267080ab72eee4043656259a686b6f7c943"}

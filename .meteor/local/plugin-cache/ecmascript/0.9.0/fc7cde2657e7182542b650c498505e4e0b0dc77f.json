{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"../api/Portfolios","imported":["Portfolios"],"specifiers":[{"kind":"named","imported":"Portfolios","local":"Portfolios"}]},{"source":"../api/Portfolios","imported":["TempPortfolioImages"],"specifiers":[{"kind":"named","imported":"TempPortfolioImages","local":"TempPortfolioImages"}]},{"source":"../api/Portfolios","imported":["TempPortfolioLogoImages"],"specifiers":[{"kind":"named","imported":"TempPortfolioLogoImages","local":"TempPortfolioLogoImages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/reactCMS/components/PortfolioPage.jsx","filenameRelative":"imports/dashboard/reactCMS/components/PortfolioPage.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/components/PortfolioPage.jsx.map","sourceFileName":"imports/dashboard/reactCMS/components/PortfolioPage.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"PortfolioPage"},"ignored":false,"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 2);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 3);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 4);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 5);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n  default(v) {\n    Validation = v;\n  }\n\n}, 6);\nlet validator;\nmodule.watch(require(\"validator\"), {\n  default(v) {\n    validator = v;\n  }\n\n}, 7);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 8);\nlet Portfolios;\nmodule.watch(require(\"../api/Portfolios\"), {\n  Portfolios(v) {\n    Portfolios = v;\n  }\n\n}, 9);\nlet TempPortfolioImages;\nmodule.watch(require(\"../api/Portfolios\"), {\n  TempPortfolioImages(v) {\n    TempPortfolioImages = v;\n  }\n\n}, 10);\nlet TempPortfolioLogoImages;\nmodule.watch(require(\"../api/Portfolios\"), {\n  TempPortfolioLogoImages(v) {\n    TempPortfolioLogoImages = v;\n  }\n\n}, 11);\n\nclass PortfolioPage extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);\n    var metaContext = {\n      id: Meteor.userId(),\n      dir: \"images\",\n      name: \"portfolioImage\"\n    };\n    var uploader = new Slingshot.Upload(\"myFileUploads\", metaContext);\n    this.state = {\n      portfolioPageTitle: this.props.portfolios,\n      portfolioPageName: this.props.portfolios,\n      portfolioPageBody: this.props.portfolios,\n      id: this.props.portfolios._id,\n      portfolios: [],\n      portfolioVideoLink: this.props.portfolios,\n      upload: uploader,\n      isUploading: false,\n      isLogoUploading: false,\n      logoProgressValue: \"0%\",\n      progressValue: \"0%\",\n      tempPortfolioImages: [],\n      tempPortfolioLogoImages: [],\n      edit: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      if (nextProps.portfolios) {\n        this.setState({\n          portfolioPageTitle: nextProps.portfolios.portfolioPageTitle,\n          portfolioPageName: nextProps.portfolios.portfolioPageName,\n          portfolioPageBody: nextProps.portfolios.portfolioPageBody,\n          portfolioVideoLink: nextProps.portfolios.portfolioVideoLink,\n          id: nextProps.portfolios._id\n        });\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  calculateProgress() {\n    this.uploadComputation = Tracker.autorun(() => {\n      const uploadProgress = Math.round(this.state.upload.progress() * 100);\n      if (!isNaN(uploadProgress)) this.setState({\n        progressValue: uploadProgress + \"%\"\n      });\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n      var dashboardCss = document.createElement(\"link\");\n      dashboardCss.type = \"text/css\";\n      dashboardCss.rel = \"stylesheet\";\n      dashboardCss.href = \"/css/dashboard.css\";\n      document.head.append(dashboardCss);\n    }\n\n    if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n      console.log(\"I am appended!\");\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      adminLte.setAttribute('id', 'adminLte');\n      $(\"body\").append(adminLte);\n    }\n\n    $('#messageContent').summernote({\n      height: 190,\n      maxHeight: 190,\n      minHeight: 175\n    });\n    this.portfolioPageTracker = Tracker.autorun(() => {\n      Meteor.subscribe(\"portfolios\");\n      const portfolios = Portfolios.find().fetch();\n      this.setState({\n        portfolios: portfolios\n      });\n    });\n    this.tempPortfolioImageTracker = Tracker.autorun(() => {\n      Meteor.subscribe('tempPortfolioImages');\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      this.setState({\n        tempPortfolioImages\n      });\n    });\n    this.tempPortfolioLogoImageTracker = Tracker.autorun(() => {\n      Meteor.subscribe('tempPortfolioLogoImages');\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      this.setState({\n        tempPortfolioLogoImages\n      });\n    }); // $(\".image-box\").css({'background-image':'url('+  $(\".image-box\").attr('data-image')+')','background-size': 'cover'});\n  }\n\n  componentWillUnmount() {\n    $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n    const tempPortfolioImages = TempPortfolioImages.find().fetch();\n\n    for (i = 0; i < tempPortfolioImages.length; i++) {\n      if (!tempPortfolioImages[i].submitted) Meteor.call('removeS3Data', tempPortfolioImages[i].amazonUrl);\n    }\n\n    const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n\n    for (i = 0; i < tempPortfolioLogoImages.length; i++) {\n      if (!tempPortfolioLogoImages[i].submitted) Meteor.call('removeS3Data', tempPortfolioLogoImages[i].logoAmazonUrl);\n    }\n\n    Meteor.call('removePortfolioUnsubmitImages', Meteor.userId());\n    Meteor.call('removePortfolioLogoUnsubmitImages', Meteor.userId());\n    console.log('unmounted');\n    if (this.portfolioPageTracker) this.portfolioPageTracker.stop();\n    if (this.tempPortfolioImageTracker) this.tempPortfolioImageTracker.stop();\n    if (this.tempPortfolioLogoImageTracker) this.tempPortfolioLogoImageTracker.stop();\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n\n    if (this.props.params.id && this.state.edit) {\n      Meteor.call('removeS3Data', e.target.getAttribute('id'));\n      Meteor.call('updateEditPortfolioPage', e.target.getAttribute('id'));\n    }\n\n    Meteor.call('removePortfolioUrlImages', e.target.getAttribute('id'));\n    Meteor.call('removeS3Data', e.target.getAttribute('id'));\n  }\n\n  handleLogoClose(e) {\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n\n    if (this.props.params.id && this.state.edit) {\n      Meteor.call('removeS3Data', e.target.getAttribute('id'));\n      Meteor.call('updateEditPortfolioLogoPage', e.target.getAttribute('id'));\n    }\n\n    Meteor.call('removePortfolioLogoUrlImages', e.target.getAttribute('id'));\n    Meteor.call('removeS3Data', e.target.getAttribute('id'));\n  }\n\n  renderImageData() {\n    if (this.props.params.id && this.state.edit) {\n      console.log(\"I have Id\");\n      const portfolios = Portfolios.find({\n        '_id': this.props.params.id\n      }).fetch();\n      var imageArray = [];\n\n      for (i = 0; i < portfolios.length; i++) {\n        for (j = 0; j < portfolios[i].s3.length; j++) {\n          if (portfolios[i].s3[j].amazonUrl != '') {\n            imageArray.push(React.createElement(\n              \"div\",\n              {\n                key: j,\n                \"data-image\": portfolios[i].s3[j].amazonUrl,\n                className: \"image-box\"\n              },\n              React.createElement(\"img\", {\n                src: portfolios[i].s3[j].amazonUrl,\n                alt: \"\"\n              }),\n              React.createElement(\n                \"button\",\n                {\n                  id: portfolios[i].s3[j].amazonUrl,\n                  className: \"close\",\n                  onClick: this.handleClose.bind(this)\n                },\n                React.createElement(\"i\", {\n                  className: \"ion ion-close-circled\"\n                })\n              )\n            ));\n          }\n        }\n      }\n\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n\n      for (k = 0; k < tempPortfolioImages.length; k++) {\n        if (tempPortfolioImages[k].amazonUrl != '' && !tempPortfolioImages[k].submitted) imageArray.push(React.createElement(\n          \"div\",\n          {\n            \"data-image\": tempPortfolioImages[k].amazonUrl,\n            className: \"image-box\"\n          },\n          React.createElement(\"img\", {\n            src: tempPortfolioImages[k].amazonUrl,\n            alt: \"\"\n          }),\n          React.createElement(\n            \"button\",\n            {\n              id: tempPortfolioImages[k].amazonUrl,\n              className: \"close\",\n              onClick: this.handleClose.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"ion ion-close-circled\"\n            })\n          )\n        ));\n      }\n\n      return imageArray;\n    } else {\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      return tempPortfolioImages.map(tempPortfolioImage => {\n        if (tempPortfolioImage.amazonUrl != '' && !tempPortfolioImage.submitted) return React.createElement(\n          \"div\",\n          {\n            \"data-image\": tempPortfolioImage.amazonUrl,\n            className: \"image-box\"\n          },\n          React.createElement(\"img\", {\n            src: tempPortfolioImage.amazonUrl,\n            alt: \"\"\n          }),\n          React.createElement(\n            \"button\",\n            {\n              id: tempPortfolioImage.amazonUrl,\n              className: \"close\",\n              onClick: this.handleClose.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"ion ion-close-circled\"\n            })\n          )\n        );\n      });\n    }\n  }\n\n  handleUpload(e) {\n    let id = Meteor.userId();\n    e.preventDefault();\n    this.setState({\n      isUploading: true\n    });\n    this.calculateProgress();\n    var comp = this; // console.log(comp);\n\n    this.state.upload.send(document.getElementById('s3file').files[0], function (error, downloadUrl) {\n      if (error) {\n        // Log service detailed response.\n        console.error('Error uploading' + downloadUrl + error.reason);\n        console.error(error);\n      } else {\n        comp.setState({\n          progressValue: \"0%\"\n        });\n        comp.setState({\n          isUploading: false\n        });\n        comp.uploadComputation.stop();\n        console.log(\"Success file uploaded! \" + downloadUrl); // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n\n        Meteor.call('uploadTempPortfolioImages', id, downloadUrl, new Date(), function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Inserted..!!\");\n          }\n        });\n      }\n    });\n  }\n\n  renderLogoImageData() {\n    if (this.props.params.id && this.state.edit) {\n      const portfolios = Portfolios.find({\n        '_id': this.props.params.id\n      }).fetch();\n      var imageArray = [];\n\n      for (i = 0; i < portfolios.length; i++) {\n        for (j = 0; j < portfolios[i].logoS3.length; j++) {\n          if (portfolios[i].logoS3[j].logoAmazonUrl != '') {\n            imageArray.push(React.createElement(\n              \"div\",\n              {\n                key: j,\n                \"data-image\": portfolios[i].logoS3[j].logoAmazonUrl,\n                className: \"image-box\"\n              },\n              React.createElement(\"img\", {\n                src: portfolios[i].logoS3[j].logoAmazonUrl,\n                alt: \"\"\n              }),\n              React.createElement(\n                \"button\",\n                {\n                  id: portfolios[i].logoS3[j].logoAmazonUrl,\n                  className: \"close\",\n                  onClick: this.handleLogoClose.bind(this)\n                },\n                React.createElement(\"i\", {\n                  className: \"ion ion-close-circled\"\n                })\n              )\n            ));\n          }\n        }\n      }\n\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n\n      for (k = 0; k < tempPortfolioLogoImages.length; k++) {\n        if (tempPortfolioLogoImages[k].logoAmazonUrl != '' && !tempPortfolioLogoImages[k].submitted) imageArray.push(React.createElement(\n          \"div\",\n          {\n            \"data-image\": tempPortfolioLogoImages[k].logoAmazonUrl,\n            className: \"image-box\"\n          },\n          React.createElement(\"img\", {\n            src: tempPortfolioLogoImages[k].logoAmazonUrl,\n            alt: \"\"\n          }),\n          React.createElement(\n            \"button\",\n            {\n              id: tempPortfolioLogoImages[k].logoAmazonUrl,\n              className: \"close\",\n              onClick: this.handleLogoClose.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"ion ion-close-circled\"\n            })\n          )\n        ));\n      }\n\n      return imageArray;\n    } else {\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      return tempPortfolioLogoImages.map(tempPortfolioLogoImage => {\n        if (tempPortfolioLogoImage.logoAmazonUrl != '' && !tempPortfolioLogoImage.submitted) return React.createElement(\n          \"div\",\n          {\n            \"data-image\": tempPortfolioLogoImage.logoAmazonUrl,\n            className: \"image-box\"\n          },\n          React.createElement(\"img\", {\n            src: tempPortfolioLogoImage.logoAmazonUrl,\n            alt: \"\"\n          }),\n          React.createElement(\n            \"button\",\n            {\n              id: tempPortfolioLogoImage.logoAmazonUrl,\n              className: \"close\",\n              onClick: this.handleLogoClose.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"ion ion-close-circled\"\n            })\n          )\n        );\n      });\n    }\n  }\n\n  calculateLogoProgress() {\n    this.uploadLogoComputation = Tracker.autorun(() => {\n      const logoUploadProgress = Math.round(this.state.upload.progress() * 100);\n      if (!isNaN(logoUploadProgress)) this.setState({\n        logoProgressValue: logoUploadProgress + \"%\"\n      });\n    });\n  }\n\n  handleLogoUpload(e) {\n    let id = Meteor.userId();\n    e.preventDefault();\n    this.setState({\n      isLogoUploading: true\n    });\n    this.calculateLogoProgress();\n    var comp = this; // console.log(comp);\n\n    this.state.upload.send(document.getElementById('s3fileLogo').files[0], function (error, downloadUrl) {\n      if (error) {\n        // Log service detailed response.\n        console.error('Error uploading ' + error.reason);\n        console.error(error);\n      } else {\n        comp.setState({\n          logoProgressValue: \"0%\"\n        });\n        comp.setState({\n          isLogoUploading: false\n        });\n        comp.uploadLogoComputation.stop();\n        console.log(\"Success file uploaded! \" + downloadUrl); // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n\n        Meteor.call('uploadTempPortfolioLogoImages', id, downloadUrl, new Date(), function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Inserted..!!\");\n          }\n        });\n      }\n    });\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n    this.setState({\n      edit: true\n    });\n    const tempPortfolioImages = TempPortfolioImages.find().fetch();\n    const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n    let pageName = this.refs.portfolioPageTitle.value;\n    let pageUrl = this.refs.portfolioPageName.value;\n    let pageVideoLink = this.refs.portfolioVideoLink.value;\n    let pageBody = $('#messageContent').summernote('code');\n    let userId = Meteor.userId();\n    let lastModified = new Date();\n    let id = e.target.getAttribute('id');\n    let amazons3 = [];\n    let logoAmazons3 = [];\n\n    for (i = 0; i < tempPortfolioImages.length; i++) {\n      if (!tempPortfolioImages[i].submitted) {\n        amazons3.push({\n          'amazonUrl': tempPortfolioImages[i].amazonUrl,\n          'uploadTime': tempPortfolioImages[i].uploadTime\n        });\n      }\n\n      Meteor.call('updateTempPortfolioImages', tempPortfolioImages[i]._id, true);\n    }\n\n    for (i = 0; i < tempPortfolioLogoImages.length; i++) {\n      if (!tempPortfolioLogoImages[i].submitted) {\n        amazons3.push({\n          'amazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n          'uploadTime': tempPortfolioLogoImages[i].uploadTime\n        });\n      }\n\n      Meteor.call('updateTempPortfolioLogoImages', tempPortfolioLogoImages[i]._id, true);\n    }\n\n    Meteor.call('updatePortfolioPage', id, pageName, pageUrl, pageVideoLink, pageBody, userId, lastModified, function (error, result) {\n      if (error) {\n        console.log(error.reason);\n      } else if (result) {\n        Bert.alert(\"Successfully Updated..!!\");\n      }\n    });\n\n    for (j = 0; j < tempPortfolioImages.length; j++) {\n      if (!tempPortfolioImages[j].submitted) {\n        Meteor.call('updatePortfolioAmazonUrl', tempPortfolioImages[j].amazonUrl, tempPortfolioImages[j].uploadTime, id, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Updated..!!\");\n          }\n        });\n      }\n    }\n\n    for (j = 0; j < tempPortfolioLogoImages.length; j++) {\n      if (!tempPortfolioLogoImages[j].submitted) {\n        Meteor.call('updatePortfolioLogoAmazonUrl', tempPortfolioLogoImages[j].logoAmazonUrl, tempPortfolioLogoImages[j].uploadTime, id, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Updated..!!\");\n          }\n        });\n      }\n    }\n\n    Meteor.call('removeTempPortfolioImages', Meteor.userId());\n    Meteor.call('removeTempPortfolioLogoImages', Meteor.userId());\n    swal(\"Done\", \"Your page has been Updated!.\", \"success\");\n    $(\".newTemplateForm\").css({\n      display: 'none'\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const tempPortfolioImages = TempPortfolioImages.find().fetch();\n    const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n    let pageName = this.refs.portfolioPageTitle.value;\n    let pageUrl = this.refs.portfolioPageName.value;\n    let pageVideoLink = this.refs.portfolioVideoLink.value;\n    let pageBody = $('#messageContent').summernote('code');\n    let userId = Meteor.userId();\n    let lastModified = \"\";\n    let pageNameExist = Portfolios.findOne({\n      'portfolioPageTitle': pageName\n    });\n    let pageUrlExist = Portfolios.findOne({\n      'portfolioPageName': pageUrl\n    });\n    let amazons3 = [];\n    let logoAmazons3 = [];\n\n    for (i = 0; i < tempPortfolioImages.length; i++) {\n      if (!tempPortfolioImages[i].submitted) amazons3.push({\n        'amazonUrl': tempPortfolioImages[i].amazonUrl,\n        'uploadTime': tempPortfolioImages[i].uploadTime\n      });\n      Meteor.call('updateTempPortfolioImages', tempPortfolioImages[i]._id, true);\n    }\n\n    for (i = 0; i < tempPortfolioLogoImages.length; i++) {\n      if (!tempPortfolioLogoImages[i].submitted) logoAmazons3.push({\n        'logoAmazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n        'uploadTime': tempPortfolioLogoImages[i].uploadTime\n      });\n      Meteor.call('updateTempPortfolioLogoImages', tempPortfolioLogoImages[i]._id, true);\n    }\n\n    if (pageNameExist) {\n      swal(\"Oops...!\", \"This page name is already taken!\", \"error\");\n    } else if (pageUrlExist) {\n      swal(\"Oops...!\", \"This page url is already taken!\", \"error\");\n    } else {\n      Meteor.call('createPortfolioPage', pageName, pageUrl, pageVideoLink, pageBody, amazons3, logoAmazons3, userId, lastModified, function (error, result) {\n        if (error) {\n          console.log(error.reason);\n        } else if (result) {\n          Bert.alert(\"Successfully Inserted..!!\");\n        }\n      });\n    }\n\n    Meteor.call('removeTempPortfolioImages', Meteor.userId());\n    Meteor.call('removeTempPortfolioLogoImages', Meteor.userId());\n    swal(\"Done\", \"Your page has been Created!.\", \"success\");\n    $(\".newTemplateForm\").css({\n      display: 'none'\n    });\n  }\n\n  edit(e) {\n    e.preventDefault();\n    this.setState({\n      'edit': true\n    });\n    const portfolios = Portfolios.find({\n      _id: this.props.params.id\n    }).fetch();\n    portfolios.map(portfolioPage => {\n      $(\"#portfolioPageTitle\").val(portfolioPage.portfolioPageTitle);\n      $(\"#portfolioPageName\").val(portfolioPage.portfolioPageName);\n      $(\"#portfolioVideoLink\").val(portfolioPage.portfolioVideoLink);\n      $('.note-editable').html(portfolioPage.portfolioPageBody);\n      $('.updatebtn').attr(\"id\", portfolioPage._id);\n    });\n    $(\".updatebtn\").css({\n      display: 'block'\n    });\n    $(\".sendtxtmsgbtn\").css({\n      display: 'none'\n    });\n    $(\".newTemplateForm\").css({\n      display: 'block'\n    });\n  }\n\n  delete(e) {\n    e.preventDefault(); // console.log(e.target.getAttribute('id'));\n\n    let id = e.target.getAttribute('id');\n    swal({\n      title: \"Are you sure?\",\n      text: \"You want to delete this page!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      closeOnConfirm: false,\n      html: false\n    }, function () {\n      Meteor.call(\"deletePortfolioPage\", id, function (error, result) {\n        if (error) {\n          console.log(error.reason);\n        } else if (result) {\n          Bert.alert(\"Successfully Deleted..!!\");\n        }\n      });\n      swal(\"Done\", \"Your page has been deleted!.\", \"success\");\n    });\n    $(\".newTemplateForm\").css({\n      display: 'none'\n    });\n  }\n\n  renderTableRow() {\n    return this.state.portfolios.map(portfolioPage => {\n      return React.createElement(\n        \"tr\",\n        null,\n        React.createElement(\n          \"td\",\n          null,\n          portfolioPage.portfolioPageTitle\n        ),\n        \" \",\n        React.createElement(\n          \"td\",\n          null,\n          React.createElement(\n            \"a\",\n            {\n              href: '/portfolio/' + portfolioPage._id,\n              onClick: this.edit.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"fa fa-pencil\"\n            }),\n            \"Edit\"\n          )\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          React.createElement(\n            \"a\",\n            {\n              href: \"#\",\n              id: portfolioPage._id,\n              onClick: this.delete.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"fa fa-trash-o\"\n            }),\n            \" Delete\"\n          )\n        )\n      );\n    });\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        \"div\",\n        {\n          className: \"content-wrapper\"\n        },\n        React.createElement(\n          \"section\",\n          {\n            className: \"content-header\"\n          },\n          React.createElement(\n            \"h1\",\n            null,\n            \"Dashboard\",\n            React.createElement(\n              \"small\",\n              null,\n              \"Version 3.0\"\n            )\n          ),\n          React.createElement(\n            \"ol\",\n            {\n              className: \"breadcrumb\"\n            },\n            React.createElement(\n              \"li\",\n              null,\n              React.createElement(\n                \"a\",\n                {\n                  href: \"#\"\n                },\n                React.createElement(\"i\", {\n                  className: \"fa fa-dashboard\"\n                }),\n                \" Home\"\n              )\n            ),\n            React.createElement(\n              \"li\",\n              {\n                className: \"active\"\n              },\n              \"Portfolio Page\"\n            )\n          )\n        ),\n        React.createElement(\n          \"section\",\n          {\n            className: \"content\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"row\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-md-12\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box-header with-border\"\n                  },\n                  React.createElement(\n                    \"h3\",\n                    {\n                      className: \"box-title\"\n                    },\n                    \"Portfolio Page\"\n                  ),\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"box-tools pull-right\"\n                    },\n                    React.createElement(\n                      \"button\",\n                      {\n                        type: \"button\",\n                        className: \"btn btn-box-tool btn-minus\",\n                        \"data-widget\": \"collapse\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-minus\"\n                      })\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"btn-group\"\n                      },\n                      React.createElement(\n                        \"button\",\n                        {\n                          type: \"button\",\n                          className: \"btn btn-box-tool dropdown-toggle\",\n                          \"data-toggle\": \"dropdown\"\n                        },\n                        React.createElement(\"i\", {\n                          className: \"fa fa-wrench\"\n                        })\n                      ),\n                      React.createElement(\n                        \"ul\",\n                        {\n                          className: \"dropdown-menu\",\n                          role: \"menu\"\n                        },\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Action\"\n                          )\n                        ),\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Another action \"\n                          )\n                        ),\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Something else here\"\n                          )\n                        ),\n                        React.createElement(\"li\", {\n                          className: \"divider\"\n                        }),\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Separated link\"\n                          )\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"button\",\n                      {\n                        type: \"button\",\n                        className: \"btn btn-box-tool\",\n                        \"data-widget\": \"remove\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-times\"\n                      })\n                    )\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box-body\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"row\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"col-md-12\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                          \"h1\",\n                          {\n                            className: \"reportTitleName\"\n                          },\n                          \"Portfolio PAGE\"\n                        ),\n                        React.createElement(\"hr\", null),\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                          },\n                          React.createElement(\n                            \"form\",\n                            {\n                              className: \"newTemplateForm\"\n                            },\n                            \"    \",\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Case Title\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"portfolioPageTitle\",\n                                    id: \"portfolioPageTitle\",\n                                    name: \"portfolioPageTitle\",\n                                    value: this.state.portfolioPageTitle,\n                                    onChange: this.handleChange,\n                                    className: \"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Client Name\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"portfolioPageName\",\n                                    id: \"portfolioPageName\",\n                                    name: \"portfolioPageName\",\n                                    value: this.state.portfolioPageName,\n                                    onChange: this.handleChange,\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Project Description\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\"\n                                    },\n                                    React.createElement(\"div\", {\n                                      id: \"messageContent\",\n                                      name: \"portfolioPageBody\",\n                                      ref: \"portfolioPageBody\"\n                                    })\n                                  )\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Video Link\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"portfolioVideoLink\",\n                                    id: \"portfolioVideoLink\",\n                                    name: \"portfolioVideoLink\",\n                                    value: this.state.portfolioVideoLink,\n                                    onChange: this.handleChange,\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Image Upload\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"file\",\n                                    ref: \"blogImageFile\",\n                                    id: \"s3file\",\n                                    name: \"blogImageFile\",\n                                    onChange: this.handleUpload.bind(this),\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  }),\n                                  this.state.isUploading ? React.createElement(\n                                    \"div\",\n                                    null,\n                                    React.createElement(\n                                      \"div\",\n                                      {\n                                        className: \"progress-sm\"\n                                      },\n                                      React.createElement(\n                                        \"div\",\n                                        {\n                                          className: \"progress-bar progress-bar-yellow\",\n                                          role: \"progressbar\",\n                                          \"data-width\": this.state.progressValue,\n                                          \"aria-valuemin\": \"0\",\n                                          \"aria-valuemax\": \"100\",\n                                          style: {\n                                            width: this.state.progressValue\n                                          }\n                                        },\n                                        React.createElement(\n                                          \"span\",\n                                          {\n                                            className: \"sr-only\"\n                                          },\n                                          this.state.progressValue,\n                                          \"% Complete\"\n                                        )\n                                      )\n                                    )\n                                  ) : React.createElement(\"div\", null)\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"imageContainer\"\n                                },\n                                this.renderImageData()\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Logo Image Upload\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"file\",\n                                    ref: \"blogImageFile\",\n                                    id: \"s3fileLogo\",\n                                    name: \"blogImageFile\",\n                                    onChange: this.handleLogoUpload.bind(this),\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  }),\n                                  this.state.isLogoUploading ? React.createElement(\n                                    \"div\",\n                                    null,\n                                    React.createElement(\n                                      \"div\",\n                                      {\n                                        className: \"progress-sm\"\n                                      },\n                                      React.createElement(\n                                        \"div\",\n                                        {\n                                          className: \"progress-bar progress-bar-yellow\",\n                                          role: \"progressbar\",\n                                          \"data-width\": this.state.logoProgressValue,\n                                          \"aria-valuemin\": \"0\",\n                                          \"aria-valuemax\": \"100\",\n                                          style: {\n                                            width: this.state.logoProgressValue\n                                          }\n                                        },\n                                        React.createElement(\n                                          \"span\",\n                                          {\n                                            className: \"sr-only\"\n                                          },\n                                          this.state.logoProgressValue,\n                                          \"% Complete\"\n                                        )\n                                      )\n                                    )\n                                  ) : React.createElement(\"div\", null)\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"imageContainer\"\n                                },\n                                this.renderLogoImageData()\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                              },\n                              React.createElement(\n                                \"button\",\n                                {\n                                  onClick: this.handleSubmit.bind(this),\n                                  type: \"submit\",\n                                  className: \"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\"\n                                },\n                                \"Submit Page\"\n                              ),\n                              React.createElement(\n                                \"button\",\n                                {\n                                  onClick: this.handleUpdate.bind(this),\n                                  type: \"submit\",\n                                  className: \"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\"\n                                },\n                                \"Update Page\"\n                              )\n                            )\n                          )\n                        ),\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"dataTable tableBasicPage\"\n                          },\n                          React.createElement(\n                            \"table\",\n                            {\n                              className: \"heavyTable\",\n                              className: \"display\",\n                              width: \"100%\",\n                              cellSpacing: \"0\"\n                            },\n                            React.createElement(\n                              \"thead\",\n                              null,\n                              React.createElement(\n                                \"tr\",\n                                null,\n                                React.createElement(\n                                  \"th\",\n                                  null,\n                                  \"Case Title\"\n                                ),\n                                React.createElement(\"th\", null),\n                                React.createElement(\"th\", null)\n                              )\n                            ),\n                            React.createElement(\n                              \"tfoot\",\n                              null,\n                              React.createElement(\n                                \"tr\",\n                                null,\n                                React.createElement(\n                                  \"th\",\n                                  null,\n                                  \"Case Title\"\n                                ),\n                                React.createElement(\"th\", null),\n                                React.createElement(\"th\", null)\n                              )\n                            ),\n                            React.createElement(\n                              \"tbody\",\n                              null,\n                              this.renderTableRow()\n                            )\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditPageContainer = createContainer(props => {\n  const postHandle = Meteor.subscribe('portfolios'); // var editPortfolios   = this.props.params.id;\n  // console.log(\"Param\" +editPortfolios);\n\n  const portfolios = Portfolios.find().fetch() || {};\n  console.log(portfolios);\n  const loading = !postHandle.ready();\n  return {\n    loading,\n    portfolios\n  };\n}, PortfolioPage);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/reactCMS/components/PortfolioPage.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","default","render","TrackerReact","createContainer","Validation","validator","Tracker","Portfolios","TempPortfolioImages","TempPortfolioLogoImages","PortfolioPage","constructor","props","metaContext","id","userId","dir","name","uploader","Slingshot","Upload","state","portfolioPageTitle","portfolios","portfolioPageName","portfolioPageBody","_id","portfolioVideoLink","upload","isUploading","isLogoUploading","logoProgressValue","progressValue","tempPortfolioImages","tempPortfolioLogoImages","edit","handleChange","bind","componentWillReceiveProps","nextProps","loading","setState","calculateProgress","uploadComputation","autorun","uploadProgress","Math","round","progress","isNaN","event","target","value","componentDidMount","$","length","dashboardCss","document","createElement","type","rel","href","head","append","hasClass","console","log","adminLte","src","setAttribute","summernote","height","maxHeight","minHeight","portfolioPageTracker","subscribe","find","fetch","tempPortfolioImageTracker","tempPortfolioLogoImageTracker","componentWillUnmount","remove","i","submitted","call","amazonUrl","logoAmazonUrl","stop","handleClose","e","preventDefault","getAttribute","params","handleLogoClose","renderImageData","imageArray","j","s3","push","k","map","tempPortfolioImage","handleUpload","comp","send","getElementById","files","error","downloadUrl","reason","Date","result","Bert","alert","renderLogoImageData","logoS3","tempPortfolioLogoImage","calculateLogoProgress","uploadLogoComputation","logoUploadProgress","handleLogoUpload","handleUpdate","pageName","refs","pageUrl","pageVideoLink","pageBody","lastModified","amazons3","logoAmazons3","uploadTime","swal","css","display","handleSubmit","pageNameExist","findOne","pageUrlExist","portfolioPage","val","html","attr","delete","title","text","showCancelButton","confirmButtonColor","confirmButtonText","closeOnConfirm","renderTableRow","width","EditPageContainer","postHandle","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/reactCMS/components/PortfolioPage.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\n\nimport {Portfolios} from '../api/Portfolios';\nimport {TempPortfolioImages} from '../api/Portfolios';\nimport {TempPortfolioLogoImages} from '../api/Portfolios';\n\nclass PortfolioPage extends TrackerReact (Component){\n  constructor(props) {\n\t  super(props);\n    var metaContext = {id: Meteor.userId(), dir: \"images\" , name: \"portfolioImage\"};\n    var uploader = new Slingshot.Upload(\"myFileUploads\" ,metaContext);\n\t  this.state = {\n\t    portfolioPageTitle      : this.props.portfolios,\n\t    portfolioPageName       : this.props.portfolios,\n\t    portfolioPageBody       : this.props.portfolios,\n      id                      : this.props.portfolios._id,\n      portfolios              : [],\n      portfolioVideoLink      : this.props.portfolios,\n      upload                  : uploader,\n      isUploading             : false,\n      isLogoUploading         : false,\n      logoProgressValue       : \"0%\",\n      progressValue           : \"0%\",\n      tempPortfolioImages     : [],\n      tempPortfolioLogoImages : [],\n      edit                    : false,\n\t  };\n  this.handleChange = this.handleChange.bind(this);\n\t}\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.portfolios){\n         this.setState({\n             portfolioPageTitle    : nextProps.portfolios.portfolioPageTitle,\n             portfolioPageName     : nextProps.portfolios.portfolioPageName,\n             portfolioPageBody     : nextProps.portfolios.portfolioPageBody,\n             portfolioVideoLink    : nextProps.portfolios.portfolioVideoLink,\n             id                    : nextProps.portfolios._id,\n         });\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  calculateProgress(){\n    this.uploadComputation = Tracker.autorun(() => {\n         const uploadProgress = Math.round(this.state.upload.progress() * 100);\n         if (!isNaN(uploadProgress)) this.setState({progressValue: uploadProgress +\"%\" });\n    });\n  }\n  handleChange(event){\n   const target = event.target;\n   const name   = target.name;\n   this.setState({\n    [name]: event.target.value,\n   });\n  }\n  componentDidMount() {\n    if(!!!$(\"link[href='/css/dashboard.css']\").length > 0){\n      var dashboardCss = document.createElement(\"link\");\n      dashboardCss.type=\"text/css\";\n      dashboardCss.rel =\"stylesheet\";\n      dashboardCss.href=\"/css/dashboard.css\";\n      document.head.append(dashboardCss);\n    }\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n      console.log(\"I am appended!\");\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      adminLte.setAttribute('id','adminLte');\n      $(\"body\").append(adminLte);\n    }\n    $('#messageContent').summernote({\n        height: 190,\n        maxHeight:190,\n        minHeight:175,\n      });\n    this.portfolioPageTracker = Tracker.autorun( ()=> {\n      Meteor.subscribe(\"portfolios\");\n      const portfolios = Portfolios.find().fetch();\n      this.setState({portfolios: portfolios});\n    });\n    this.tempPortfolioImageTracker = Tracker.autorun(()=>{\n      Meteor.subscribe('tempPortfolioImages');\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      this.setState({tempPortfolioImages});\n    });\n    this.tempPortfolioLogoImageTracker = Tracker.autorun(()=>{\n      Meteor.subscribe('tempPortfolioLogoImages');\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      this.setState({tempPortfolioLogoImages});\n    });\n    // $(\".image-box\").css({'background-image':'url('+  $(\".image-box\").attr('data-image')+')','background-size': 'cover'});\n  }\n  componentWillUnmount() {\n    $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n    const tempPortfolioImages = TempPortfolioImages.find().fetch();\n    for(i=0;i<tempPortfolioImages.length;i++){\n      if(!tempPortfolioImages[i].submitted)\n        Meteor.call('removeS3Data',tempPortfolioImages[i].amazonUrl);\n    }\n    const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n    for(i=0;i<tempPortfolioLogoImages.length;i++){\n      if(!tempPortfolioLogoImages[i].submitted)\n        Meteor.call('removeS3Data',tempPortfolioLogoImages[i].logoAmazonUrl);\n    }\n    Meteor.call('removePortfolioUnsubmitImages',Meteor.userId());\n    Meteor.call('removePortfolioLogoUnsubmitImages',Meteor.userId());\n    console.log('unmounted');\n    if(this.portfolioPageTracker)\n      this.portfolioPageTracker.stop();\n    if(this.tempPortfolioImageTracker)\n      this.tempPortfolioImageTracker.stop();\n    if(this.tempPortfolioLogoImageTracker)\n      this.tempPortfolioLogoImageTracker.stop();\n  }\n  handleClose(e){\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n    if(this.props.params.id&&this.state.edit){\n      Meteor.call('removeS3Data',e.target.getAttribute('id'));\n      Meteor.call('updateEditPortfolioPage',e.target.getAttribute('id'));\n    }\n    Meteor.call('removePortfolioUrlImages',e.target.getAttribute('id'));\n    Meteor.call('removeS3Data',e.target.getAttribute('id'));\n  }\n  handleLogoClose(e){\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n    if(this.props.params.id&&this.state.edit){\n      Meteor.call('removeS3Data',e.target.getAttribute('id'));\n      Meteor.call('updateEditPortfolioLogoPage',e.target.getAttribute('id'));\n    }\n    Meteor.call('removePortfolioLogoUrlImages',e.target.getAttribute('id'));\n    Meteor.call('removeS3Data',e.target.getAttribute('id'));\n  }\n  renderImageData(){\n    if(this.props.params.id && this.state.edit){\n      console.log(\"I have Id\");\n      const portfolios = Portfolios.find({'_id': this.props.params.id}).fetch();\n      var imageArray =[];\n      for(i=0;i<portfolios.length;i++){\n        for(j=0;j<portfolios[i].s3.length; j++){\n          if(portfolios[i].s3[j].amazonUrl != ''){\n            imageArray.push(\n            <div key={j} data-image={portfolios[i].s3[j].amazonUrl} className=\"image-box\">\n              <img src={portfolios[i].s3[j].amazonUrl} alt=\"\"/><button id={portfolios[i].s3[j].amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>);\n          }\n        }\n      }\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      for(k=0;k<tempPortfolioImages.length;k++){\n        if(tempPortfolioImages[k].amazonUrl != ''&& !tempPortfolioImages[k].submitted)\n          imageArray.push(\n            <div data-image={tempPortfolioImages[k].amazonUrl} className=\"image-box\">\n              <img src={tempPortfolioImages[k].amazonUrl} alt=\"\"/><button id={tempPortfolioImages[k].amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>\n          );\n      }\n      return imageArray;\n  }else{\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      return tempPortfolioImages.map((tempPortfolioImage)=>{\n        if(tempPortfolioImage.amazonUrl != ''&& !tempPortfolioImage.submitted)\n          return <div data-image={tempPortfolioImage.amazonUrl} className=\"image-box\">\n            <img src={tempPortfolioImage.amazonUrl} alt=\"\"/><button id={tempPortfolioImage.amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>;\n      });\n    }\n}\n  handleUpload(e) {\n      let id = Meteor.userId();\n      e.preventDefault();\n      this.setState({isUploading: true});\n      this.calculateProgress();\n      var comp = this;\n      // console.log(comp);\n      this.state.upload.send(document.getElementById('s3file').files[0], function (error, downloadUrl) {\n        if (error) {\n          // Log service detailed response.\n          console.error('Error uploading' + downloadUrl + error.reason);\n          console.error (error);\n        }\n        else {\n          comp.setState({progressValue:\"0%\"});\n          comp.setState({isUploading:false});\n          comp.uploadComputation.stop();\n          console.log(\"Success file uploaded! \" + downloadUrl);\n          // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n          Meteor.call('uploadTempPortfolioImages',id,downloadUrl,new Date(), function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n        }\n      });\n    }\n    renderLogoImageData(){\n      if(this.props.params.id && this.state.edit){\n        const portfolios = Portfolios.find({'_id': this.props.params.id}).fetch();\n        var imageArray =[];\n        for(i=0;i<portfolios.length;i++){\n          for(j=0;j<portfolios[i].logoS3.length; j++){\n            if(portfolios[i].logoS3[j].logoAmazonUrl != ''){\n              imageArray.push(\n              <div key={j} data-image={portfolios[i].logoS3[j].logoAmazonUrl} className=\"image-box\">\n                <img src={portfolios[i].logoS3[j].logoAmazonUrl} alt=\"\"/><button id={portfolios[i].logoS3[j].logoAmazonUrl} className=\"close\" onClick={this.handleLogoClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>);\n            }\n          }\n        }\n        const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n        for(k=0;k<tempPortfolioLogoImages.length;k++){\n          if(tempPortfolioLogoImages[k].logoAmazonUrl != ''&& !tempPortfolioLogoImages[k].submitted)\n            imageArray.push(\n              <div data-image={tempPortfolioLogoImages[k].logoAmazonUrl} className=\"image-box\">\n                <img src={tempPortfolioLogoImages[k].logoAmazonUrl} alt=\"\"/><button id={tempPortfolioLogoImages[k].logoAmazonUrl} className=\"close\" onClick={this.handleLogoClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>\n            );\n        }\n        return imageArray;\n    }else{\n        const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n        return tempPortfolioLogoImages.map((tempPortfolioLogoImage)=>{\n          if(tempPortfolioLogoImage.logoAmazonUrl != ''&& !tempPortfolioLogoImage.submitted)\n            return <div data-image={tempPortfolioLogoImage.logoAmazonUrl} className=\"image-box\">\n              <img src={tempPortfolioLogoImage.logoAmazonUrl} alt=\"\"/><button id={tempPortfolioLogoImage.logoAmazonUrl} className=\"close\" onClick={this.handleLogoClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>;\n        });\n      }\n  }\n    calculateLogoProgress(){\n      this.uploadLogoComputation = Tracker.autorun(() => {\n           const logoUploadProgress = Math.round(this.state.upload.progress() * 100);\n           if (!isNaN(logoUploadProgress)) this.setState({logoProgressValue: logoUploadProgress +\"%\" });\n      });\n    }\n    handleLogoUpload(e) {\n        let id = Meteor.userId();\n        e.preventDefault();\n        this.setState({isLogoUploading: true});\n        this.calculateLogoProgress();\n        var comp = this;\n        // console.log(comp);\n        this.state.upload.send(document.getElementById('s3fileLogo').files[0], function (error, downloadUrl) {\n          if (error) {\n            // Log service detailed response.\n            console.error('Error uploading '  + error.reason);\n            console.error (error);\n          }\n          else {\n            comp.setState({logoProgressValue:\"0%\"});\n            comp.setState({isLogoUploading:false});\n            comp.uploadLogoComputation.stop();\n            console.log(\"Success file uploaded! \" + downloadUrl);\n            // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n            Meteor.call('uploadTempPortfolioLogoImages',id,downloadUrl,new Date(), function(error,result){\n                if(error){\n                    console.log(error.reason);\n                }else if(result){\n                    Bert.alert(\"Successfully Inserted..!!\");\n                }\n            });\n          }\n        });\n      }\n  handleUpdate(e){\n    e.preventDefault();\n    this.setState({edit:true});\n    const tempPortfolioImages  = TempPortfolioImages.find().fetch();\n    const tempPortfolioLogoImages  = TempPortfolioLogoImages.find().fetch();\n    let pageName      = this.refs.portfolioPageTitle.value;\n    let pageUrl       = this.refs.portfolioPageName.value;\n    let pageVideoLink = this.refs.portfolioVideoLink.value;\n    let pageBody      = $('#messageContent').summernote('code');\n    let userId        = Meteor.userId();\n    let lastModified  = new Date();\n    let id            = e.target.getAttribute('id');\n    let amazons3      = [];\n    let logoAmazons3  = [];\n    for(i=0;i<tempPortfolioImages.length;i++){\n      if(!tempPortfolioImages[i].submitted){\n        amazons3.push({\n          'amazonUrl': tempPortfolioImages[i].amazonUrl,\n          'uploadTime': tempPortfolioImages[i].uploadTime,\n        });\n      }\n      Meteor.call('updateTempPortfolioImages',tempPortfolioImages[i]._id,true);\n    }\n    for(i=0;i<tempPortfolioLogoImages.length;i++){\n      if(!tempPortfolioLogoImages[i].submitted){\n        amazons3.push({\n          'amazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n          'uploadTime': tempPortfolioLogoImages[i].uploadTime,\n        });\n      }\n      Meteor.call('updateTempPortfolioLogoImages',tempPortfolioLogoImages[i]._id,true);\n    }\n    Meteor.call('updatePortfolioPage',id,pageName,pageUrl,pageVideoLink,pageBody,userId,lastModified,function(error,result){\n        if(error){\n            console.log(error.reason);\n        }else if(result){\n            Bert.alert(\"Successfully Updated..!!\");\n        }\n    });\n    for(j=0;j<tempPortfolioImages.length;j++){\n      if(!tempPortfolioImages[j].submitted){\n        Meteor.call('updatePortfolioAmazonUrl',tempPortfolioImages[j].amazonUrl,tempPortfolioImages[j].uploadTime,id,function(error,result){\n            if(error){\n                console.log(error.reason);\n            }else if(result){\n                Bert.alert(\"Successfully Updated..!!\");\n            }\n        });\n      }\n    }\n    for(j=0;j<tempPortfolioLogoImages.length;j++){\n      if(!tempPortfolioLogoImages[j].submitted){\n        Meteor.call('updatePortfolioLogoAmazonUrl',tempPortfolioLogoImages[j].logoAmazonUrl,tempPortfolioLogoImages[j].uploadTime,id,function(error,result){\n            if(error){\n                console.log(error.reason);\n            }else if(result){\n                Bert.alert(\"Successfully Updated..!!\");\n            }\n        });\n      }\n    }\n    Meteor.call('removeTempPortfolioImages',Meteor.userId());\n    Meteor.call('removeTempPortfolioLogoImages',Meteor.userId());\n    swal(\"Done\",\n    \"Your page has been Updated!.\",\n    \"success\");\n    $(\".newTemplateForm\").css({display:'none'});\n  }\n  handleSubmit(e){\n      e.preventDefault();\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      let pageName = this.refs.portfolioPageTitle.value;\n      let pageUrl = this.refs.portfolioPageName.value;\n      let pageVideoLink = this.refs.portfolioVideoLink.value;\n      let pageBody = $('#messageContent').summernote('code');\n      let userId = Meteor.userId();\n      let lastModified = \"\";\n      let pageNameExist = Portfolios.findOne({'portfolioPageTitle': pageName});\n      let pageUrlExist = Portfolios.findOne({'portfolioPageName': pageUrl});\n      let amazons3 = [];\n      let logoAmazons3 = [];\n      for(i=0;i<tempPortfolioImages.length;i++){\n        if(!tempPortfolioImages[i].submitted)\n          amazons3.push({\n            'amazonUrl': tempPortfolioImages[i].amazonUrl,\n            'uploadTime': tempPortfolioImages[i].uploadTime,\n          });\n        Meteor.call('updateTempPortfolioImages',tempPortfolioImages[i]._id,true);\n      }\n      for(i=0;i<tempPortfolioLogoImages.length;i++){\n        if(!tempPortfolioLogoImages[i].submitted)\n          logoAmazons3.push({\n            'logoAmazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n            'uploadTime': tempPortfolioLogoImages[i].uploadTime,\n          });\n        Meteor.call('updateTempPortfolioLogoImages',tempPortfolioLogoImages[i]._id,true);\n      }\n      if(pageNameExist){\n          swal(\"Oops...!\",\"This page name is already taken!\",\"error\");\n      }else if(pageUrlExist){\n          swal(\"Oops...!\",\"This page url is already taken!\",\"error\");\n      }else{\n          Meteor.call('createPortfolioPage',pageName,pageUrl,pageVideoLink,pageBody,amazons3,logoAmazons3,userId,lastModified,function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n      }\n      Meteor.call('removeTempPortfolioImages',Meteor.userId());\n      Meteor.call('removeTempPortfolioLogoImages',Meteor.userId());\n      swal(\"Done\",\n      \"Your page has been Created!.\",\n      \"success\");\n        $(\".newTemplateForm\").css({display:'none'});\n  }\n  edit(e){\n    e.preventDefault();\n    this.setState({'edit': true});\n    const portfolios = Portfolios.find({_id: this.props.params.id}).fetch();\n    portfolios.map((portfolioPage)=>{\n      $(\"#portfolioPageTitle\").val(portfolioPage.portfolioPageTitle);\n      $(\"#portfolioPageName\").val(portfolioPage.portfolioPageName);\n      $(\"#portfolioVideoLink\").val(portfolioPage.portfolioVideoLink);\n      $('.note-editable').html(portfolioPage.portfolioPageBody);\n      $('.updatebtn').attr(\"id\",portfolioPage._id);\n    });\n    $(\".updatebtn\").css({display:'block'});\n    $(\".sendtxtmsgbtn\").css({display:'none'});\n    $(\".newTemplateForm\").css({display:'block'});\n\n  }\n  delete(e){\n    e.preventDefault();\n    // console.log(e.target.getAttribute('id'));\n    let id = e.target.getAttribute('id');\n    swal({\n      title: \"Are you sure?\",\n      text: \"You want to delete this page!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      closeOnConfirm: false,\n      html: false\n    }, function(){\n      Meteor.call(\"deletePortfolioPage\",id,function(error,result){\n          if(error){\n              console.log(error.reason);\n          }else if(result){\n              Bert.alert(\"Successfully Deleted..!!\");\n          }\n      });\n      swal(\"Done\",\n      \"Your page has been deleted!.\",\n      \"success\");\n    });\n      $(\".newTemplateForm\").css({display:'none'});\n  }\n\n  renderTableRow(){\n    return this.state.portfolios.map((portfolioPage) =>{\n      return <tr><td>{portfolioPage.portfolioPageTitle}</td> <td><a href={'/portfolio/' +portfolioPage._id} onClick={this.edit.bind(this)}>\n        <i className=\"fa fa-pencil\"></i>Edit\n      </a></td><td><a href=\"#\" id={portfolioPage._id} onClick={this.delete.bind(this)}>\n        <i className=\"fa fa-trash-o\"></i> Delete\n      </a></td></tr>;\n      });\n  }\n  render(){\n    return(\n      <div>\n        {/* Content Wrapper. Contains page content */}\n        <div className=\"content-wrapper\">\n          {/* Content Header (Page header) */}\n          <section className=\"content-header\">\n            <h1>Dashboard\n              <small>Version 3.0</small>\n            </h1>\n            <ol className=\"breadcrumb\">\n              <li>\n                <a href=\"#\"><i className=\"fa fa-dashboard\" /> Home</a></li>\n              <li className=\"active\">Portfolio Page</li>\n            </ol>\n          </section>\n          {/* Main content */}\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"box\">\n                  <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">\n                      Portfolio Page\n                    </h3>\n                    <div className=\"box-tools pull-right\">\n                      <button type=\"button\" className=\"btn btn-box-tool btn-minus\" data-widget=\"collapse\">\n                        <i className=\"fa fa-minus\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\">\n                          <i className=\"fa fa-wrench\" /></button>\n                        <ul className=\"dropdown-menu\" role=\"menu\">\n                          <li>\n                            <a href=\"#\">Action</a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Another action </a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Something else here</a>\n                          </li>\n                          <li className=\"divider\" />\n                          <li>\n                            <a href=\"#\">\n                            Separated link\n                            </a>\n                          </li>\n                        </ul>\n                      </div>\n                      <button type=\"button\" className=\"btn btn-box-tool\" data-widget=\"remove\">\n                        <i className=\"fa fa-times\" />\n                      </button>\n                    </div>\n                  </div>\n                  {/* /.box-header */}\n                  <div className=\"box-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div className=\"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t<h1 className=\"reportTitleName\">Portfolio PAGE</h1>\n                \t\t\t\t\t<hr/>\n                \t\t\t\t\t<div className=\"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t<form className=\"newTemplateForm\">    <div className=\"row inputrow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Case Title<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"portfolioPageTitle\" id=\"portfolioPageTitle\" name=\"portfolioPageTitle\" value={this.state.portfolioPageTitle}  onChange={this.handleChange} className=\"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Client Name<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"portfolioPageName\" id=\"portfolioPageName\" name=\"portfolioPageName\" value={this.state.portfolioPageName} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"row inputrow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Project Description<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t\t <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\">\n                \t\t\t\t\t\t\t\t\t \t<div id=\"messageContent\" name=\"portfolioPageBody\"\n                                                        ref = \"portfolioPageBody\"\n                                                            ></div>\n                \t\t\t\t\t\t\t\t\t </div>\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Video Link<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"portfolioVideoLink\" id=\"portfolioVideoLink\" name=\"portfolioVideoLink\" value={this.state.portfolioVideoLink} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Image Upload<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"file\" ref=\"blogImageFile\" id=\"s3file\" name=\"blogImageFile\"  onChange={this.handleUpload.bind(this)}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                          {this.state.isUploading?\n                                            <div><div className=\"progress-sm\">\n                                              <div className=\"progress-bar progress-bar-yellow\" role=\"progressbar\" data-width={this.state.progressValue} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.progressValue} } >\n                                                  <span className=\"sr-only\">{this.state.progressValue}% Complete\n                                                  </span>\n                                                </div>\n                                              </div>\n                                            </div>: <div></div>}\n\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                              </div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"imageContainer\">\n                                  {this.renderImageData()}\n                                </div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                  <div className=\"form-group subjectDiv\">\n                                   <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Logo Image Upload<span className=\"astrick\">*</span>:</label>\n                                        <input type=\"file\" ref=\"blogImageFile\" id=\"s3fileLogo\" name=\"blogImageFile\"  onChange={this.handleLogoUpload.bind(this)}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                          {this.state.isLogoUploading?\n                                            <div><div className=\"progress-sm\">\n                                              <div className=\"progress-bar progress-bar-yellow\" role=\"progressbar\" data-width={this.state.logoProgressValue} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.logoProgressValue} } >\n                                                  <span className=\"sr-only\">{this.state.logoProgressValue}% Complete\n                                                  </span>\n                                                </div>\n                                              </div>\n                                            </div>: <div></div>}\n\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"imageContainer\">\n                                  {this.renderLogoImageData()}\n                                </div>\n                              </div>\n\n                \t\t\t\t\t\t\t<div className=\"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t<button onClick={this.handleSubmit.bind(this)} type=\"submit\" className=\"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\">Submit Page</button>\n                \t\t\t\t\t\t\t\t<button  onClick={this.handleUpdate.bind(this)} type=\"submit\" className=\"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\">Update Page</button>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t</form>\n                \t\t\t\t\t</div>\n                          <div className=\"dataTable tableBasicPage\">\n                              <table className=\"heavyTable\"  className=\"display\" width=\"100%\" cellSpacing=\"0\">\n                                  <thead>\n                                      <tr>\n                                          <th>Case Title</th>\n                                          <th></th>\n                                          <th></th>\n                                      </tr>\n                                  </thead>\n                                  <tfoot>\n                                      <tr>\n                                        <th>Case Title</th>\n                                        <th></th>\n                                        <th></th>\n                                      </tr>\n                                  </tfoot>\n                                  <tbody>\n                                          {this.renderTableRow()}\n                                  </tbody>\n                              </table>\n                          </div>\n                \t\t\t\t</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          {/* /.content */}\n        </div>\n        {/* /.content-wrapper */}\n      </div>\n\n    );\n  }\n}\nEditPageContainer = createContainer( props => {\n\n    const postHandle = Meteor.subscribe('portfolios');\n\t  // var editPortfolios   = this.props.params.id;\n    // console.log(\"Param\" +editPortfolios);\n    const portfolios = Portfolios.find().fetch()|| {};\n    console.log(portfolios);\n    const loading = !postHandle.ready();\n\n    return {\n        loading,\n        portfolios,\n    };\n}, PortfolioPage);\n\nexport default EditPageContainer;\n"]},"hash":"fc7cde2657e7182542b650c498505e4e0b0dc77f"}

{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"/imports/website/ServiceProcess/api/TicketMaster.js","imported":["TicketMaster"],"specifiers":[{"kind":"named","imported":"TicketMaster","local":"TicketMaster"}]},{"source":"/imports/website/ServiceProcess/api/Order.js","imported":["Order"],"specifiers":[{"kind":"named","imported":"Order","local":"Order"}]}],"exports":{"exported":["AcceptedTickets"],"specifiers":[{"kind":"local","local":"AcceptedTickets","exported":"default"}]}}},"options":{"filename":"imports/dashboard/ticketManagement/myTickets/AcceptedTickets.jsx","filenameRelative":"imports/dashboard/ticketManagement/myTickets/AcceptedTickets.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/myTickets/AcceptedTickets.jsx.map","sourceFileName":"imports/dashboard/ticketManagement/myTickets/AcceptedTickets.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AcceptedTickets"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return AcceptedTickets;\n    }\n});\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 0);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo: function (v) {\n        Mongo = v;\n    }\n}, 1);\nvar React = void 0,\n    Component = void 0;\nmodule.watch(require(\"react\"), {\n    \"default\": function (v) {\n        React = v;\n    },\n    Component: function (v) {\n        Component = v;\n    }\n}, 2);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n    render: function (v) {\n        render = v;\n    }\n}, 3);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n    \"default\": function (v) {\n        TrackerReact = v;\n    }\n}, 4);\nvar createContainer = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    createContainer: function (v) {\n        createContainer = v;\n    }\n}, 5);\nvar Validation = void 0;\nmodule.watch(require(\"react-validation\"), {\n    \"default\": function (v) {\n        Validation = v;\n    }\n}, 6);\nvar validator = void 0;\nmodule.watch(require(\"validator\"), {\n    \"default\": function (v) {\n        validator = v;\n    }\n}, 7);\nvar Tracker = void 0;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker: function (v) {\n        Tracker = v;\n    }\n}, 8);\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n    browserHistory: function (v) {\n        browserHistory = v;\n    }\n}, 9);\nvar Link = void 0;\nmodule.watch(require(\"react-router\"), {\n    Link: function (v) {\n        Link = v;\n    }\n}, 10);\nvar TicketMaster = void 0;\nmodule.watch(require(\"/imports/website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketMaster: function (v) {\n        TicketMaster = v;\n    }\n}, 11);\nvar Order = void 0;\nmodule.watch(require(\"/imports/website/ServiceProcess/api/Order.js\"), {\n    Order: function (v) {\n        Order = v;\n    }\n}, 12);\n\nvar AcceptedTickets = function (_TrackerReact) {\n    (0, _inherits3.default)(AcceptedTickets, _TrackerReact);\n\n    function AcceptedTickets(props) {\n        (0, _classCallCheck3.default)(this, AcceptedTickets);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, _TrackerReact.call(this, props));\n\n        _this.state = {\n            \"tableListData\": [],\n            \"tatDate\": \"\",\n            \"subscribe\": Meteor.subscribe(\"allTickets\"),\n            \"subscribeOrder\": Meteor.subscribe(\"allOrders\"),\n            \"userSubscribe\": Meteor.subscribe(\"userData\")\n        };\n        return _this;\n    }\n\n    AcceptedTickets.prototype.componentDidMount = function () {\n        function componentDidMount() {\n            var _this2 = this;\n\n            this.userTracker = Tracker.autorun(function () {\n                if (_this2.state.subscribe.ready()) {\n                    // var allTickets = TicketMaster.find({\"ticketElement.empid\":Meteor.userId(),\"ticketStatus.status\":\"Accepted\"}).fetch();\n                    // var allTickets = TicketMaster.find({\"ticketElement.empid\":Meteor.userId()}).fetch();\n                    var allTickets = TicketMaster.find({\n                        \"ticketElement.empid\": Meteor.userId(),\n                        \"ticketElement.status\": \"Accepted\"\n                    }).fetch();\n                    console.log(allTickets);\n\n                    for (var i = 0; i < allTickets.length; i++) {\n                        var allOrders = Order.findOne({\n                            \"_id\": allTickets[i].orderId\n                        });\n\n                        for (var j = 0; j < allTickets[i].ticketStatus.length; j++) {\n                            var dateValue = allTickets[i].ticketStatus[0].createdAt;\n                            var startdate = moment(dateValue).format('L');\n                            var new_date = moment(startdate, \"MM-DD-YYYY\").add(1, 'days');\n                            var day = new_date.format('DD');\n                            var month = new_date.format('MM');\n                            var year = new_date.format('YYYY');\n                            var tatDate = month + '/' + day + '/' + year;\n                        }\n                    } // console.log(\"allTickets :\"+JSON.stringify(allTickets));\n\n\n                    if (allTickets) {\n                        _this2.setState({\n                            'tableListData': allTickets,\n                            'tatDate': tatDate,\n                            'orderId': allOrders.orderNo\n                        });\n                    }\n                }\n            });\n        }\n\n        return componentDidMount;\n    }();\n\n    AcceptedTickets.prototype.changeStatus = function () {\n        function changeStatus(event) {\n            event.preventDefault();\n            var ticketId = $(event.currentTarget).attr('data-id'); // console.log(\"ticketId :\"+ticketId);\n\n            var userID = Meteor.userId(); // console.log(\"userID :\"+userID);\n\n            var userData = Meteor.users.findOne({\n                \"_id\": userID\n            }); // console.log(\"userData :\"+JSON.stringify(userData));\n\n            if (userData) {\n                var staffName = userData.profile.firstname + \" \" + userData.profile.lastname; // console.log(\"staffName :\"+staffName);\n\n                var role = userData.roles;\n                var ticketElem = {\n                    ticketid: ticketId,\n                    staffId: userID,\n                    staffname: staffName,\n                    role: userData.roles\n                };\n                Meteor.call('updateTicket', ticketElem, function (error, result) {\n                    if (result) {\n                        swal('Ticket Accepted!');\n                    }\n                });\n            }\n        }\n\n        return changeStatus;\n    }();\n\n    AcceptedTickets.prototype.render = function () {\n        function render() {\n            var _this3 = this;\n\n            return React.createElement(\n                \"div\",\n                {\n                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                    \"div\",\n                    null,\n                    React.createElement(\n                        \"div\",\n                        {\n                            className: \"reports-table-main\"\n                        },\n                        React.createElement(\n                            \"table\",\n                            {\n                                id: \"subscriber-list-outerTable\",\n                                className: \"newOrderwrap subscriber-list-outerTable table table-bordered table-hover table-striped table-striped table-responsive table-condensed table-bordered\"\n                            },\n                            React.createElement(\n                                \"thead\",\n                                {\n                                    className: \"table-head umtblhdr\"\n                                },\n                                React.createElement(\n                                    \"tr\",\n                                    {\n                                        className: \"hrTableHeader info UML-TableTr\"\n                                    },\n                                    React.createElement(\n                                        \"th\",\n                                        {\n                                            className: \"\"\n                                        },\n                                        \" Ticket No.\"\n                                    ),\n                                    React.createElement(\n                                        \"th\",\n                                        {\n                                            className: \"\"\n                                        },\n                                        \" Order ID \"\n                                    ),\n                                    React.createElement(\n                                        \"th\",\n                                        {\n                                            className: \"\"\n                                        },\n                                        \" Service Name \"\n                                    ),\n                                    React.createElement(\n                                        \"th\",\n                                        {\n                                            className: \"\"\n                                        },\n                                        \" Arrival Date \"\n                                    ),\n                                    React.createElement(\n                                        \"th\",\n                                        {\n                                            className: \"\"\n                                        },\n                                        \" TAT(Date) \"\n                                    ),\n                                    React.createElement(\n                                        \"th\",\n                                        {\n                                            className: \"\"\n                                        },\n                                        \" Status \"\n                                    )\n                                )\n                            ),\n                            React.createElement(\n                                \"tbody\",\n                                null,\n                                this.state.tableListData.map(function (data, index) {\n                                    return React.createElement(\n                                        \"tr\",\n                                        {\n                                            key: index\n                                        },\n                                        React.createElement(\n                                            \"td\",\n                                            null,\n                                            React.createElement(\n                                                Link,\n                                                {\n                                                    to: \"/admin/ticket/\" + data._id\n                                                },\n                                                data.ticketNumber\n                                            )\n                                        ),\n                                        React.createElement(\n                                            \"td\",\n                                            null,\n                                            data.state.orderId\n                                        ),\n                                        React.createElement(\n                                            \"td\",\n                                            null,\n                                            data.serviceName\n                                        ),\n                                        React.createElement(\n                                            \"td\",\n                                            null,\n                                            moment(data.ticketStatus[0].createdAt).format('L')\n                                        ),\n                                        React.createElement(\n                                            \"td\",\n                                            null,\n                                            \" \",\n                                            data.state.tatDate\n                                        ),\n                                        React.createElement(\n                                            \"td\",\n                                            null,\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"button\",\n                                                    \"data-id\": data._id,\n                                                    onClick: _this3.changeStatus.bind(_this3),\n                                                    className: \" newOrderbtn btn btn-primary\"\n                                                },\n                                                \"New\"\n                                            )\n                                        )\n                                    );\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n\n        return render;\n    }();\n\n    return AcceptedTickets;\n}(TrackerReact(Component));","map":{"version":3,"sources":["imports/dashboard/ticketManagement/myTickets/AcceptedTickets.jsx"],"names":["module","export","AcceptedTickets","Meteor","watch","require","v","Mongo","React","Component","render","TrackerReact","createContainer","Validation","validator","Tracker","browserHistory","Link","TicketMaster","Order","props","state","subscribe","componentDidMount","userTracker","autorun","ready","allTickets","find","userId","fetch","console","log","i","length","allOrders","findOne","orderId","j","ticketStatus","dateValue","createdAt","startdate","moment","format","new_date","add","day","month","year","tatDate","setState","orderNo","changeStatus","event","preventDefault","ticketId","$","currentTarget","attr","userID","userData","users","staffName","profile","firstname","lastname","role","roles","ticketElem","ticketid","staffId","staffname","call","error","result","swal","tableListData","map","data","index","_id","ticketNumber","serviceName","bind"],"mappings":"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","file":"imports/dashboard/ticketManagement/myTickets/AcceptedTickets.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\nimport { browserHistory } from 'react-router';\nimport { Link } from 'react-router';\nimport {TicketMaster} from \"/imports/website/ServiceProcess/api/TicketMaster.js\";\nimport {Order} from \"/imports/website/ServiceProcess/api/Order.js\";\n\n\n// import { UserSubscriptions } from '/imports/website/contactUs/api/SubscriptionMaster.js';\n\n\nexport default class AcceptedTickets extends TrackerReact(Component){\n\tconstructor(props){\n        super(props);\n        this.state = {\n            \"tableListData\":[],\n            \"tatDate\": \"\",\n            \"subscribe\": Meteor.subscribe(\"allTickets\"),\n            \"subscribeOrder\": Meteor.subscribe(\"allOrders\"),\n            \"userSubscribe\" : Meteor.subscribe(\"userData\"),\n        }\n        \n    }\n\n    componentDidMount(){\n\n            this.userTracker = Tracker.autorun(()=>{\n                if(this.state.subscribe.ready()){\n                    \n                    // var allTickets = TicketMaster.find({\"ticketElement.empid\":Meteor.userId(),\"ticketStatus.status\":\"Accepted\"}).fetch();\n                    // var allTickets = TicketMaster.find({\"ticketElement.empid\":Meteor.userId()}).fetch();\n                    var allTickets = TicketMaster.find({\"ticketElement.empid\":Meteor.userId(),\"ticketElement.status\":\"Accepted\"}).fetch();\n                    console.log(allTickets);\n                    for(var i=0;i<allTickets.length;i++){\n                        var allOrders = Order.findOne({\"_id\":allTickets[i].orderId});\n                        \n                        for(var j=0;j<allTickets[i].ticketStatus.length;j++){\n                            var dateValue = allTickets[i].ticketStatus[0].createdAt;\n                            var startdate = moment(dateValue).format('L');\n                            var new_date  = moment(startdate, \"MM-DD-YYYY\").add(1, 'days');\n                            var day       = new_date.format('DD');\n                            var month     = new_date.format('MM');\n                            var year      = new_date.format('YYYY');\n                            var tatDate   = month  + '/' + day + '/' + year;\n                            \n                            \n                        }\n                        \n                    }\n                    // console.log(\"allTickets :\"+JSON.stringify(allTickets));\n                    \n                    if(allTickets){\n                        this.setState({\n                            'tableListData' : allTickets,\n                            'tatDate'       : tatDate,\n                            'orderId'       : allOrders.orderNo,\n                        })\n                    }\n                }\n            });\n    }\n    changeStatus(event){\n        event.preventDefault();\n        var ticketId =  $(event.currentTarget).attr('data-id');\n        // console.log(\"ticketId :\"+ticketId);\n        var userID = Meteor.userId();\n        // console.log(\"userID :\"+userID);\n        var userData = Meteor.users.findOne({\"_id\":userID});\n        // console.log(\"userData :\"+JSON.stringify(userData));\n        if(userData){\n            \n            var staffName = userData.profile.firstname +\" \"+ userData.profile.lastname;\n            // console.log(\"staffName :\"+staffName);\n            var role = userData.roles;\n            var ticketElem={\n                 ticketid  : ticketId,\n                 staffId   : userID,\n                 staffname : staffName,\n                 role      : userData.roles,\n                 \n            }\n            Meteor.call('updateTicket',ticketElem,function(error,result){\n                if(result){\n                    swal('Ticket Accepted!');\n                }\n            });\n\n        }\n        \n\n\n    }\n    render(){\n        return( \n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n           \n                <div>\n                    \n                    <div className=\"reports-table-main\">\n                        <table id=\"subscriber-list-outerTable\" className=\"newOrderwrap subscriber-list-outerTable table table-bordered table-hover table-striped table-striped table-responsive table-condensed table-bordered\">\n                        <thead className=\"table-head umtblhdr\">\n                        <tr className=\"hrTableHeader info UML-TableTr\">\n                          <th className=\"\"> Ticket No.</th>\n                          <th className=\"\"> Order ID </th>\n                          <th className=\"\"> Service Name </th>\n                          <th className=\"\"> Arrival Date </th>\n                          <th className=\"\"> TAT(Date) </th>\n                          <th className=\"\"> Status </th>\n                          \n                        </tr>\n                      </thead>\n                            <tbody>\n\n                            {  this.state.tableListData.map((data, index)=>{\n                                return(\n                                    <tr key={index}>\n                                        <td><Link to={\"/admin/ticket/\"+data._id}>{data.ticketNumber}</Link></td>\n                                        <td>{data.state.orderId}</td>\n                                        <td>{data.serviceName}</td>\n                                        <td>{moment(data.ticketStatus[0].createdAt).format('L')}</td>\n                                        <td> {data.state.tatDate}</td>\n                                        <td><button type=\"button\" data-id={data._id} onClick={this.changeStatus.bind(this)} className=\" newOrderbtn btn btn-primary\">New</button></td>                                    \n                                    </tr>\n                                );\n                            })\n                            }\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n}"]},"hash":"350db1a162d392535e68ac04bff35c2ea56af380"}

{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"./AssureIdModal.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AssureIdModal"}]},{"source":"./DoHaveProfile.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DoHaveProfile"}]},{"source":"../forms/ResetPassword.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ResetPassword"}]}],"exports":{"exported":["OTPModal"],"specifiers":[{"kind":"local","local":"OTPModal","exported":"default"}]}}},"options":{"filename":"imports/website/permissionModals/OTPModal.jsx","filenameRelative":"imports/website/permissionModals/OTPModal.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/website/permissionModals/OTPModal.jsx.map","sourceFileName":"imports/website/permissionModals/OTPModal.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"OTPModal"},"ignored":false,"code":"module.export({\n  default: () => OTPModal\n});\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet AssureIdModal;\nmodule.watch(require(\"./AssureIdModal.jsx\"), {\n  default(v) {\n    AssureIdModal = v;\n  }\n\n}, 3);\nlet DoHaveProfile;\nmodule.watch(require(\"./DoHaveProfile.jsx\"), {\n  default(v) {\n    DoHaveProfile = v;\n  }\n\n}, 4);\nlet ResetPassword;\nmodule.watch(require(\"../forms/ResetPassword.jsx\"), {\n  default(v) {\n    ResetPassword = v;\n  }\n\n}, 5);\n\nclass OTPModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      \"subscription\": {\n        user: Meteor.subscribe(\"userfunction\")\n      }\n    };\n  }\n\n  componentWillMount() {}\n\n  componentWillUnmount() {}\n\n  componentDidMount() {\n    $(\"#OTPMobMail\").validate();\n  }\n\n  showWelcome(event) {\n    event.preventDefault();\n    $('#OtpBlock').hide();\n    $('#DoHaveProfile').show();\n  }\n\n  confirmOTP(event) {\n    event.preventDefault();\n    var sessionValue1 = Session.get('mobotp');\n    var sessionValue2 = Session.get('mailotp');\n\n    if (sessionValue1 && sessionValue2) {\n      var mobotp = sessionValue1;\n      var mailotp = sessionValue2;\n      var newID = Session.get('newID'); // console.log(\"newID: \",newID);\n    } else {\n      var username = $('input[name=\"loginusername\"]').val();\n      var userOtp = Meteor.users.findOne({\n        \"username\": username\n      });\n\n      if (userOtp) {\n        var mobotp = userOtp.profile.sentMobileOTP;\n        var mailotp = userOtp.profile.sentEmailOTP;\n        var usercode = userOtp.profile.userCode.split(\"\").reverse().join(\"\");\n        var newID = userOtp._id;\n      } // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n\n    }\n\n    var emailotp = this.refs.emailotp.value;\n    var mobileotp = this.refs.mobileotp.value;\n\n    if (mailotp == emailotp && mobotp == mobileotp) {\n      Meteor.call('createUserByAdminSetEmailToTrue', newID, function (error, result) {\n        if (error) {\n          console.log(error.reason, \"danger\", \"growl-top-right\");\n        } else {\n          if ($('#OTPMobMail').hasClass('newPassword')) {} else {\n            if ($('input[name=\"signupEmail\"]').val() != '' && $('input[name=\"signupPassword\"]').val() != '') {\n              var email = $('input[name=\"signupEmail\"]').val();\n              var passwordVar = $('input[name=\"signupPassword\"]').val();\n            } else {\n              var email = username;\n              var passwordVar = usercode;\n            } // console.log(\"email: \",email);\n            // console.log(\"password: \",passwordVar);  \n\n\n            Meteor.loginWithPassword(email, passwordVar, function (error) {\n              if (error) {\n                console.log('error: ', error);\n              } else {\n                swal({\n                  title: \"Congratulations!!!\",\n                  text: \"Account Created Successfully!\",\n                  // timer: 1700,\n                  showConfirmButton: true\n                });\n              }\n            });\n          }\n        }\n      });\n      Meteor.call('updateOTP', newID, mobotp, mailotp, function (error, result) {\n        if (error) {\n          Bert.alert(error);\n        } else {}\n      });\n\n      if ($('#OTPMobMail').hasClass('newPassword')) {\n        $('#OtpBlock').hide();\n        $('#ResetBlock').show(); // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n      } else {\n        $('#OtpBlock').hide();\n        $('#DoHaveProfile').show();\n      }\n    } else {\n      swal('Either email OTP or mobile OTP is incorrect');\n    }\n\n    $('#assureIDModal').show();\n  }\n\n  inputEffect(event) {\n    event.preventDefault(); // alert('hi');\n\n    if ($(event.target).val() != \"\") {\n      $(event.target).addClass(\"has-content\");\n    } else {\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n      },\n      React.createElement(\n        \"div\",\n        {\n          className: \"outerOTPWRapper col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n          id: \"OtpBlock\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\"\n            },\n            React.createElement(\"img\", {\n              src: \"../images/AssureIDlogo.png\",\n              className: \"loginPageLogo\",\n              alt: \"AssureID logo\"\n            })\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-lg-10 col-lg-offset-1 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"text-center col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\"\n              },\n              React.createElement(\n                \"span\",\n                null,\n                \"We have sent you an OTP\",\n                React.createElement(\"br\", null),\n                \"to your registered email Id and mobile no.\",\n                React.createElement(\"br\", null),\n                \"Enter your OTP below.\"\n              )\n            ),\n            React.createElement(\n              \"form\",\n              {\n                id: \"OTPMobMail\",\n                onSubmit: this.confirmOTP.bind(this)\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"input-effect input-group\"\n                  },\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"input-group-addon addons\",\n                      id: \"basic-addon1\"\n                    },\n                    React.createElement(\"i\", {\n                      className: \"fa fa-key\",\n                      \"aria-hidden\": \"true\"\n                    })\n                  ),\n                  React.createElement(\"input\", {\n                    type: \"text\",\n                    className: \"effect-21 form-control loginInputs\",\n                    ref: \"emailotp\",\n                    name: \"emailotp\",\n                    onBlur: this.inputEffect.bind(this),\n                    \"aria-describedby\": \"basic-addon1\",\n                    title: \"Please enter numbers only!\",\n                    maxLength: \"6\",\n                    pattern: \"^[0-9]*$\",\n                    required: true\n                  }),\n                  React.createElement(\n                    \"label\",\n                    null,\n                    \"6 digits OTP sent on email Id\"\n                  ),\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"focus-border\"\n                    },\n                    React.createElement(\"i\", null)\n                  )\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"input-effect input-group\"\n                  },\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"input-group-addon addons\",\n                      id: \"basic-addon1\"\n                    },\n                    React.createElement(\"i\", {\n                      className: \"fa fa-key\",\n                      \"aria-hidden\": \"true\"\n                    })\n                  ),\n                  React.createElement(\"input\", {\n                    type: \"text\",\n                    className: \"effect-21 form-control loginInputs\",\n                    ref: \"mobileotp\",\n                    name: \"mobileotp\",\n                    onBlur: this.inputEffect.bind(this),\n                    \"aria-describedby\": \"basic-addon1\",\n                    title: \"Please enter numbers only!\",\n                    maxLength: \"4\",\n                    pattern: \"^[0-9]*$\",\n                    required: true\n                  }),\n                  React.createElement(\n                    \"label\",\n                    null,\n                    \"4 digits OTP sent on mobile no.\"\n                  ),\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"focus-border\"\n                    },\n                    React.createElement(\"i\", null)\n                  )\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"button\",\n                  {\n                    type: \"submit\",\n                    className: \"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                  },\n                  \"Submit\"\n                )\n              )\n            )\n          )\n        )\n      ),\n      React.createElement(DoHaveProfile, null),\n      React.createElement(ResetPassword, null)\n    );\n  }\n\n}","map":{"version":3,"sources":["imports/website/permissionModals/OTPModal.jsx"],"names":["module","export","default","OTPModal","React","watch","require","v","render","TrackerReact","AssureIdModal","DoHaveProfile","ResetPassword","Component","constructor","state","user","Meteor","subscribe","componentWillMount","componentWillUnmount","componentDidMount","$","validate","showWelcome","event","preventDefault","hide","show","confirmOTP","sessionValue1","Session","get","sessionValue2","mobotp","mailotp","newID","username","val","userOtp","users","findOne","profile","sentMobileOTP","sentEmailOTP","usercode","userCode","split","reverse","join","_id","emailotp","refs","value","mobileotp","call","error","result","console","log","reason","hasClass","email","passwordVar","loginWithPassword","swal","title","text","showConfirmButton","Bert","alert","inputEffect","target","addClass","removeClass","bind"],"mappings":"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","file":"imports/website/permissionModals/OTPModal.jsx.map","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport AssureIdModal from './AssureIdModal.jsx';\n\nimport DoHaveProfile from './DoHaveProfile.jsx';\nimport ResetPassword from '../forms/ResetPassword.jsx';\n\nexport default class OTPModal extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n      \"subscription\" : { \n        user             : Meteor.subscribe(\"userfunction\"),  \n      }\n    }\n  }\n  componentWillMount(){\n  }\n  componentWillUnmount(){\n  }\n  componentDidMount() {\n    $(\"#OTPMobMail\").validate();\n  }\n  showWelcome(event){\n    event.preventDefault();\n    $('#OtpBlock').hide();\n    $('#DoHaveProfile').show();\n  }\n  confirmOTP(event){\n    event.preventDefault();\n    \n    var sessionValue1 = Session.get('mobotp');\n    var sessionValue2 = Session.get('mailotp');\n    if(sessionValue1 && sessionValue2){\n      var mobotp = sessionValue1;\n      var mailotp = sessionValue2;\n      var newID = Session.get('newID');\n      // console.log(\"newID: \",newID);\n    }else{\n      var username = $('input[name=\"loginusername\"]').val();\n      var userOtp = Meteor.users.findOne({\"username\":username});\n      if(userOtp){\n        var mobotp = userOtp.profile.sentMobileOTP;\n        var mailotp = userOtp.profile.sentEmailOTP;\n        var usercode = userOtp.profile.userCode.split(\"\").reverse().join(\"\");\n        var newID = userOtp._id;\n      }\n      // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n    }\n    var emailotp = this.refs.emailotp.value;\n    var mobileotp = this.refs.mobileotp.value;\n    if(mailotp == emailotp && mobotp == mobileotp){\n      Meteor.call('createUserByAdminSetEmailToTrue',newID,\n      function(error,result){\n        if(error){\n          console.log(error.reason,\"danger\",\"growl-top-right\");\n        }else{\n          if($('#OTPMobMail').hasClass('newPassword')){\n            \n          }else{\n            \n            if($('input[name=\"signupEmail\"]').val() != '' && $('input[name=\"signupPassword\"]').val() != ''){\n              var email = $('input[name=\"signupEmail\"]').val();\n              var passwordVar = $('input[name=\"signupPassword\"]').val();\n            }else{\n              var email = username;\n              var passwordVar = usercode;\n            } \n\n            // console.log(\"email: \",email);\n            // console.log(\"password: \",passwordVar);  \n\n            Meteor.loginWithPassword(email, passwordVar, function(error) {\n              if (error) {\n                console.log('error: ',error);\n              } else {\n                swal({\n                  title: \"Congratulations!!!\",\n                  text: \"Account Created Successfully!\",\n                  // timer: 1700,\n                  showConfirmButton: true,\n                });\n              }\n            }); \n          }   \n        }\n      });\n\n      Meteor.call('updateOTP', newID , mobotp, mailotp , function(error,result){\n        if(error){\n          Bert.alert(error);\n        }else{\n\n        }\n      });\n\n      if($('#OTPMobMail').hasClass('newPassword')){\n        $('#OtpBlock').hide();\n        $('#ResetBlock').show();\n        // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n      }else{\n        $('#OtpBlock').hide();\n        $('#DoHaveProfile').show();\n      }    \n    }else{\n      swal('Either email OTP or mobile OTP is incorrect');\n    }\n  $('#assureIDModal').show();\n  }\n\n  inputEffect(event){\n    event.preventDefault();\n    // alert('hi');\n    if($(event.target).val() != \"\"){\n      $(event.target).addClass(\"has-content\");\n    }else{\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> \n        <div className=\"outerOTPWRapper col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"OtpBlock\">\n         {/*<button type=\"button\" className=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#OtpModal\">Open OTP Modal</button>*/}\n\n          {/*<div id=\"OtpModal\" className=\"modal fade\" role=\"dialog\">\n            <div className=\"modal-dialog\">\n\n              <div className=\"modal-content\">\n                <div className=\"modal-body text-center\">*/}\n\n                  <div className=\"row\">\n                     <div className=\"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\">\n                        <img src=\"../images/AssureIDlogo.png\" className=\"loginPageLogo\"  alt=\"AssureID logo\"/> \n                      </div>\n                    <div className=\"col-lg-10 col-lg-offset-1 col-md-12 col-sm-12 col-xs-12\">\n                      <div className=\"text-center col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\">\n                        <span>We have sent you an OTP<br/>\n                        to your registered email Id and mobile no.<br />\n                        Enter your OTP below.</span>\n                      </div>\n                      <form id=\"OTPMobMail\" onSubmit={this.confirmOTP.bind(this)}>\n                        <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <div className=\"input-effect input-group\">\n                            <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-key\" aria-hidden=\"true\"></i></span>\n                            <input type=\"text\" className=\"effect-21 form-control loginInputs\" ref=\"emailotp\" name=\"emailotp\" onBlur={this.inputEffect.bind(this)} aria-describedby=\"basic-addon1\" title=\"Please enter numbers only!\" maxLength=\"6\" pattern=\"^[0-9]*$\" required/>\n                            <label>6 digits OTP sent on email Id</label>\n                            <span className=\"focus-border\">\n                              <i></i>\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <div className=\"input-effect input-group\">\n                            <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-key\" aria-hidden=\"true\"></i></span>\n                            <input type=\"text\" className=\"effect-21 form-control loginInputs\" ref=\"mobileotp\" name=\"mobileotp\" onBlur={this.inputEffect.bind(this)} aria-describedby=\"basic-addon1\" title=\"Please enter numbers only!\" maxLength=\"4\" pattern=\"^[0-9]*$\" required/>\n                            <label>4 digits OTP sent on mobile no.</label>\n                            <span className=\"focus-border\">\n                              <i></i>\n                            </span>\n                          </div>\n                        </div>  \n                        <div className=\"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"> \n                          {/*<button type=\"button\" className=\"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12\" onClick={this.showWelcome.bind(this)}>Submit</button>*/}\n                          <button type=\"submit\" className=\"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12\">Submit</button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n\n                {/*</div>\n              </div>\n\n            </div>\n          </div>*/}\n        </div>\n        <DoHaveProfile />\n        <ResetPassword />\n\n      </div>\n    );\n  }\n}\n"]},"hash":"b31c869d8ba29984b7d3150c864cea5ce4e52331"}

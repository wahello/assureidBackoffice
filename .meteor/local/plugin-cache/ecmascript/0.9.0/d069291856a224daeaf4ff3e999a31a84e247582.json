{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"../../website/ServiceProcess/api/TicketMaster.js","imported":["TicketMaster"],"specifiers":[{"kind":"named","imported":"TicketMaster","local":"TicketMaster"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx","filenameRelative":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx.map","sourceFileName":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"RoleTicketStatus"},"ignored":false,"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 1);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n    default(v) {\n        React = v;\n    },\n\n    Component(v) {\n        Component = v;\n    }\n\n}, 2);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n    render(v) {\n        render = v;\n    }\n\n}, 3);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n    default(v) {\n        TrackerReact = v;\n    }\n\n}, 4);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    withTracker(v) {\n        withTracker = v;\n    }\n\n}, 5);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n    default(v) {\n        Validation = v;\n    }\n\n}, 6);\nlet validator;\nmodule.watch(require(\"validator\"), {\n    default(v) {\n        validator = v;\n    }\n\n}, 7);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker(v) {\n        Tracker = v;\n    }\n\n}, 8);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n    browserHistory(v) {\n        browserHistory = v;\n    }\n\n}, 9);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n    Link(v) {\n        Link = v;\n    }\n\n}, 10);\nlet TicketMaster;\nmodule.watch(require(\"../../website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketMaster(v) {\n        TicketMaster = v;\n    }\n\n}, 11);\n\n// import { Services } from '../reactCMS/api/Services.js';\nclass RoleTicketStatus extends TrackerReact(Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"subscription\": {\n                \"allTickets\": Meteor.subscribe(\"allTickets\"),\n                \"userfunction\": Meteor.subscribe('userfunction')\n            }\n        };\n    }\n\n    allocateToTeamMember(event) {\n        event.preventDefault();\n        var allocateTo = this.refs.allocateToName.value;\n        var allocateToSplit = allocateTo.split(\" \");\n        var firstName = allocateToSplit[0];\n        var lastName = allocateToSplit[1];\n        var ticketDetails = this.props.getTicket;\n        var ticketId = ticketDetails._id;\n        var allocateToMemberDetails = ticketDetails.ticketElement[1]; //   var allocateToMemberDetails.permanentAddress.status = \"New\";\n\n        console.log(allocateToMemberDetails);\n        Meteor.call('allocateToTeamMember', ticketId, firstName, lastName, allocateToMemberDetails, (error, result) => {\n            console.log(result);\n        });\n    }\n\n    changeTMStatus(event) {\n        var ticketId = $(event.currentTarget).attr('data-id');\n        var addressType = $(event.currentTarget).attr('data-addressType');\n        var status = $(event.currentTarget).attr('data-status');\n        console.log(ticketId, addressType, status);\n        Meteor.call('updateTMStatus', ticketId, addressType, status);\n    }\n\n    roleSwitch(roleStatus, role, empid) {\n        if (!this.props.loading) {\n            var userDetails = Meteor.users.findOne({\n                \"_id\": empid\n            });\n            var name = userDetails.profile.firstname + \" \" + userDetails.profile.lastname;\n            var teammemberDetails = Meteor.users.find({\n                \"profile.reportToName\": name\n            }).fetch();\n            var reportUserArr = [];\n\n            if (teammemberDetails) {\n                for (k = 0; k < teammemberDetails.length; k++) {\n                    var newStr = teammemberDetails[k].profile.firstname + \" \" + teammemberDetails[k].profile.lastname;\n                    reportUserArr.push(newStr);\n                }\n            }\n\n            switch (role) {\n                case 'team leader':\n                    if (roleStatus == \"Accepted\" || roleStatus == \"Reassign\") {\n                        return React.createElement(\n                            \"div\",\n                            null,\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-8\"\n                                },\n                                React.createElement(\n                                    \"lable\",\n                                    null,\n                                    \"Allocate To Field Expert\"\n                                ),\n                                React.createElement(\n                                    \"select\",\n                                    {\n                                        className: \"form-control allProductSubCategories\",\n                                        \"aria-describedby\": \"basic-addon1\",\n                                        ref: \"allocateToName\"\n                                    },\n                                    reportUserArr.map((data, index) => {\n                                        return React.createElement(\n                                            \"option\",\n                                            {\n                                                key: index\n                                            },\n                                            data\n                                        );\n                                    })\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-4 noLRPad\"\n                                },\n                                React.createElement(\n                                    \"button\",\n                                    {\n                                        type: \"button\",\n                                        className: \"bg-primary col-lg-12 teammember\",\n                                        onClick: this.allocateToTeamMember.bind(this)\n                                    },\n                                    \"Ok\"\n                                )\n                            )\n                        );\n                    }\n\n                    break;\n\n                case 'team member':\n                    if (roleStatus == \"New\") {\n                        return React.createElement(\n                            \"div\",\n                            null,\n                            React.createElement(\n                                \"button\",\n                                {\n                                    type: \"button\",\n                                    className: \"bg-primary col-lg-5 teammember\",\n                                    \"data-status\": \"Accepted\",\n                                    \"data-addressType\": this.props.getTicket.addressType,\n                                    \"data-id\": this.props.ticketId,\n                                    onClick: this.changeTMStatus.bind(this)\n                                },\n                                \"Accept\"\n                            ),\n                            React.createElement(\n                                \"button\",\n                                {\n                                    type: \"button\",\n                                    className: \"btn-danger col-lg-5 teammember\",\n                                    \"data-status\": \"Rejected\",\n                                    \"data-addressType\": this.props.getTicket.addressType,\n                                    \"data-id\": this.props.ticketId,\n                                    onClick: this.changeTMStatus.bind(this)\n                                },\n                                \"Reject\"\n                            )\n                        );\n                    }\n\n            }\n        }\n    }\n\n    userData() {\n        var getTicket = TicketMaster.findOne({\n            \"_id\": this.props.ticketId\n        });\n\n        if (getTicket) {\n            var newCommeeteeArr = [];\n\n            for (var i = 0; i < getTicket.ticketElement.length; i++) {\n                var roleDetails = Meteor.users.findOne({\n                    \"_id\": getTicket.ticketElement[i].empid\n                });\n                newCommeeteeArr.push(React.createElement(\n                    \"div\",\n                    {\n                        key: i,\n                        className: \"col-lg-12\"\n                    },\n                    React.createElement(\n                        \"div\",\n                        {\n                            className: \"ticketServiceWrapper col-lg-12 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                            \"div\",\n                            {\n                                className: \"col-lg-8 col-md-8 col-sm-8 col-xs-8 outerTickeBlock noPadLeftRight\"\n                            },\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\"\n                                },\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\"\n                                    },\n                                    \"State\",\n                                    React.createElement(\n                                        \"span\",\n                                        {\n                                            className: \"pull-right\"\n                                        },\n                                        \":\"\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\"\n                                    },\n                                    React.createElement(\n                                        \"p\",\n                                        null,\n                                        getTicket.ticketElement[i].role_status\n                                    )\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\"\n                                },\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\"\n                                    },\n                                    \"Date :\",\n                                    React.createElement(\n                                        \"span\",\n                                        {\n                                            className: \"pull-right\"\n                                        },\n                                        \":\"\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\"\n                                    },\n                                    React.createElement(\n                                        \"p\",\n                                        null,\n                                        moment(getTicket.ticketElement[i].createdAt).format(\"DD/MM/YYYY\")\n                                    )\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                null,\n                                this.roleSwitch(getTicket.ticketElement[i].role_status, getTicket.ticketElement[i].role, getTicket.ticketElement[i].empid)\n                            )\n                        )\n                    )\n                ));\n            }\n\n            return newCommeeteeArr;\n        }\n    }\n\n    render() {\n        return React.createElement(\n            \"div\",\n            {\n                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            this.userData()\n        );\n    }\n\n}\n\nticketContainer = withTracker(props => {\n    //   console.log('props: ',this.props);\n    var _id = props.ticketId; // console.log(\"_id\",_id);\n\n    const postHandle = Meteor.subscribe('singleTicket', _id);\n    const userfunction = Meteor.subscribe('userfunction');\n    const getTicket = TicketMaster.findOne({\n        \"_id\": _id\n    }) || {}; // console.log(\"getTicket\",getTicket); \n\n    const loading = !postHandle.ready() && !userfunction.ready(); // if(_id){\n\n    return {\n        loading: loading,\n        getTicket: getTicket,\n        ticketId: _id\n    }; // }\n})(RoleTicketStatus);\nmodule.exportDefault(ticketContainer);","map":{"version":3,"sources":["imports/dashboard/ticketManagement/RoleTicketStatus.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","default","render","TrackerReact","withTracker","Validation","validator","Tracker","browserHistory","Link","TicketMaster","RoleTicketStatus","constructor","props","state","subscribe","allocateToTeamMember","event","preventDefault","allocateTo","refs","allocateToName","value","allocateToSplit","split","firstName","lastName","ticketDetails","getTicket","ticketId","_id","allocateToMemberDetails","ticketElement","console","log","call","error","result","changeTMStatus","$","currentTarget","attr","addressType","status","roleSwitch","roleStatus","role","empid","loading","userDetails","users","findOne","name","profile","firstname","lastname","teammemberDetails","find","fetch","reportUserArr","k","length","newStr","push","map","data","index","bind","userData","newCommeeteeArr","i","roleDetails","role_status","moment","createdAt","format","ticketContainer","postHandle","userfunction","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\nimport { browserHistory } from 'react-router'; \nimport { Link } from 'react-router';\nimport { TicketMaster } from '../../website/ServiceProcess/api/TicketMaster.js'; \n// import { Services } from '../reactCMS/api/Services.js';\n\nclass RoleTicketStatus extends TrackerReact(Component){   \n\nconstructor(props){\n    super(props);\n    this.state = {\n\n      \"subscription\" : {\n        \"allTickets\" : Meteor.subscribe(\"allTickets\"), \n        \"userfunction\" : Meteor.subscribe('userfunction'),\n      } \n    }\n  }\n  allocateToTeamMember(event){\n      event.preventDefault();\n      var allocateTo = this.refs.allocateToName.value;\n      var allocateToSplit = allocateTo.split(\" \");\n      var firstName = allocateToSplit[0];\n      var lastName  = allocateToSplit[1];\n\n      var ticketDetails = this.props.getTicket;\n      var ticketId = ticketDetails._id;\n      var allocateToMemberDetails = ticketDetails.ticketElement[1];\n    //   var allocateToMemberDetails.permanentAddress.status = \"New\";\n      console.log(allocateToMemberDetails);\n      Meteor.call('allocateToTeamMember',ticketId,firstName,lastName,allocateToMemberDetails,(error,result)=>{\n            console.log(result);\n      });\n  }\n\n  changeTMStatus(event){\n      var ticketId = $(event.currentTarget).attr('data-id');\n      var addressType = $(event.currentTarget).attr('data-addressType');\n      var status      = $(event.currentTarget).attr('data-status');\n      console.log(ticketId,addressType,status);\n      Meteor.call('updateTMStatus',ticketId,addressType,status);\n  }\n\n\n  roleSwitch(roleStatus,role,empid){\n    if (!this.props.loading) {\n\n        var userDetails = Meteor.users.findOne({\"_id\":empid});\n        var name = userDetails.profile.firstname +\" \"+userDetails.profile.lastname;\n        var teammemberDetails = Meteor.users.find({\"profile.reportToName\":name}).fetch();\n        var reportUserArr = [];\n        if(teammemberDetails){\n            for(k=0;k<teammemberDetails.length;k++){\n                var newStr = teammemberDetails[k].profile.firstname+\" \"+teammemberDetails[k].profile.lastname;\n                reportUserArr.push(newStr);\n            }\n        }\n        switch(role){\n            case 'team leader':\n                    if((roleStatus == \"Accepted\") || (roleStatus == \"Reassign\")){\n                        return(\n                            <div>\n                                <div className=\"col-lg-8\">\n                                <lable>Allocate To Field Expert</lable>\n                                <select className=\"form-control allProductSubCategories\" aria-describedby=\"basic-addon1\" ref=\"allocateToName\">\n                                    { \n                                        reportUserArr.map( (data, index)=>{\n                                            return (\n                                                <option key={index}>\n                                                    \n                                                {data}\n                                                </option>\n                                            );\n                                        })\n                                    } \n                                </select>\n                                </div>\n                                <div className=\"col-lg-4 noLRPad\">\n                                    <button type=\"button\" className=\"bg-primary col-lg-12 teammember\" onClick={this.allocateToTeamMember.bind(this)}>Ok</button>\n                                </div>\n                            </div>\n                        );\n                    }\n                    break;\n            case 'team member':\n                if(roleStatus == \"New\"){\n                    return(\n                        <div>\n                            <button type=\"button\" className=\"bg-primary col-lg-5 teammember\" data-status=\"Accepted\" data-addressType = {this.props.getTicket.addressType} data-id={this.props.ticketId} onClick={this.changeTMStatus.bind(this)}>Accept</button>\n                            <button type=\"button\" className=\"btn-danger col-lg-5 teammember\" data-status=\"Rejected\" data-addressType = {this.props.getTicket.addressType} data-id={this.props.ticketId} onClick={this.changeTMStatus.bind(this)}>Reject</button>\n                        </div>\n                    );\n                }\n                    \n\n            }\n        }\n    \n\n  }\n\n  userData(){\n  \tvar getTicket = TicketMaster.findOne({\"_id\" : this.props.ticketId});\n    if (getTicket){\n      var newCommeeteeArr = [];\n\n      for(var i=0;i<getTicket.ticketElement.length;i++){\n\n        var roleDetails = Meteor.users.findOne({\"_id\":getTicket.ticketElement[i].empid});\n          newCommeeteeArr.push(\n            <div key = {i} className=\"col-lg-12\">\n                <div className=\"ticketServiceWrapper col-lg-12 col-md-6 col-sm-6 col-xs-6\">              \n                        <div className=\"col-lg-8 col-md-8 col-sm-8 col-xs-8 outerTickeBlock noPadLeftRight\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\">\n                                <div className=\"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\">\n                            State<span className=\"pull-right\">:</span>\n                                </div>  \n                                <div className=\"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\">\n                                <p>{getTicket.ticketElement[i].role_status}</p>\n                                </div> \n                            </div> \n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\">\n                                <div className=\"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\">\n                                Date :<span className=\"pull-right\">:</span>\n                                </div>  \n                                <div className=\"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\">\n                                <p>{moment(getTicket.ticketElement[i].createdAt).format(\"DD/MM/YYYY\")}</p> \n                                {/*  <p> - </p>*/}\n                                </div>  \n                            </div>  \n                            <div>\n                                {this.roleSwitch(getTicket.ticketElement[i].role_status, getTicket.ticketElement[i].role,getTicket.ticketElement[i].empid)}\n                                \n                            </div>\n                        </div>\n                </div>    \n            </div>\n          );\n      }\n      return newCommeeteeArr;\n    \n    }\n  }\n \n\trender(){\n    return(\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n         {/* <div className=\"userInformationWrapper col-lg-6 col-md-6 col-sm-6 col-xs-6\"> */}\n            {this.userData()}\n          {/* </div>     */}\n      </div>    \n    );\n   }\n}\nticketContainer = withTracker(props => {\n//   console.log('props: ',this.props);\n    var _id = props.ticketId;\n    // console.log(\"_id\",_id);\n    const postHandle = Meteor.subscribe('singleTicket',_id);\n    const   userfunction = Meteor.subscribe('userfunction');\n    \n    const getTicket  = TicketMaster.findOne({\"_id\" : _id}) || {};  \n    // console.log(\"getTicket\",getTicket); \n   \n    const loading = !postHandle.ready() && !userfunction.ready();\n\n    // if(_id){\n      return {\n          loading  : loading,\n          getTicket : getTicket,\n          ticketId  : _id\n      };\n    // }\n})(RoleTicketStatus);\nexport default ticketContainer;\n\n"]},"hash":"d069291856a224daeaf4ff3e999a31a84e247582"}

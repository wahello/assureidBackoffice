{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["ManageContacts"],"specifiers":[{"kind":"local","local":"ManageContacts","exported":"ManageContacts"}]}}},"options":{"filename":"imports/dashboard/reactCMS/api/ManageContacts.js","filenameRelative":"imports/dashboard/reactCMS/api/ManageContacts.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/api/ManageContacts.js.map","sourceFileName":"imports/dashboard/reactCMS/api/ManageContacts.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ManageContacts"},"ignored":false,"code":"module.export({\n      ManageContacts: function () {\n            return ManageContacts;\n      }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n      Mongo: function (v) {\n            Mongo = v;\n      }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n      Meteor: function (v) {\n            Meteor = v;\n      }\n}, 1);\nvar ManageContacts = new Mongo.Collection(\"manageContacts\");\n\nif (Meteor.isServer) {\n      Meteor.publish('manageContacts', function () {\n            return ManageContacts.find({});\n      });\n      Meteor.methods({\n            'createManageContact': function (manageContactName, manageContactAddress, manageContactPhone, manageContactEmail, manageContactSubject, manageContactMessage, userId, updateTimestamp) {\n                  ManageContacts.insert({\n                        'manageContactName': manageContactName,\n                        'manageContactAddress': manageContactAddress,\n                        'manageContactPhone': manageContactPhone,\n                        'manageContactEmail': manageContactEmail,\n                        'manageContactSubject': manageContactSubject,\n                        'manageContactMessage': manageContactMessage,\n                        'createdAt': new Date(),\n                        'authorUserId': userId,\n                        'lastModified': updateTimestamp\n                  });\n            },\n            'updateManageContact': function (id, manageContactName, manageContactAddress, manageContactPhone, manageContactEmail, manageContactSubject, manageContactMessage, userId, updateTimestamp) {\n                  ManageContacts.update({\n                        '_id': id\n                  }, {\n                        $set: {\n                              'manageContactName': manageContactName,\n                              'manageContactAddress': manageContactAddress,\n                              'manageContactPhone': manageContactPhone,\n                              'manageContactEmail': manageContactEmail,\n                              'manageContactSubject': manageContactSubject,\n                              'manageContactMessage': manageContactMessage,\n                              'authorUserId': userId,\n                              'lastModified': updateTimestamp //End of set\n\n                        }\n                  });\n            },\n            'deleteManageContact': function (id) {\n                  ManageContacts.remove({\n                        '_id': id\n                  });\n            }\n      });\n}","map":{"version":3,"sources":["imports/dashboard/reactCMS/api/ManageContacts.js"],"names":["module","export","ManageContacts","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","methods","manageContactName","manageContactAddress","manageContactPhone","manageContactEmail","manageContactSubject","manageContactMessage","userId","updateTimestamp","insert","Date","id","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,sBAAe;AAAA,mBAAIA,cAAJ;AAAA;AAAhB,CAAd;AAAmD,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,WAAD,YAAOG,CAAP,EAAS;AAACH,oBAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,YAAD,YAAQD,CAAR,EAAU;AAACC,qBAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAG7H,IAAMJ,iBAAiB,IAAIC,MAAMK,UAAV,CAAqB,gBAArB,CAAvB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AACfF,aAAOG,OAAP,CAAe,gBAAf,EAAgC,YAAI;AAChC,mBAAOR,eAAeS,IAAf,CAAoB,EAApB,CAAP;AACH,OAFD;AAIAJ,aAAOK,OAAP,CAAe;AACd,mCAAsB,UAASC,iBAAT,EAA2BC,oBAA3B,EAAgDC,kBAAhD,EAAmEC,kBAAnE,EAAsFC,oBAAtF,EAA2GC,oBAA3G,EAAgIC,MAAhI,EAAuIC,eAAvI,EAAuJ;AAE5KlB,iCAAemB,MAAf,CAAsB;AAClB,6CAA0BR,iBADR;AAErB,gDAA0BC,oBAFL;AAGrB,8CAA0BC,kBAHL;AAIrB,8CAA0BC,kBAJL;AAKlB,gDAA0BC,oBALR;AAMrB,gDAA0BC,oBANL;AAOrB,qCAA0B,IAAII,IAAJ,EAPL;AAQlB,wCAA0BH,MARR;AASlB,wCAA0BC;AATR,mBAAtB;AAWA,aAda;AAeb,mCAAsB,UAASG,EAAT,EAAYV,iBAAZ,EAA8BC,oBAA9B,EAAmDC,kBAAnD,EAAsEC,kBAAtE,EAAyFC,oBAAzF,EAA8GC,oBAA9G,EAAmIC,MAAnI,EAA0IC,eAA1I,EAA0J;AAChLlB,iCAAesB,MAAf,CACC;AAAE,+BAAOD;AAAT,mBADD,EAEO;AACEE,8BAAK;AACF,mDAA0BZ,iBADxB;AAEF,sDAA0BC,oBAFxB;AAGL,oDAA0BC,kBAHrB;AAIL,oDAA0BC,kBAJrB;AAKF,sDAA0BC,oBALxB;AAML,sDAA0BC,oBANrB;AAOF,8CAAmBC,MAPjB;AAQF,8CAAmBC,eARjB,CASL;;AATK;AADP,mBAFP;AAeA,aA/Ba;AAgCb,mCAAsB,UAASG,EAAT,EAAY;AAChCrB,iCAAewB,MAAf,CAAsB;AAAC,+BAAOH;AAAR,mBAAtB;AAEF;AAnCa,OAAf;AAqCH","file":"imports/dashboard/reactCMS/api/ManageContacts.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const ManageContacts = new Mongo.Collection(\"manageContacts\");\n\nif(Meteor.isServer){\n    Meteor.publish('manageContacts',()=>{\n        return ManageContacts.find({});\n    });\n\n    Meteor.methods({\n    \t'createManageContact':function(manageContactName,manageContactAddress,manageContactPhone,manageContactEmail,manageContactSubject,manageContactMessage,userId,updateTimestamp){\n\n    \t\tManageContacts.insert({\n          'manageContactName'     : manageContactName,\n    \t\t\t'manageContactAddress'  : manageContactAddress,\n    \t\t\t'manageContactPhone'    : manageContactPhone,\n    \t\t\t'manageContactEmail'    : manageContactEmail,\n          'manageContactSubject'  : manageContactSubject,\n    \t\t\t'manageContactMessage'  : manageContactMessage,\n    \t\t\t'createdAt'             : new Date(),\n          'authorUserId'          : userId,\n          'lastModified'          : updateTimestamp,\n    \t\t});\n    \t},\n      'updateManageContact':function(id,manageContactName,manageContactAddress,manageContactPhone,manageContactEmail,manageContactSubject,manageContactMessage,userId,updateTimestamp){\n    \t\tManageContacts.update(\n    \t\t\t{ '_id': id },\n    \t        {\n    \t          $set:{\n                  'manageContactName'     : manageContactName,\n                  'manageContactAddress'  : manageContactAddress,\n            \t\t\t'manageContactPhone'    : manageContactPhone,\n            \t\t\t'manageContactEmail'    : manageContactEmail,\n                  'manageContactSubject'  : manageContactSubject,\n            \t\t\t'manageContactMessage'  : manageContactMessage,\n                  'authorUserId'   : userId,\n                  'lastModified'   : updateTimestamp,\n    \t        } //End of set\n    \t      }\n    \t\t);\n    \t},\n      'deleteManageContact':function(id){\n     \t\t ManageContacts.remove({'_id': id});\n\n    \t},\n    });\n}\n"]},"hash":"9164f76287bf415fb56f68f4dc17be3412e84bf3"}

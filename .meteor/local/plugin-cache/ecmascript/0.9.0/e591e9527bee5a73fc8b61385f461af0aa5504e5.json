{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"../api/ManageContacts","imported":["ManageContacts"],"specifiers":[{"kind":"named","imported":"ManageContacts","local":"ManageContacts"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/reactCMS/components/ManageContact.jsx","filenameRelative":"imports/dashboard/reactCMS/components/ManageContact.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/components/ManageContact.jsx.map","sourceFileName":"imports/dashboard/reactCMS/components/ManageContact.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ManageContact"},"ignored":false,"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 2);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 3);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 4);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 5);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n  default(v) {\n    Validation = v;\n  }\n\n}, 6);\nlet validator;\nmodule.watch(require(\"validator\"), {\n  default(v) {\n    validator = v;\n  }\n\n}, 7);\nlet ManageContacts;\nmodule.watch(require(\"../api/ManageContacts\"), {\n  ManageContacts(v) {\n    ManageContacts = v;\n  }\n\n}, 8);\n\nclass ManageContact extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);\n    this.state = {\n      manageContactName: this.props.manageContacts.manageContactName,\n      manageContactAddress: this.props.manageContacts.manageContactAddress,\n      manageContactEmail: this.props.manageContacts.manageContactEmail,\n      manageContactPhone: this.props.manageContacts.manageContactPhone,\n      manageContactSubject: this.props.manageContacts.manageContactSubject,\n      manageContactMessage: this.props.manageContacts.manageContactMessage,\n      id: this.props.manageContacts._id,\n      manageContacts: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      if (nextProps.manageContacts) {\n        this.setState({\n          manageContactName: nextProps.manageContacts.manageContactName,\n          manageContactAddress: nextProps.manageContacts.manageContactAddress,\n          manageContactEmail: this.props.manageContacts.manageContactEmail,\n          manageContactPhone: this.props.manageContacts.manageContactPhone,\n          manageContactSubject: this.props.manageContacts.manageContactSubject,\n          manageContactMessage: this.props.manageContacts.manageContactMessage,\n          id: nextProps.manageContacts._id\n        });\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    if (!$(\"link[href='/css/dashboard.css']\").length > 0) {\n      var dashboardCss = document.createElement(\"link\");\n      dashboardCss.type = \"text/css\";\n      dashboardCss.rel = \"stylesheet\";\n      dashboardCss.href = \"/css/dashboard.css\";\n      document.head.append(dashboardCss);\n    }\n\n    if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n      console.log(\"I am appended!\");\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      adminLte.setAttribute('id', 'adminLte');\n      $(\"body\").append(adminLte);\n    }\n\n    this.manageContactTracker = Tracker.autorun(() => {\n      Meteor.subscribe(\"manageContacts\");\n      const manageContacts = ManageContacts.find().fetch();\n      this.setState({\n        manageContacts: manageContacts\n      });\n    }); // console.log(manageContact);\n  }\n\n  componentWillUnmount() {\n    console.log('unmounted!');\n    $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n    if (this.manageContactTracker) this.manageContactTracker.stop();\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n    console.log(\"i am in update\");\n    let contactName = this.refs.manageContactName.value;\n    let contactAddress = this.refs.manageContactAddress.value;\n    let contactPhone = this.refs.manageContactPhone.value;\n    let contactEmail = this.refs.manageContactEmail.value;\n    let contactSubject = this.refs.manageContactSubject.value;\n    let contactMessage = $('#messageContent').summernote('code');\n    let userId = Meteor.userId();\n    let lastModified = new Date();\n    let id = e.target.getAttribute('id');\n    Meteor.call('updateManageContact', id, contactName, contactAddress, contactPhone, contactEmail, contactSubject, contactMessage, userId, lastModified, function (error, result) {\n      if (error) {\n        console.log(error.reason);\n      } else if (result) {\n        Bert.alert(\"Successfully Inserted..!!\");\n      }\n    });\n    swal(\"Done\", \"Your contact has been Updated!.\", \"success\");\n    $(\".newTemplateForm\").css({\n      display: 'none'\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let contactName = this.refs.manageContactName.value;\n    let contactAddress = this.refs.manageContactAddress.value;\n    let contactPhone = this.refs.manageContactPhone.value;\n    let contactEmail = this.refs.manageContactEmail.value;\n    let contactSubject = this.refs.manageContactSubject.value;\n    let contactMessage = $('#messageContent').summernote('code');\n    let userId = Meteor.userId();\n    let lastModified = \"\";\n    let contactNameExist = ManageContacts.findOne({\n      'manageContactName': contactName\n    });\n\n    if (contactNameExist) {\n      swal(\"Oops...!\", \"This contact name is already taken!\", \"error\");\n    } else {\n      Meteor.call('createManageContact', contactName, contactAddress, contactPhone, contactEmail, contactSubject, contactMessage, userId, lastModified, function (error, result) {\n        if (error) {\n          console.log(error.reason);\n        } else if (result) {\n          Bert.alert(\"Successfully Inserted..!!\");\n        }\n      });\n    }\n\n    swal(\"Done\", \"Your contact has been Created!.\", \"success\");\n    $(\".newTemplateForm\").css({\n      display: 'none'\n    });\n  }\n\n  edit(e) {\n    e.preventDefault();\n    const manageContacts = ManageContacts.find({\n      _id: this.props.params.id\n    }).fetch();\n    manageContacts.map(manageContact => {\n      $(\"#manageContactName\").val(manageContact.manageContactName);\n      $(\"#manageContactAddress\").val(manageContact.manageContactAddress);\n      $(\"#manageContactPhone\").val(manageContact.manageContactPhone);\n      $(\"#manageContactEmail\").val(manageContact.manageContactEmail);\n      $(\"#manageContactSubject\").val(manageContact.manageContactSubject);\n      $('.note-editable').html(manageContact.manageContactMessage);\n      $('.updatebtn').attr(\"id\", manageContact._id);\n    });\n    $(\".updatebtn\").css({\n      display: 'block'\n    });\n    $(\".sendtxtmsgbtn\").css({\n      display: 'none'\n    });\n    $(\".newTemplateForm\").css({\n      display: 'block'\n    });\n  }\n\n  delete(e) {\n    e.preventDefault(); // console.log(e.target.getAttribute('id'));\n\n    let id = e.target.getAttribute('id');\n    swal({\n      title: \"Are you sure?\",\n      text: \"You want to delete this contact!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      closeOnConfirm: false,\n      html: false\n    }, function () {\n      Meteor.call(\"deleteManageContact\", id, function (error, result) {\n        if (error) {\n          console.log(error.reason);\n        } else if (result) {\n          Bert.alert(\"Successfully Deleted..!!\");\n        }\n      });\n      swal(\"Done\", \"Your contact has been deleted!.\", \"success\");\n    });\n    $(\".newTemplateForm\").css({\n      display: 'none'\n    });\n  }\n\n  renderTableRow() {\n    return this.state.manageContacts.map(manageContact => {\n      return React.createElement(\n        \"tr\",\n        null,\n        React.createElement(\n          \"td\",\n          null,\n          manageContact.manageContactName\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          React.createElement(\n            \"a\",\n            {\n              href: '/managecontact/' + manageContact._id,\n              onClick: this.edit.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"fa fa-pencil\"\n            }),\n            \"Edit\"\n          )\n        ),\n        React.createElement(\n          \"td\",\n          null,\n          React.createElement(\n            \"a\",\n            {\n              href: \"#\",\n              id: manageContact._id,\n              onClick: this.delete.bind(this)\n            },\n            React.createElement(\"i\", {\n              className: \"fa fa-trash-o\"\n            }),\n            \" Delete\"\n          )\n        )\n      );\n    });\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        \"div\",\n        {\n          className: \"content-wrapper\"\n        },\n        React.createElement(\n          \"section\",\n          {\n            className: \"content-header\"\n          },\n          React.createElement(\n            \"h1\",\n            null,\n            \"Dashboard\",\n            React.createElement(\n              \"small\",\n              null,\n              \"Version 3.0\"\n            )\n          ),\n          React.createElement(\n            \"ol\",\n            {\n              className: \"breadcrumb\"\n            },\n            React.createElement(\n              \"li\",\n              null,\n              React.createElement(\n                \"a\",\n                {\n                  href: \"#\"\n                },\n                React.createElement(\"i\", {\n                  className: \"fa fa-dashboard\"\n                }),\n                \" Home\"\n              )\n            ),\n            React.createElement(\n              \"li\",\n              {\n                className: \"active\"\n              },\n              \"Manage Contact\"\n            )\n          )\n        ),\n        React.createElement(\n          \"section\",\n          {\n            className: \"content\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"row\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-md-12\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box-header with-border\"\n                  },\n                  React.createElement(\n                    \"h3\",\n                    {\n                      className: \"box-title\"\n                    },\n                    \"Manage Contact\"\n                  ),\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"box-tools pull-right\"\n                    },\n                    React.createElement(\n                      \"button\",\n                      {\n                        type: \"button\",\n                        className: \"btn btn-box-tool btn-minus\",\n                        \"data-widget\": \"collapse\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-minus\"\n                      })\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"btn-group\"\n                      },\n                      React.createElement(\n                        \"button\",\n                        {\n                          type: \"button\",\n                          className: \"btn btn-box-tool dropdown-toggle\",\n                          \"data-toggle\": \"dropdown\"\n                        },\n                        React.createElement(\"i\", {\n                          className: \"fa fa-wrench\"\n                        })\n                      ),\n                      React.createElement(\n                        \"ul\",\n                        {\n                          className: \"dropdown-menu\",\n                          role: \"menu\"\n                        },\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Action\"\n                          )\n                        ),\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Another action \"\n                          )\n                        ),\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Something else here\"\n                          )\n                        ),\n                        React.createElement(\"li\", {\n                          className: \"divider\"\n                        }),\n                        React.createElement(\n                          \"li\",\n                          null,\n                          React.createElement(\n                            \"a\",\n                            {\n                              href: \"#\"\n                            },\n                            \"Separated link\"\n                          )\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"button\",\n                      {\n                        type: \"button\",\n                        className: \"btn btn-box-tool\",\n                        \"data-widget\": \"remove\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-times\"\n                      })\n                    )\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box-body\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"row\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"col-md-12\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                          \"h1\",\n                          {\n                            className: \"reportTitleName\"\n                          },\n                          \"Manage Contact\"\n                        ),\n                        React.createElement(\"hr\", null),\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                          },\n                          React.createElement(\n                            \"form\",\n                            {\n                              className: \"newTemplateForm\"\n                            },\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Head Quarter\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"manageContactName\",\n                                    id: \"manageContactName\",\n                                    name: \"manageContactName\",\n                                    value: this.state.manageContactName,\n                                    onChange: this.handleChange,\n                                    className: \"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Address\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"manageContactAddress\",\n                                    id: \"manageContactAddress\",\n                                    name: \"manageContactAddress\",\n                                    value: this.state.manageContactAddress,\n                                    onChange: this.handleChange,\n                                    className: \"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Contact Phone\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"manageContactPhone\",\n                                    id: \"manageContactPhone\",\n                                    name: \"manageContactPhone\",\n                                    value: this.state.manageContactPhone,\n                                    onChange: this.handleChange,\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Contact Email\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"manageContactEmail\",\n                                    id: \"manageContactEmail\",\n                                    name: \"manageContactEmail\",\n                                    value: this.state.manageContactEmail,\n                                    onChange: this.handleChange,\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow subjectRow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group subjectDiv\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Contact Subject\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\"input\", {\n                                    type: \"text\",\n                                    ref: \"manageContactSubject\",\n                                    id: \"manageContactSubject\",\n                                    name: \"manageContactSubject\",\n                                    value: this.state.manageContactSubject,\n                                    onChange: this.handleChange,\n                                    className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                  })\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"row inputrow\"\n                              },\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"form-group\"\n                                  },\n                                  React.createElement(\n                                    \"label\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                    },\n                                    \"Message\",\n                                    React.createElement(\n                                      \"span\",\n                                      {\n                                        className: \"astrick\"\n                                      },\n                                      \"*\"\n                                    ),\n                                    \":\"\n                                  ),\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\"\n                                    },\n                                    React.createElement(\"div\", {\n                                      id: \"messageContent\",\n                                      name: \"manageContactMessage\",\n                                      ref: \"manageContactMessage\"\n                                    })\n                                  )\n                                )\n                              )\n                            ),\n                            React.createElement(\n                              \"div\",\n                              {\n                                className: \"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                              },\n                              React.createElement(\n                                \"button\",\n                                {\n                                  onClick: this.handleSubmit.bind(this),\n                                  type: \"submit\",\n                                  className: \"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\"\n                                },\n                                \"Submit Page\"\n                              ),\n                              React.createElement(\n                                \"button\",\n                                {\n                                  onClick: this.handleUpdate.bind(this),\n                                  type: \"submit\",\n                                  className: \"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\"\n                                },\n                                \"Update Page\"\n                              )\n                            )\n                          )\n                        ),\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"dataTable tableBasicPage\"\n                          },\n                          React.createElement(\n                            \"table\",\n                            {\n                              className: \"heavyTable\",\n                              \"class\": \"display\",\n                              width: \"100%\",\n                              cellspacing: \"0\"\n                            },\n                            React.createElement(\n                              \"thead\",\n                              null,\n                              React.createElement(\n                                \"tr\",\n                                null,\n                                React.createElement(\n                                  \"th\",\n                                  null,\n                                  \"Basic Page Name\"\n                                ),\n                                React.createElement(\"th\", null),\n                                React.createElement(\"th\", null)\n                              )\n                            ),\n                            React.createElement(\n                              \"tfoot\",\n                              null,\n                              React.createElement(\n                                \"tr\",\n                                null,\n                                React.createElement(\n                                  \"th\",\n                                  null,\n                                  \"Basic Page Name\"\n                                ),\n                                React.createElement(\"th\", null),\n                                React.createElement(\"th\", null)\n                              )\n                            ),\n                            React.createElement(\n                              \"tbody\",\n                              null,\n                              this.renderTableRow()\n                            )\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditPageContainer = createContainer(props => {\n  const postHandle = Meteor.subscribe('manageContacts'); // var editManageContacts   = this.props.params.id;\n  // console.log(\"Param\" +editManageContacts);\n\n  const manageContacts = ManageContacts.find().fetch() || {};\n  const loading = !postHandle.ready();\n  return {\n    loading,\n    manageContacts\n  };\n}, ManageContact);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/reactCMS/components/ManageContact.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","default","render","TrackerReact","createContainer","Validation","validator","ManageContacts","ManageContact","constructor","props","state","manageContactName","manageContacts","manageContactAddress","manageContactEmail","manageContactPhone","manageContactSubject","manageContactMessage","id","_id","handleChange","bind","componentWillReceiveProps","nextProps","loading","setState","event","target","name","value","componentDidMount","$","length","dashboardCss","document","createElement","type","rel","href","head","append","hasClass","console","log","adminLte","src","setAttribute","manageContactTracker","Tracker","autorun","subscribe","find","fetch","componentWillUnmount","remove","stop","handleUpdate","e","preventDefault","contactName","refs","contactAddress","contactPhone","contactEmail","contactSubject","contactMessage","summernote","userId","lastModified","Date","getAttribute","call","error","result","reason","Bert","alert","swal","css","display","handleSubmit","contactNameExist","findOne","edit","params","map","manageContact","val","html","attr","delete","title","text","showCancelButton","confirmButtonColor","confirmButtonText","closeOnConfirm","renderTableRow","EditPageContainer","postHandle","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/reactCMS/components/ManageContact.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\n\nimport { ManageContacts } from '../api/ManageContacts';\n\n\nclass ManageContact extends TrackerReact (Component){\n  constructor(props) {\n\t  super(props);\n\t  this.state = {\n      manageContactName       : this.props.manageContacts.manageContactName,\n\t    manageContactAddress    : this.props.manageContacts.manageContactAddress,\n\t    manageContactEmail      : this.props.manageContacts.manageContactEmail,\n\t    manageContactPhone      : this.props.manageContacts.manageContactPhone,\n      manageContactSubject    : this.props.manageContacts.manageContactSubject,\n      manageContactMessage    : this.props.manageContacts.manageContactMessage,\n      id                      : this.props.manageContacts._id,\n      manageContacts          : [],\n\t  };\n    this.handleChange = this.handleChange.bind(this);\n\t}\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.manageContacts){\n         this.setState({\n             manageContactName       : nextProps.manageContacts.manageContactName,\n             manageContactAddress    : nextProps.manageContacts.manageContactAddress,\n             manageContactEmail      : this.props.manageContacts.manageContactEmail,\n       \t     manageContactPhone      : this.props.manageContacts.manageContactPhone,\n             manageContactSubject    : this.props.manageContacts.manageContactSubject,\n             manageContactMessage    : this.props.manageContacts.manageContactMessage,\n             id                      : nextProps.manageContacts._id,\n         });\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event){\n   const target = event.target;\n   const name   = target.name;\n   this.setState({\n    [name]: event.target.value,\n   });\n  }\n  componentDidMount() {\n    if(!$(\"link[href='/css/dashboard.css']\").length > 0){\n      var dashboardCss = document.createElement(\"link\");\n      dashboardCss.type=\"text/css\";\n      dashboardCss.rel =\"stylesheet\";\n      dashboardCss.href=\"/css/dashboard.css\";\n      document.head.append(dashboardCss);\n    }\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n      console.log(\"I am appended!\");\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      adminLte.setAttribute('id','adminLte');\n      $(\"body\").append(adminLte);\n    }\n    this.manageContactTracker = Tracker.autorun( ()=> {\n      Meteor.subscribe(\"manageContacts\");\n      const manageContacts = ManageContacts.find().fetch();\n      this.setState({manageContacts: manageContacts});\n    });\n    // console.log(manageContact);\n  }\n  componentWillUnmount() {\n    console.log('unmounted!');\n    $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n    if(this.manageContactTracker)\n      this.manageContactTracker.stop();\n  }\n  handleUpdate(e){\n    e.preventDefault();\n    console.log(\"i am in update\");\n    let contactName         = this.refs.manageContactName.value;\n    let contactAddress      = this.refs.manageContactAddress.value;\n    let contactPhone        = this.refs.manageContactPhone.value;\n    let contactEmail        = this.refs.manageContactEmail.value;\n    let contactSubject      = this.refs.manageContactSubject.value;\n    let contactMessage      = $('#messageContent').summernote('code');\n    let userId              = Meteor.userId();\n    let lastModified        = new Date();\n    let id                  = e.target.getAttribute('id');\n    Meteor.call('updateManageContact',id,contactName,contactAddress,contactPhone,contactEmail,contactSubject,contactMessage,userId,lastModified,function(error,result){\n        if(error){\n            console.log(error.reason);\n        }else if(result){\n            Bert.alert(\"Successfully Inserted..!!\");\n        }\n    });\n    swal(\"Done\",\n    \"Your contact has been Updated!.\",\n    \"success\");\n    $(\".newTemplateForm\").css({display:'none'});\n  }\n  handleSubmit(e){\n      e.preventDefault();\n      let contactName         = this.refs.manageContactName.value;\n      let contactAddress      = this.refs.manageContactAddress.value;\n      let contactPhone        = this.refs.manageContactPhone.value;\n      let contactEmail        = this.refs.manageContactEmail.value;\n      let contactSubject      = this.refs.manageContactSubject.value;\n      let contactMessage      = $('#messageContent').summernote('code');\n      let userId              = Meteor.userId();\n      let lastModified        = \"\";\n      let contactNameExist    = ManageContacts.findOne({'manageContactName': contactName});\n      if(contactNameExist){\n          swal(\"Oops...!\",\"This contact name is already taken!\",\"error\");\n      }else{\n          Meteor.call('createManageContact',contactName,contactAddress,contactPhone,contactEmail,contactSubject,contactMessage,userId,lastModified,function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n      }\n      swal(\"Done\",\n      \"Your contact has been Created!.\",\n      \"success\");\n      $(\".newTemplateForm\").css({display:'none'});\n  }\n  edit(e){\n    e.preventDefault();\n    const manageContacts = ManageContacts.find({_id: this.props.params.id}).fetch();\n    manageContacts.map((manageContact)=>{\n      $(\"#manageContactName\").val(manageContact.manageContactName);\n      $(\"#manageContactAddress\").val(manageContact.manageContactAddress);\n      $(\"#manageContactPhone\").val(manageContact.manageContactPhone);\n      $(\"#manageContactEmail\").val(manageContact.manageContactEmail);\n      $(\"#manageContactSubject\").val(manageContact.manageContactSubject);\n      $('.note-editable').html(manageContact.manageContactMessage);\n      $('.updatebtn').attr(\"id\",manageContact._id);\n    });\n    $(\".updatebtn\").css({display:'block'});\n    $(\".sendtxtmsgbtn\").css({display:'none'});\n    $(\".newTemplateForm\").css({display:'block'});\n\n  }\n  delete(e){\n    e.preventDefault();\n    // console.log(e.target.getAttribute('id'));\n    let id = e.target.getAttribute('id');\n    swal({\n      title             : \"Are you sure?\",\n      text              : \"You want to delete this contact!\",\n      type              : \"warning\",\n      showCancelButton  : true,\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText : \"Yes, delete it!\",\n      closeOnConfirm    : false,\n      html              : false\n    }, function(){\n      Meteor.call(\"deleteManageContact\",id,function(error,result){\n          if(error){\n              console.log(error.reason);\n          }else if(result){\n              Bert.alert(\"Successfully Deleted..!!\");\n          }\n      });\n      swal(\"Done\",\n      \"Your contact has been deleted!.\",\n      \"success\");\n    });\n      $(\".newTemplateForm\").css({display:'none'});\n  }\n  renderTableRow(){\n    return this.state.manageContacts.map((manageContact) =>{\n      return <tr>\n                <td>{manageContact.manageContactName}</td>\n                <td>\n                  <a href={'/managecontact/' +manageContact._id} onClick={this.edit.bind(this)}>\n                    <i className=\"fa fa-pencil\"></i>Edit\n                  </a>\n                </td>\n                <td>\n                  <a href=\"#\" id={manageContact._id} onClick={this.delete.bind(this)}>\n                    <i className=\"fa fa-trash-o\"></i> Delete\n                  </a>\n                </td>\n            </tr>;\n      });\n  }\n  render(){\n    return(\n      <div>\n        {/* Content Wrapper. Contains page content */}\n        <div className=\"content-wrapper\">\n          {/* Content Header (Page header) */}\n          <section className=\"content-header\">\n            <h1>Dashboard\n              <small>Version 3.0</small>\n            </h1>\n            <ol className=\"breadcrumb\">\n              <li>\n                <a href=\"#\"><i className=\"fa fa-dashboard\" /> Home</a></li>\n              <li className=\"active\">Manage Contact</li>\n            </ol>\n          </section>\n          {/* Main content */}\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"box\">\n                  <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">\n                      Manage Contact\n                    </h3>\n                    <div className=\"box-tools pull-right\">\n                      <button type=\"button\" className=\"btn btn-box-tool btn-minus\" data-widget=\"collapse\">\n                        <i className=\"fa fa-minus\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\">\n                          <i className=\"fa fa-wrench\" /></button>\n                        <ul className=\"dropdown-menu\" role=\"menu\">\n                          <li>\n                            <a href=\"#\">Action</a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Another action </a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Something else here</a>\n                          </li>\n                          <li className=\"divider\" />\n                          <li>\n                            <a href=\"#\">\n                            Separated link\n                            </a>\n                          </li>\n                        </ul>\n                      </div>\n                      <button type=\"button\" className=\"btn btn-box-tool\" data-widget=\"remove\">\n                        <i className=\"fa fa-times\" />\n                      </button>\n                    </div>\n                  </div>\n                  {/* /.box-header */}\n                  <div className=\"box-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div className=\"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t<h1 className=\"reportTitleName\">Manage Contact</h1>\n                \t\t\t\t\t<hr/>\n                \t\t\t\t\t<div className=\"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t<form className=\"newTemplateForm\">\n                              <div className=\"row inputrow\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                  <div className=\"form-group\">\n                                   <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Head Quarter<span className=\"astrick\">*</span>:</label>\n                                        <input type=\"text\" ref=\"manageContactName\" id=\"manageContactName\" name=\"manageContactName\" value={this.state.manageContactName}  onChange={this.handleChange} className=\"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"row inputrow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Address<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"manageContactAddress\" id=\"manageContactAddress\" name=\"manageContactAddress\" value={this.state.manageContactAddress}  onChange={this.handleChange} className=\"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Contact Phone<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"manageContactPhone\" id=\"manageContactPhone\" name=\"manageContactPhone\" value={this.state.manageContactPhone} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Contact Email<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"manageContactEmail\" id=\"manageContactEmail\" name=\"manageContactEmail\" value={this.state.manageContactEmail} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Contact Subject<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"manageContactSubject\" id=\"manageContactSubject\" name=\"manageContactSubject\" value={this.state.manageContactSubject} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"row inputrow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Message<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t\t <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\">\n                \t\t\t\t\t\t\t\t\t \t<div id=\"messageContent\" name=\"manageContactMessage\"\n                                                        ref = \"manageContactMessage\"\n                                                            ></div>\n                \t\t\t\t\t\t\t\t\t </div>\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t<button onClick={this.handleSubmit.bind(this)} type=\"submit\" className=\"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\">Submit Page</button>\n                \t\t\t\t\t\t\t\t<button  onClick={this.handleUpdate.bind(this)} type=\"submit\" className=\"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\">Update Page</button>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t</form>\n                \t\t\t\t\t</div>\n                          <div className=\"dataTable tableBasicPage\">\n                              <table className=\"heavyTable\"  class=\"display\" width=\"100%\" cellspacing=\"0\">\n                                  <thead>\n                                      <tr>\n                                          <th>Basic Page Name</th>\n                                          <th></th>\n                                          <th></th>\n                                      </tr>\n                                  </thead>\n                                  <tfoot>\n                                      <tr>\n                                        <th>Basic Page Name</th>\n                                        <th></th>\n                                        <th></th>\n                                      </tr>\n                                  </tfoot>\n                                  <tbody>\n                                          {this.renderTableRow()}\n                                  </tbody>\n                              </table>\n                          </div>\n                \t\t\t\t</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          {/* /.content */}\n        </div>\n        {/* /.content-wrapper */}\n      </div>\n\n    );\n  }\n}\nEditPageContainer = createContainer( props => {\n\n    const postHandle = Meteor.subscribe('manageContacts');\n\t  // var editManageContacts   = this.props.params.id;\n    // console.log(\"Param\" +editManageContacts);\n    const manageContacts = ManageContacts.find().fetch()|| {};\n    const loading = !postHandle.ready();\n\n    return {\n        loading,\n        manageContacts,\n    };\n}, ManageContact);\n\nexport default EditPageContainer;\n"]},"hash":"e591e9527bee5a73fc8b61385f461af0aa5504e5"}

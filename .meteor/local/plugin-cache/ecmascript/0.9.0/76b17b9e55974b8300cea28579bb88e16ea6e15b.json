{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"./UserInformation.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"UserInformation"}]},{"source":"../../website/ServiceProcess/api/TicketMaster.js","imported":["TicketMaster"],"specifiers":[{"kind":"named","imported":"TicketMaster","local":"TicketMaster"}]},{"source":"../../website/ServiceProcess/api/TicketMaster.js","imported":["TicketBucket"],"specifiers":[{"kind":"named","imported":"TicketBucket","local":"TicketBucket"}]},{"source":"/imports/website/forms/api/userProfile.js","imported":["UserProfile"],"specifiers":[{"kind":"named","imported":"UserProfile","local":"UserProfile"}]},{"source":"/imports/dashboard/companySetting/api/CompanySettingMaster.js","imported":["CompanySettings"],"specifiers":[{"kind":"named","imported":"CompanySettings","local":"CompanySettings"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx","filenameRelative":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx.map","sourceFileName":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TicketDocumentDetail"},"ignored":false,"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 1);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n    default(v) {\n        React = v;\n    },\n\n    Component(v) {\n        Component = v;\n    }\n\n}, 2);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n    render(v) {\n        render = v;\n    }\n\n}, 3);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n    default(v) {\n        TrackerReact = v;\n    }\n\n}, 4);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    withTracker(v) {\n        withTracker = v;\n    }\n\n}, 5);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n    default(v) {\n        Validation = v;\n    }\n\n}, 6);\nlet validator;\nmodule.watch(require(\"validator\"), {\n    default(v) {\n        validator = v;\n    }\n\n}, 7);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker(v) {\n        Tracker = v;\n    }\n\n}, 8);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n    browserHistory(v) {\n        browserHistory = v;\n    }\n\n}, 9);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n    Link(v) {\n        Link = v;\n    }\n\n}, 10);\nlet UserInformation;\nmodule.watch(require(\"./UserInformation.jsx\"), {\n    default(v) {\n        UserInformation = v;\n    }\n\n}, 11);\nlet TicketMaster;\nmodule.watch(require(\"../../website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketMaster(v) {\n        TicketMaster = v;\n    }\n\n}, 12);\nlet TicketBucket;\nmodule.watch(require(\"../../website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketBucket(v) {\n        TicketBucket = v;\n    }\n\n}, 13);\nlet UserProfile;\nmodule.watch(require(\"/imports/website/forms/api/userProfile.js\"), {\n    UserProfile(v) {\n        UserProfile = v;\n    }\n\n}, 14);\nlet CompanySettings;\nmodule.watch(require(\"/imports/dashboard/companySetting/api/CompanySettingMaster.js\"), {\n    CompanySettings(v) {\n        CompanySettings = v;\n    }\n\n}, 15);\n\nclass TicketDocumentDetails extends TrackerReact(Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"ticketDocDetails\": {},\n            \"ticketDocDetailsBoth\": {},\n            \"ticketId\": '',\n            \"index\": '',\n            \"addressType\": '',\n            \"subscription\": {\n                \"singleTicket\": Meteor.subscribe(\"allTickets\"),\n                \"ticketBucket\": Meteor.subscribe(\"allTicketBucket\"),\n                \"userProfileSubscribe\": Meteor.subscribe(\"userProfileData\"),\n                \"companyData\": Meteor.subscribe(\"companyData\")\n            }\n        };\n    }\n\n    acceptpermanentTicket(event) {\n        event.preventDefault();\n        $(event.target).css({\n            'backgroundColor': '#00b8ff',\n            'color': '#fff'\n        });\n        $(event.target).siblings().css({\n            'backgroundColor': '#fff',\n            'color': '#00b8ff'\n        });\n        var status = $(event.currentTarget).attr('data-status');\n        var index = $(event.currentTarget).attr('data-index');\n        var id = $(event.currentTarget).attr('data-id');\n        var addressType = $(event.currentTarget).attr('data-addresstype');\n        Meteor.call(\"addDocument\", id, index, status, addressType, function (error, result) {\n            if (result) {\n                console.log(\"add successfully\");\n            }\n        });\n    }\n\n    componentDidMount() {//     this.ticketTracket=Tracker.autorun(()=>{\n        //         if(this.state.subscription.singleTicket.ready()){\n        //             var ticketId = this.props.ticketId;\n        //             var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.0.empid':Meteor.userId()});\n        //             // console.log(ticketObj);\n        //             if(ticketObj){\n        //                 if(ticketObj.addressType == \"currentAddress\"){\n        //                     console.log(ticketObj.addressType);\n        //                     var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n        //                     var index  = arrLen-1;\n        //                     console.log(arrLen);\n        //                     this.setState({\n        //                         'ticketId': ticketId,\n        //                         'index': index,\n        //                         'addressType': \"Current Address\",\n        //                         'ticketDocDetails':ticketObj.ticketElement[0].currentAddress[arrLen-1],\n        //                     });\n        //                 } else if(ticketObj.addressType == \"permanentAddress\"){\n        //                     var currentPos = 0;\n        //                     var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n        //                     var index  = arrLen-1;\n        //                     this.setState({\n        //                         'ticketId': ticketId,\n        //                         'index': index,\n        //                         'addressType': \"Permanent Address\",\n        //                         'ticketDocDetails':ticketObj.ticketElement[0].permanentAddress[arrLen-1],\n        //                     });\n        //                     console.log(this.state.ticketDocDetails);\n        //                 } \n        //             }\n        //         }\n        //     });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!nextProps.loading) {\n            var ticketId = this.props.ticketId;\n            console.log(\"inside component will receive props ticketId :\" + ticketId);\n            var ticketObj = TicketMaster.findOne({\n                '_id': ticketId,\n                'ticketElement.0.empid': Meteor.userId()\n            }); // console.log(ticketObj);\n\n            if (ticketObj) {\n                console.log(ticketObj);\n\n                if (ticketObj.addressType == \"currentAddress\") {\n                    // console.log(ticketObj.addressType);\n                    var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n                    var index = arrLen - 1; // console.log(arrLen);\n\n                    this.setState({\n                        'ticketId': ticketId,\n                        'index': index,\n                        'addressType': \"Current Address\",\n                        'ticketDocDetails': ticketObj.ticketElement[0].currentAddress[arrLen - 1]\n                    });\n                } else if (ticketObj.addressType == \"permanentAddress\") {\n                    var currentPos = 0;\n                    var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n                    var index = arrLen - 1;\n                    this.setState({\n                        'ticketId': ticketId,\n                        'index': index,\n                        'addressType': \"Permanent Address\",\n                        'ticketDocDetails': ticketObj.ticketElement[0].permanentAddress[arrLen - 1]\n                    }); // console.log(this.state.ticketDocDetails);\n                }\n            }\n        }\n    }\n\n    updateTicketStatus(event) {\n        event.preventDefault(); // console.log(\"inside onclick\");\n\n        var ticketId = $(event.currentTarget).attr('data-id'); // console.log(\"ticketId :\"+ticketId);\n\n        var ticketObj = TicketMaster.findOne({\n            '_id': ticketId,\n            'ticketElement.empid': Meteor.userId()\n        });\n\n        if (ticketObj) {\n            // console.log(ticketObj);\n            if (ticketObj.serviceName == 'Address Verification') {\n                var permanentLen = ticketObj.ticketElement[0].permanentAddress.length;\n                var currentLen = ticketObj.ticketElement[0].currentAddress.length; // console.log(\"permanentLen :\"+permanentLen);\n                // console.log(\"currentLen :\"+currentLen);\n                // if((ticketObj.ticketElement[0].permanentAddress.length> 0) || (ticketObj.ticketElement[0].currentAddress.length>0)){\n                //     if((ticketObj.ticketElement[0].permanentAddress[permanentLen-1].status == \"Approved\") || (ticketObj.ticketElement[0].currentAddress[currentLen-1].status== \"Approved\")){\n                //         var finalStatus = \"Approved\";           \n                //     }else{\n                //         var finalStatus = \"Rejected\";\n                //     }\n                //     console.log(\"finalStatus :\"+finalStatus);\n                // }\n\n                if (ticketObj.ticketElement[0].permanentAddress.length > 0) {\n                    if (ticketObj.ticketElement[0].permanentAddress[permanentLen - 1].status == \"Approved\") {\n                        var finalStatus = \"Approved\";\n                    } else {\n                        var finalStatus = \"Rejected\";\n                    }\n                } else if (ticketObj.ticketElement[0].currentAddress.length > 0) {\n                    if (ticketObj.ticketElement[0].currentAddress[currentLen - 1].status == \"Approved\") {\n                        var finalStatus = \"Approved\";\n                    } else {\n                        var finalStatus = \"Rejected\";\n                    }\n                }\n            }\n\n            Meteor.call('updateTicketFinalStatus', ticketId, finalStatus, function (error, result) {\n                if (result) {\n                    var memberDetails = Meteor.users.find({\n                        \"roles\": \"team leader\"\n                    }, {\n                        sort: {\n                            'count': 1\n                        }\n                    }).fetch();\n                    var companyObj = CompanySettings.findOne({\n                        \"maxnoOfTicketAllocate.role\": \"team leader\"\n                    });\n\n                    for (var i = 0; i < companyObj.maxnoOfTicketAllocate.length; i++) {\n                        if (companyObj.maxnoOfTicketAllocate[i].role == \"team leader\") {\n                            var allocatedtickets = companyObj.maxnoOfTicketAllocate[i].maxTicketAllocate;\n                            console.log(\"allocatedtickets :\" + allocatedtickets);\n                        }\n                    }\n\n                    console.log(\"memberDetails :\" + memberDetails);\n\n                    for (var k = 0; k < memberDetails.length; k++) {\n                        console.log(\"memberDetails length :\" + memberDetails.length);\n                        console.log(\"memberDetails length :\" + memberDetails[k]._id);\n                        console.log(\"memberDetails[k].count :\" + memberDetails[k].count); // if(memberDetails[k].count==undefined || memberDetails[k].count<allocatedtickets){\n\n                        console.log(\"inside if memberDetails[k].count :\" + memberDetails[k].count);\n                        var newTicketAllocated = {\n                            'ticketid': ticketId,\n                            'empID': memberDetails[k]._id,\n                            'role': 'team leader'\n                        };\n                        console.log(newTicketAllocated);\n                        Meteor.call('updateTicketBucket', newTicketAllocated, function (error, result) {\n                            if (result) {\n                                console.log(\"ticketid :\" + newTicketAllocated.ticketid);\n                                var ticketBucketDetail = TicketBucket.findOne({\n                                    \"ticketid\": newTicketAllocated.ticketid\n                                });\n                                console.log(\"ticketBucketDetail:\" + ticketBucketDetail);\n\n                                if (ticketBucketDetail) {\n                                    console.log(\"ticketBucketDetail:\" + ticketBucketDetail);\n                                    var ticketId = newTicketAllocated.ticketid;\n                                    var empID = newTicketAllocated.empID;\n                                    var role = newTicketAllocated.role;\n                                    console.log(\"ticketId :\" + ticketId);\n                                    console.log(\"empID :\" + empID);\n                                    console.log(\"role :\" + role);\n                                    console.log(\"ticketObj.ticketElement[0].permanentAddress.length :\" + ticketObj.ticketElement[0].permanentAddress.length);\n                                    console.log(\"ticketObj.ticketElement[0].currentAddress.length :\" + ticketObj.ticketElement[0].currentAddress.length);\n\n                                    if (ticketObj.ticketElement[0].permanentAddress.length > 0) {\n                                        var permanentAddress = ticketObj.ticketElement[0].permanentAddress[permanentLen - 1];\n                                    } else {\n                                        var permanentAddress = [];\n                                    }\n\n                                    if (ticketObj.ticketElement[0].currentAddress.length > 0) {\n                                        var currentAddress = ticketObj.ticketElement[0].currentAddress[currentLen - 1];\n                                    } else {\n                                        var currentAddress = [];\n                                    }\n\n                                    Meteor.call('updateTicketElement', ticketId, empID, role, permanentAddress, currentAddress, function (error, result) {\n                                        console.log(\"success updateTicketElement\");\n                                    });\n                                }\n                            }\n                        });\n\n                        if (memberDetails[k].count) {\n                            console.log(\"memberDetails[k].count :\" + memberDetails[k].count);\n                            var newCount = memberDetails[k].count + 1;\n                        } else {\n                            var newCount = 1;\n                        }\n\n                        Meteor.call('updateCommitteeUserCount', newCount, memberDetails[k]._id);\n                        break; // }else{\n                        // \tconsole.log(\"Inside else updateCommitteeUserCount\");\t\t\t\t\t\t\t\n                        // \t// Meteor.call('updateCommitteeUserCount',0,memberDetails[k]._id);\n                        // }\n                    }\n                }\n            });\n        }\n    }\n\n    acceptTicket(event) {\n        $(event.target).css({\n            'backgroundColor': '#00b8ff',\n            'color': '#fff'\n        });\n        $(event.target).siblings().css({\n            'backgroundColor': '#fff',\n            'color': '#00b8ff'\n        }); // var path = \"/admin/ticketdocumentdetails\";\n        // browserHistory.replace(path);\n    }\n\n    rejectTicket(event) {\n        event.preventDefault();\n        $(event.target).parent().parent().siblings('.otherInfoFormGroup').slideUp();\n        $(event.target).css({\n            'backgroundColor': '#00b8ff',\n            'color': '#fff'\n        });\n        $(event.target).siblings().css({\n            'backgroundColor': '#fff',\n            'color': '#00b8ff'\n        }); // $(event.target).parent().parent().siblings().children().find('textarea').attr('disabled','disabled');\n    }\n\n    render() {\n        // console.log(\"id = \",this.props.params.id);\n        return React.createElement(\n            \"div\",\n            {\n                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n                \"div\",\n                {\n                    className: \"box-header with-border\"\n                },\n                React.createElement(\n                    \"h2\",\n                    {\n                        className: \"box-title\"\n                    },\n                    \"Address Documents\"\n                )\n            ),\n            React.createElement(\n                \"div\",\n                {\n                    className: \"box-body\"\n                },\n                React.createElement(\n                    \"div\",\n                    {\n                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                    },\n                    React.createElement(\n                        \"div\",\n                        {\n                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                            \"div\",\n                            {\n                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 docwrap\"\n                            },\n                            this.state.addressType == \"Current Address\" ? React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\"\n                                },\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12\"\n                                    },\n                                    React.createElement(\n                                        \"h5\",\n                                        null,\n                                        \" \",\n                                        this.state.addressType\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\"\n                                        },\n                                        this.state.ticketDocDetails.tempLine1,\n                                        this.state.ticketDocDetails.tempLine2,\n                                        this.state.ticketDocDetails.tempLine3,\n                                        \", \\xA0\",\n                                        this.state.ticketDocDetails.tempLandmark,\n                                        \",\",\n                                        this.state.ticketDocDetails.tempCity,\n                                        \",\",\n                                        this.state.ticketDocDetails.tempState,\n                                        \", \",\n                                        this.state.ticketDocDetails.tempState,\n                                        \",\",\n                                        this.state.ticketDocDetails.tempPincode\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-2 col-md-4 col-sm-6 col-xs-6\"\n                                    },\n                                    React.createElement(\"img\", {\n                                        src: \"/images/assureid/pdf.png\",\n                                        className: \" img-thumbnail ticketUserImage\"\n                                    })\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-12 col-md-4 col-sm-6 col-xs-6\"\n                                        },\n                                        React.createElement(\n                                            \"button\",\n                                            {\n                                                type: \"button\",\n                                                className: \"btn btn-info acceptTicket acceptreject\",\n                                                \"data-addresstype\": this.state.addressType,\n                                                \"data-id\": this.state.ticketId,\n                                                \"data-index\": this.state.index,\n                                                \"data-status\": \"Approved\",\n                                                onClick: this.acceptpermanentTicket.bind(this)\n                                            },\n                                            \"Approved\"\n                                        ),\n                                        React.createElement(\n                                            \"button\",\n                                            {\n                                                type: \"button\",\n                                                className: \"btn btn-info rejectTicket acceptreject\",\n                                                \"data-addresstype\": this.state.addressType,\n                                                \"data-id\": this.state.ticketId,\n                                                \"data-index\": this.state.index,\n                                                \"data-status\": \"Reject\",\n                                                onClick: this.acceptpermanentTicket.bind(this)\n                                            },\n                                            \"Reject\"\n                                        )\n                                    )\n                                )\n                            ) : // this.state.addressType == \"Permanent Address\"\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\"\n                                },\n                                React.createElement(\n                                    \"h5\",\n                                    null,\n                                    \" \",\n                                    this.state.addressType\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\"\n                                        },\n                                        this.state.ticketDocDetails.line1,\n                                        this.state.ticketDocDetails.line2,\n                                        this.state.ticketDocDetails.line3,\n                                        \", \\xA0\",\n                                        this.state.ticketDocDetails.landmark,\n                                        \",\",\n                                        this.state.ticketDocDetails.city,\n                                        \",\",\n                                        this.state.ticketDocDetails.state,\n                                        \", \",\n                                        this.state.ticketDocDetails.country,\n                                        \",\",\n                                        this.state.ticketDocDetails.pincode,\n                                        this.state.ticketDocDetails.residingFrom,\n                                        \" - \",\n                                        this.state.ticketDocDetails.residingTo\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-2 col-md-4 col-sm-6 col-xs-6\"\n                                    },\n                                    React.createElement(\"img\", {\n                                        src: \"/images/assureid/pdf.png\",\n                                        className: \" img-thumbnail ticketUserImage\"\n                                    })\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-12 col-md-4 col-sm-6 col-xs-6\"\n                                        },\n                                        React.createElement(\n                                            \"button\",\n                                            {\n                                                type: \"button\",\n                                                className: \"btn btn-info acceptTicket acceptreject\",\n                                                \"data-addresstype\": this.state.addressType,\n                                                \"data-id\": this.state.ticketId,\n                                                \"data-index\": this.state.index,\n                                                \"data-status\": \"Approved\",\n                                                onClick: this.acceptpermanentTicket.bind(this)\n                                            },\n                                            \"Approved\"\n                                        ),\n                                        React.createElement(\n                                            \"button\",\n                                            {\n                                                type: \"button\",\n                                                className: \"btn btn-info rejectTicket acceptreject\",\n                                                \"data-addresstype\": this.state.addressType,\n                                                \"data-id\": this.state.ticketId,\n                                                \"data-index\": this.state.index,\n                                                \"data-status\": \"Reject\",\n                                                onClick: this.acceptpermanentTicket.bind(this)\n                                            },\n                                            \"Reject\"\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 approvedstatus\"\n                                },\n                                React.createElement(\n                                    \"button\",\n                                    {\n                                        type: \"button\",\n                                        className: \"btn btn-primary btnapproved\",\n                                        \"data-id\": this.state.ticketId,\n                                        onClick: this.updateTicketStatus.bind(this)\n                                    },\n                                    \"Submit\"\n                                )\n                            )\n                        )\n                    ),\n                    React.createElement(\"div\", {\n                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                    })\n                )\n            )\n        );\n    }\n\n}\n\nticketDocDetailContainer = withTracker(props => {\n    //   console.log('props: ',this.props);\n    var _id = props.ticketId; // console.log(\"_id\",_id);\n\n    const postHandle = Meteor.subscribe('singleTicket', _id);\n    const userfunction = Meteor.subscribe('userfunction');\n    const singleTicket = Meteor.subscribe(\"allTickets\");\n    const ticketBucket = Meteor.subscribe(\"allTicketBucket\");\n    const userProfilSubscribe = Meteor.subscribe(\"userProfileData\");\n    const companyData = Meteor.subscribe(\"companyData\");\n    const getTicket = TicketMaster.findOne({\n        \"_id\": _id\n    }) || {}; // console.log(\"getTicket\",getTicket); \n\n    const loading = !postHandle.ready() && !userfunction.ready() && !singleTicket.ready() && !ticketBucket.ready() && !userProfilSubscribe.ready() && !companyData.ready(); // if(_id){\n\n    return {\n        loading: loading,\n        getTicket: getTicket,\n        ticketId: _id\n    }; // }\n})(TicketDocumentDetails);\nmodule.exportDefault(ticketDocDetailContainer);","map":{"version":3,"sources":["imports/dashboard/ticketManagement/TicketDocumentDetail.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","default","render","TrackerReact","withTracker","Validation","validator","Tracker","browserHistory","Link","UserInformation","TicketMaster","TicketBucket","UserProfile","CompanySettings","TicketDocumentDetails","constructor","props","state","subscribe","acceptpermanentTicket","event","preventDefault","$","target","css","siblings","status","currentTarget","attr","index","id","addressType","call","error","result","console","log","componentDidMount","componentWillReceiveProps","nextProps","loading","ticketId","ticketObj","findOne","userId","arrLen","ticketElement","currentAddress","length","setState","currentPos","permanentAddress","updateTicketStatus","serviceName","permanentLen","currentLen","finalStatus","memberDetails","users","find","sort","fetch","companyObj","i","maxnoOfTicketAllocate","role","allocatedtickets","maxTicketAllocate","k","_id","count","newTicketAllocated","ticketid","ticketBucketDetail","empID","newCount","acceptTicket","rejectTicket","parent","slideUp","ticketDocDetails","tempLine1","tempLine2","tempLine3","tempLandmark","tempCity","tempState","tempPincode","bind","line1","line2","line3","landmark","city","country","pincode","residingFrom","residingTo","ticketDocDetailContainer","postHandle","userfunction","singleTicket","ticketBucket","userProfilSubscribe","companyData","getTicket","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\nimport { browserHistory } from 'react-router';\nimport { Link } from 'react-router';\nimport UserInformation from './UserInformation.jsx';\nimport { TicketMaster } from '../../website/ServiceProcess/api/TicketMaster.js';\nimport { TicketBucket } from '../../website/ServiceProcess/api/TicketMaster.js';\nimport { UserProfile } from '/imports/website/forms/api/userProfile.js';\nimport {CompanySettings} from '/imports/dashboard/companySetting/api/CompanySettingMaster.js';\n\n\n\nclass TicketDocumentDetails extends TrackerReact(Component){\n  constructor(props){\n    super(props);\n    \n    this.state = {\n        \"ticketDocDetails\" : {},\n        \"ticketDocDetailsBoth\" : {},\n        \"ticketId\" :'',\n        \"index\"         : '',\n        \"addressType\":'',\n         \"subscription\" : {\n          \"singleTicket\" : Meteor.subscribe(\"allTickets\"),  \n          \"ticketBucket\" : Meteor.subscribe(\"allTicketBucket\"),\n          \"userProfileSubscribe\": Meteor.subscribe(\"userProfileData\"),   \n          \"companyData\"  : Meteor.subscribe(\"companyData\"),\n      } \n    }\n  }\n  acceptpermanentTicket(event){\n    event.preventDefault();\n    $(event.target).css({'backgroundColor':'#00b8ff','color':'#fff'});\n    $(event.target).siblings().css({'backgroundColor':'#fff','color':'#00b8ff'});\n    var status = $(event.currentTarget).attr('data-status');\n    var index = $(event.currentTarget).attr('data-index');\n    var id = $(event.currentTarget).attr('data-id');\n    var addressType = $(event.currentTarget).attr('data-addresstype');\n       \n    Meteor.call(\"addDocument\",id,index,status,addressType,function(error,result){\n        if(result){\n            console.log(\"add successfully\");\n        }\n    });  \n\n  }\n\n    componentDidMount(){\n    //     this.ticketTracket=Tracker.autorun(()=>{\n    //         if(this.state.subscription.singleTicket.ready()){\n    //             var ticketId = this.props.ticketId;\n                \n                \n    //             var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.0.empid':Meteor.userId()});\n    //             // console.log(ticketObj);\n    //             if(ticketObj){\n    //                 if(ticketObj.addressType == \"currentAddress\"){\n    //                     console.log(ticketObj.addressType);\n    //                     var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n    //                     var index  = arrLen-1;\n    //                     console.log(arrLen);\n                        \n    //                     this.setState({\n    //                         'ticketId': ticketId,\n    //                         'index': index,\n    //                         'addressType': \"Current Address\",\n    //                         'ticketDocDetails':ticketObj.ticketElement[0].currentAddress[arrLen-1],\n    //                     });\n                        \n    //                 } else if(ticketObj.addressType == \"permanentAddress\"){\n    //                     var currentPos = 0;\n    //                     var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n    //                     var index  = arrLen-1;\n    //                     this.setState({\n    //                         'ticketId': ticketId,\n    //                         'index': index,\n    //                         'addressType': \"Permanent Address\",\n    //                         'ticketDocDetails':ticketObj.ticketElement[0].permanentAddress[arrLen-1],\n    //                     });\n    //                     console.log(this.state.ticketDocDetails);\n                        \n    //                 } \n    //             }\n    //         }\n    //     });\n    }\n\n    componentWillReceiveProps(nextProps){\n\n        if(!nextProps.loading){\n            var ticketId = this.props.ticketId;\n            console.log(\"inside component will receive props ticketId :\"+ticketId);\n            var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.0.empid':Meteor.userId()});\n            // console.log(ticketObj);\n            if(ticketObj){\n                console.log(ticketObj);\n                if(ticketObj.addressType == \"currentAddress\"){\n                    // console.log(ticketObj.addressType);\n                    var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n                    var index  = arrLen-1;\n                    // console.log(arrLen);\n                    \n                    this.setState({\n                        'ticketId': ticketId,\n                        'index': index,\n                        'addressType': \"Current Address\",\n                        'ticketDocDetails':ticketObj.ticketElement[0].currentAddress[arrLen-1],\n                    });\n                    \n                } else if(ticketObj.addressType == \"permanentAddress\"){\n                    var currentPos = 0;\n                    var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n                    var index  = arrLen-1;\n                    this.setState({\n                        'ticketId': ticketId,\n                        'index': index,\n                        'addressType': \"Permanent Address\",\n                        'ticketDocDetails':ticketObj.ticketElement[0].permanentAddress[arrLen-1],\n                    });\n                    // console.log(this.state.ticketDocDetails);\n                    \n                } \n            }\n        }\n           \n    }\n    updateTicketStatus(event){\n\n        event.preventDefault();\n        // console.log(\"inside onclick\");\n        var ticketId = $(event.currentTarget).attr('data-id');  \n        // console.log(\"ticketId :\"+ticketId);\n        var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.empid':Meteor.userId()});                         \n        if(ticketObj){\n            // console.log(ticketObj);\n            if(ticketObj.serviceName == 'Address Verification'){\n                var permanentLen = ticketObj.ticketElement[0].permanentAddress.length;\n                var currentLen = ticketObj.ticketElement[0].currentAddress.length;\n                // console.log(\"permanentLen :\"+permanentLen);\n                // console.log(\"currentLen :\"+currentLen);\n                // if((ticketObj.ticketElement[0].permanentAddress.length> 0) || (ticketObj.ticketElement[0].currentAddress.length>0)){\n                //     if((ticketObj.ticketElement[0].permanentAddress[permanentLen-1].status == \"Approved\") || (ticketObj.ticketElement[0].currentAddress[currentLen-1].status== \"Approved\")){\n                //         var finalStatus = \"Approved\";           \n                //     }else{\n                //         var finalStatus = \"Rejected\";\n                //     }\n                //     console.log(\"finalStatus :\"+finalStatus);\n\n                // }\n                if(ticketObj.ticketElement[0].permanentAddress.length> 0){\n                    if(ticketObj.ticketElement[0].permanentAddress[permanentLen-1].status == \"Approved\"){\n                        var finalStatus = \"Approved\";           \n                    }else{\n                        var finalStatus = \"Rejected\";\n                    }    \n                }else if(ticketObj.ticketElement[0].currentAddress.length> 0){\n                    if(ticketObj.ticketElement[0].currentAddress[currentLen-1].status == \"Approved\"){\n                        var finalStatus = \"Approved\";           \n                    }else{\n                        var finalStatus = \"Rejected\";\n                    }    \n                }\n            }\n            Meteor.call('updateTicketFinalStatus',ticketId,finalStatus,function(error,result){\n                if(result){\n\t\t\t\t\tvar memberDetails = Meteor.users.find({\"roles\":\"team leader\"},{sort:{'count':1}}).fetch();\n\t\t\t\t\tvar companyObj = CompanySettings.findOne({\"maxnoOfTicketAllocate.role\":\"team leader\"});\n\t\t\t\t\tfor(var i=0;i<companyObj.maxnoOfTicketAllocate.length;i++){\n\t\t\t\t\t\tif(companyObj.maxnoOfTicketAllocate[i].role == \"team leader\"){\n\t\t\t\t\t\t\tvar allocatedtickets = companyObj.maxnoOfTicketAllocate[i].maxTicketAllocate;\n\t\t\t\t\t\t\tconsole.log(\"allocatedtickets :\"+allocatedtickets);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"memberDetails :\"+memberDetails);\n\t\t\t\t\tfor(var k=0;k<memberDetails.length;k++){\n    \t\t\t\t\tconsole.log(\"memberDetails length :\"+memberDetails.length);\t\t\t\t\t\t\n\t    \t\t\t\tconsole.log(\"memberDetails length :\"+memberDetails[k]._id);\t\t\t\t\t\t\n\t\t    \t\t\tconsole.log(\"memberDetails[k].count :\"+memberDetails[k].count);\t\t\t\t\t\t\n\t\t\t\t\t\t// if(memberDetails[k].count==undefined || memberDetails[k].count<allocatedtickets){\n\t\t\t    \t\tconsole.log(\"inside if memberDetails[k].count :\"+memberDetails[k].count);\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n                        var newTicketAllocated = {\n                            'ticketid' : ticketId,\n                            'empID'    : memberDetails[k]._id,\n                            'role'     : 'team leader',\n                        }\n\t\t\t\t\t    console.log(newTicketAllocated);\n                        Meteor.call('updateTicketBucket',newTicketAllocated,function(error,result){\n                            if(result){\n                                console.log(\"ticketid :\"+newTicketAllocated.ticketid);\n                                \n                                var ticketBucketDetail = TicketBucket.findOne({\"ticketid\":newTicketAllocated.ticketid});\n                                console.log(\"ticketBucketDetail:\"+ticketBucketDetail);\n                                \n                                if(ticketBucketDetail){\n                                    console.log(\"ticketBucketDetail:\"+ticketBucketDetail);\n                                    var ticketId = newTicketAllocated.ticketid;\n                                    var empID    = newTicketAllocated.empID;\n                                    var role     = newTicketAllocated.role;\n                                    console.log(\"ticketId :\"+ticketId);\n                                    console.log(\"empID :\"+empID);\n                                    console.log(\"role :\"+role);\n                                    console.log(\"ticketObj.ticketElement[0].permanentAddress.length :\"+ticketObj.ticketElement[0].permanentAddress.length);\n                                    console.log(\"ticketObj.ticketElement[0].currentAddress.length :\"+ticketObj.ticketElement[0].currentAddress.length);\n\n                                    if(ticketObj.ticketElement[0].permanentAddress.length> 0){\n                                        var permanentAddress   = ticketObj.ticketElement[0].permanentAddress[permanentLen-1];\n                                    }else{\n                                        var permanentAddress = [];\n                                    }\n                                    if(ticketObj.ticketElement[0].currentAddress.length> 0){\n                                        var currentAddress     = ticketObj.ticketElement[0].currentAddress[currentLen-1];\n                                    }else{\n                                        var currentAddress = [];\n                                    }\n                                    Meteor.call('updateTicketElement',ticketId,empID,role,permanentAddress,currentAddress,function(error,result){\n                                        console.log(\"success updateTicketElement\");\n                                    });\n                                } \n                            }\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tif(memberDetails[k].count){\n\t\t\t\t\t\t\t\tconsole.log(\"memberDetails[k].count :\"+memberDetails[k].count);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar newCount = memberDetails[k].count + 1;\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tvar newCount = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tMeteor.call('updateCommitteeUserCount',newCount,memberDetails[k]._id);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t// }else{\n\t\t\t\t\t\t// \tconsole.log(\"Inside else updateCommitteeUserCount\");\t\t\t\t\t\t\t\n\t\t\t\t\t\t// \t// Meteor.call('updateCommitteeUserCount',0,memberDetails[k]._id);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n                }\n            });\n\n        \n        }\n    }\n\n    acceptTicket(event){\n        $(event.target).css({'backgroundColor':'#00b8ff','color':'#fff'});\n        $(event.target).siblings().css({'backgroundColor':'#fff','color':'#00b8ff'});\n        // var path = \"/admin/ticketdocumentdetails\";\n        // browserHistory.replace(path);\n\n    }\n    rejectTicket(event){\n        event.preventDefault();\n        $(event.target).parent().parent().siblings('.otherInfoFormGroup').slideUp();\n        $(event.target).css({'backgroundColor':'#00b8ff','color':'#fff'});\n        $(event.target).siblings().css({'backgroundColor':'#fff','color':'#00b8ff'});\n        // $(event.target).parent().parent().siblings().children().find('textarea').attr('disabled','disabled');\n    }\n\n\t render(){\n    // console.log(\"id = \",this.props.params.id);\n    return(            \n      <div className =\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div className=\"box-header with-border\">\n                   <h2 className=\"box-title\">Address Documents</h2> \n                  </div>\n                  <div className=\"box-body\">\n                     <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                     \t\n                       <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 docwrap\">\n\n                               \n                                {\n                                    this.state.addressType == \"Current Address\" ?\n                                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\">\n                                            <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12\">\n                                               <h5> {this.state.addressType}</h5>\n                                               \n                                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\">\n                                                {this.state.ticketDocDetails.tempLine1}\n                                                {this.state.ticketDocDetails.tempLine2}\n                                                {this.state.ticketDocDetails.tempLine3}, &nbsp;\n                                                {this.state.ticketDocDetails.tempLandmark},\n                                                {this.state.ticketDocDetails.tempCity},{this.state.ticketDocDetails.tempState}, {this.state.ticketDocDetails.tempState},{this.state.ticketDocDetails.tempPincode}\n\n                                                  \n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-2 col-md-4 col-sm-6 col-xs-6\">\n                                                <img src=\"/images/assureid/pdf.png\" className=\" img-thumbnail ticketUserImage\" /> \n                                            </div>\n                                            <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\">\n                                                <div className=\"col-lg-12 col-md-4 col-sm-6 col-xs-6\">\n                                                        <button type=\"button\" className=\"btn btn-info acceptTicket acceptreject\" data-addresstype={this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Approved\" onClick={this.acceptpermanentTicket.bind(this)}>Approved</button>\n                                                        <button type=\"button\" className=\"btn btn-info rejectTicket acceptreject\" data-addresstype = {this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Reject\" onClick={this.acceptpermanentTicket.bind(this)}>Reject</button>\n                                                </div>\n                                            </div>\n                                        \n                                        </div>\n                                    :\n\n                                    // this.state.addressType == \"Permanent Address\"\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\">\n                                            <h5> {this.state.addressType}</h5>\n                                        \n                                        <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12\">\n                                        \n                                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\">\n                                                  {this.state.ticketDocDetails.line1}\n                                                  {this.state.ticketDocDetails.line2}\n                                                  {this.state.ticketDocDetails.line3}, &nbsp;\n                                                  {this.state.ticketDocDetails.landmark},\n                                                  {this.state.ticketDocDetails.city},{this.state.ticketDocDetails.state}, {this.state.ticketDocDetails.country},{this.state.ticketDocDetails.pincode}\n                                                  {this.state.ticketDocDetails.residingFrom} - {this.state.ticketDocDetails.residingTo}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-2 col-md-4 col-sm-6 col-xs-6\">\n                                            <img src=\"/images/assureid/pdf.png\" className=\" img-thumbnail ticketUserImage\" /> \n                                        </div>\n                                        <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\">\n                                            <div className=\"col-lg-12 col-md-4 col-sm-6 col-xs-6\">\n                                                    <button type=\"button\" className=\"btn btn-info acceptTicket acceptreject\" data-addresstype={this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Approved\" onClick={this.acceptpermanentTicket.bind(this)}>Approved</button>\n                                                    <button type=\"button\" className=\"btn btn-info rejectTicket acceptreject\" data-addresstype = {this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Reject\" onClick={this.acceptpermanentTicket.bind(this)}>Reject</button>\n                                            </div>\n                                        </div>\n                                \n                                    </div>\n                                    \n                                }\n                               \n\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 approvedstatus\">\n                                    {/* <div className=\"col-lg-4 col-lg-offset-2 col-md-12 col-sm-12 col-xs-12\"> */}\n                                        <button type=\"button\" className=\"btn btn-primary btnapproved\" data-id={this.state.ticketId} onClick={this.updateTicketStatus.bind(this)}>Submit</button>\n                                    {/* </div> */}\n                                </div>\n                            </div>  \n                            \n                                          \n                       </div>\n\n                       <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                       </div>\n\n\n                      \n                     </div> \n                  </div>\n                {/* </div>\n              </div>\n            </div>\n          </section>\n        </div> */}\n      </div>    \n    );\n   }\n}\nticketDocDetailContainer = withTracker(props => {\n    //   console.log('props: ',this.props);\n        var _id = props.ticketId;\n        // console.log(\"_id\",_id);\n        const postHandle = Meteor.subscribe('singleTicket',_id);\n        const userfunction = Meteor.subscribe('userfunction');\n        const singleTicket = Meteor.subscribe(\"allTickets\"); \n        const ticketBucket = Meteor.subscribe(\"allTicketBucket\");\n        const userProfilSubscribe = Meteor.subscribe(\"userProfileData\");   \n        const companyData   = Meteor.subscribe(\"companyData\");      \n        \n        const getTicket  = TicketMaster.findOne({\"_id\" : _id}) || {};  \n        // console.log(\"getTicket\",getTicket); \n       \n        const loading = !postHandle.ready() && !userfunction.ready() && !singleTicket.ready() && !ticketBucket.ready() && !userProfilSubscribe.ready() && !companyData.ready();\n    \n        // if(_id){\n          return {\n              loading  : loading,\n              getTicket : getTicket,\n              ticketId  : _id\n          };\n        // }\n    })(TicketDocumentDetails);\n    export default ticketDocDetailContainer;\n    \n"]},"hash":"76b17b9e55974b8300cea28579bb88e16ea6e15b"}

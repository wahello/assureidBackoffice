{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["PhotoGallery","TempPhotoGallery"],"specifiers":[{"kind":"local","local":"PhotoGallery","exported":"PhotoGallery"},{"kind":"local","local":"TempPhotoGallery","exported":"TempPhotoGallery"}]}}},"options":{"filename":"imports/dashboard/reactCMS/api/PhotoGallery.js","filenameRelative":"imports/dashboard/reactCMS/api/PhotoGallery.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/api/PhotoGallery.js.map","sourceFileName":"imports/dashboard/reactCMS/api/PhotoGallery.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"PhotoGallery"},"ignored":false,"code":"module.export({\n  PhotoGallery: () => PhotoGallery,\n  TempPhotoGallery: () => TempPhotoGallery\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst PhotoGallery = new Mongo.Collection(\"photoGallery\");\nconst TempPhotoGallery = new Mongo.Collection(\"tempPhotoGallery\");\n\nif (Meteor.isServer) {\n  Meteor.publish('photoGallery', () => {\n    return PhotoGallery.find({});\n  });\n  Meteor.publish('tempPhotoGallery', () => {\n    return TempPhotoGallery.find({});\n  });\n  Meteor.methods({\n    'uploadTempPhotoGallery': function (id, amazonUrl, uploadTime, altAttribute) {\n      TempPhotoGallery.insert({\n        'id': id,\n        'amazonUrl': amazonUrl,\n        'uploadTime': new Date(),\n        'authorUserId': id,\n        'altAttribute': altAttribute,\n        'submitted': false\n      });\n    },\n    'updateTempPhotoGallery': function (_id, boolean) {\n      TempPhotoGallery.update({\n        '_id': _id\n      }, {\n        $set: {\n          'submitted': boolean\n        }\n      });\n    },\n    'removeTempPhotoGallery': function (id) {\n      TempPhotoGallery.remove({\n        'id': id,\n        'submitted': true\n      });\n    },\n    'removeUnsubmitGalleryImages': function (id) {\n      TempPhotoGallery.remove({\n        'id': id,\n        'submitted': false\n      });\n    },\n    'removeUrlGalleryImages': function (url) {\n      TempPhotoGallery.remove({\n        'amazonUrl': url\n      });\n    },\n    'createPhotoGallery': function (albumName, altAttribute, s3, userId, updateTimestamp) {\n      PhotoGallery.insert({\n        'albumName': albumName,\n        'altAttribute': altAttribute,\n        's3': s3,\n        'createdAt': new Date(),\n        'authorUserId': userId,\n        'lastModified': updateTimestamp\n      });\n    },\n    'updatePhotoGallery': function (id, albumName, altAttribute, userId, updateTimestamp) {\n      PhotoGallery.update({\n        '_id': id\n      }, {\n        $set: {\n          'albumName': albumName,\n          'altAttribute': altAttribute,\n          'authorUserId': userId,\n          'lastModified': updateTimestamp //End of set\n\n        }\n      });\n    },\n    'updateEditPhotoGallery': function (amazonUrl) {\n      PhotoGallery.update({\n        \"s3.amazonUrl\": amazonUrl\n      }, {\n        $set: {\n          's3.$.amazonUrl': \"\",\n          's3.$.uploadTime': \"\" //End of set\n\n        }\n      });\n    },\n    'updateGalleryAmazonUrl': function (amazonUrl, uploadTime, altAttribute, id) {\n      PhotoGallery.update({\n        '_id': id\n      }, {\n        $push: {\n          's3': {\n            'amazonUrl': amazonUrl,\n            'uploadTime': uploadTime\n          }\n        }\n      });\n    },\n    'deletePhotoGallery': function (id) {\n      PhotoGallery.remove({\n        '_id': id\n      });\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/reactCMS/api/PhotoGallery.js"],"names":["module","export","PhotoGallery","TempPhotoGallery","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","methods","id","amazonUrl","uploadTime","altAttribute","insert","Date","_id","boolean","update","$set","remove","url","albumName","s3","userId","updateTimestamp","$push"],"mappings":"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","file":"imports/dashboard/reactCMS/api/PhotoGallery.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const PhotoGallery = new Mongo.Collection(\"photoGallery\");\nexport const TempPhotoGallery = new Mongo.Collection(\"tempPhotoGallery\");\nif(Meteor.isServer){\n    Meteor.publish('photoGallery',()=>{\n        return PhotoGallery.find({});\n    });\n    Meteor.publish('tempPhotoGallery',()=>{\n        return TempPhotoGallery.find({});\n    });\n\n    Meteor.methods({\n      'uploadTempPhotoGallery':function(id,amazonUrl,uploadTime,altAttribute){\n    \t\tTempPhotoGallery.insert({\n    \t\t\t'id'             : id,\n    \t\t\t'amazonUrl'      : amazonUrl,\n    \t\t\t'uploadTime'     : new Date(),\n          'authorUserId'   : id,\n          'altAttribute'   : altAttribute,\n          'submitted'      : false,\n    \t\t});\n    \t},\n      'updateTempPhotoGallery': function(_id, boolean) {\n        TempPhotoGallery.update({\n          '_id': _id\n        }, {\n          $set: {\n            'submitted': boolean,\n          }\n        });\n    \t},\n      'removeTempPhotoGallery':function(id){\n        TempPhotoGallery.remove({'id':id,'submitted':true});\n      },\n      'removeUnsubmitGalleryImages':function(id){\n        TempPhotoGallery.remove({'id':id,'submitted':false});\n      },\n      'removeUrlGalleryImages':function(url){\n        TempPhotoGallery.remove({'amazonUrl':url});\n      },\n    \t'createPhotoGallery':function(albumName,altAttribute,s3,userId,updateTimestamp){\n    \t\tPhotoGallery.insert({\n    \t\t\t'albumName'     : albumName,\n    \t\t\t'altAttribute'  : altAttribute,\n    \t\t\t's3'            : s3,\n    \t\t\t'createdAt'     : new Date(),\n          'authorUserId'  : userId,\n          'lastModified'  : updateTimestamp,\n    \t\t});\n    \t},\n      'updatePhotoGallery':function(id,albumName,altAttribute,userId,updateTimestamp){\n    \t\tPhotoGallery.update(\n    \t\t\t{ '_id': id },\n    \t        {\n    \t          $set:{\n                  'albumName'     : albumName,\n            \t\t\t'altAttribute'  : altAttribute,\n            \t\t\t'authorUserId'  : userId,\n                  'lastModified'  : updateTimestamp,\n    \t        } //End of set\n    \t      }\n    \t\t);\n    \t},\n      'updateEditPhotoGallery':function(amazonUrl){\n    \t\tPhotoGallery.update(\n    \t\t\t{ \"s3.amazonUrl\": amazonUrl },\n    \t        {\n    \t          $set:{\n\n                  's3.$.amazonUrl'   : \"\",\n                  's3.$.uploadTime'  : \"\",\n    \t        } //End of set\n    \t      }\n    \t\t);\n    \t},\n      'updateGalleryAmazonUrl':function(amazonUrl,uploadTime,altAttribute,id){\n    \t\tPhotoGallery.update(\n    \t\t\t   { '_id': id },\n    \t        {\n    \t          $push:{\n                    's3':\n                    {\n                      'amazonUrl': amazonUrl,\n                      'uploadTime':uploadTime,\n                    }\n    \t        }\n    \t      }\n    \t\t);\n    \t},\n      'deletePhotoGallery':function(id){\n     \t\t PhotoGallery.remove({'_id': id});\n\n    \t},\n    });\n}\n"]},"hash":"fd7b6181349adc0b428d18ba5b15623a9e303450"}

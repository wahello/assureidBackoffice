{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["BasicPages"],"specifiers":[{"kind":"local","local":"BasicPages","exported":"BasicPages"}]}}},"options":{"filename":"imports/dashboard/reactCMS/api/BasicPages.js","filenameRelative":"imports/dashboard/reactCMS/api/BasicPages.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/api/BasicPages.js.map","sourceFileName":"imports/dashboard/reactCMS/api/BasicPages.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"BasicPages"},"ignored":false,"code":"module.export({\n    BasicPages: function () {\n        return BasicPages;\n    }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo: function (v) {\n        Mongo = v;\n    }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 1);\nvar BasicPages = new Mongo.Collection(\"basicPages\");\n\nif (Meteor.isServer) {\n    Meteor.publish('basicPages', function () {\n        return BasicPages.find({});\n    });\n    Meteor.methods({\n        'createBasicPage': function (basicPageName, basicPageUrl, basicPageBody, userId, updateTimestamp) {\n            BasicPages.insert({\n                'basicPageName': basicPageName,\n                'basicPageUrl': basicPageUrl,\n                'basicPageBody': basicPageBody,\n                'createdAt': new Date(),\n                'authorUserId': userId,\n                'lastModified': updateTimestamp\n            });\n        },\n        'updateBasicPage': function (id, basicPageName, basicPageUrl, basicPageBody, userId, updateTimestamp) {\n            console.log(\"update server method\");\n            console.log(id);\n            BasicPages.update({\n                '_id': id\n            }, {\n                $set: {\n                    'basicPageName': basicPageName,\n                    'basicPageUrl': basicPageUrl,\n                    'basicPageBody': basicPageBody,\n                    'authorUserId': userId,\n                    'lastModified': updateTimestamp //End of set\n\n                }\n            });\n        },\n        'deleteBasicPage': function (id) {\n            BasicPages.remove({\n                '_id': id\n            });\n        }\n    });\n}","map":{"version":3,"sources":["imports/dashboard/reactCMS/api/BasicPages.js"],"names":["module","export","BasicPages","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","methods","basicPageName","basicPageUrl","basicPageBody","userId","updateTimestamp","insert","Date","id","console","log","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,gBAAW;AAAA,eAAIA,UAAJ;AAAA;AAAZ,CAAd;AAA2C,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,SAAD,YAAOG,CAAP,EAAS;AAACH,gBAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,UAAD,YAAQD,CAAR,EAAU;AAACC,iBAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAGrH,IAAMJ,aAAa,IAAIC,MAAMK,UAAV,CAAqB,YAArB,CAAnB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AACfF,WAAOG,OAAP,CAAe,YAAf,EAA4B,YAAI;AAC5B,eAAOR,WAAWS,IAAX,CAAgB,EAAhB,CAAP;AACH,KAFD;AAIAJ,WAAOK,OAAP,CAAe;AACd,2BAAkB,UAASC,aAAT,EAAuBC,YAAvB,EAAoCC,aAApC,EAAkDC,MAAlD,EAAyDC,eAAzD,EAAyE;AAE1Ff,uBAAWgB,MAAX,CAAkB;AACjB,iCAAmBL,aADF;AAEjB,gCAAmBC,YAFF;AAGjB,iCAAmBC,aAHF;AAIjB,6BAAmB,IAAII,IAAJ,EAJF;AAKd,gCAAmBH,MALL;AAMd,gCAAmBC;AANL,aAAlB;AAQA,SAXa;AAYb,2BAAkB,UAASG,EAAT,EAAYP,aAAZ,EAA0BC,YAA1B,EAAuCC,aAAvC,EAAqDC,MAArD,EAA4DC,eAA5D,EAA4E;AAC5FI,oBAAQC,GAAR,CAAY,sBAAZ;AACAD,oBAAQC,GAAR,CAAYF,EAAZ;AACFlB,uBAAWqB,MAAX,CACC;AAAE,uBAAOH;AAAT,aADD,EAEO;AACEI,sBAAK;AACF,qCAAmBX,aADjB;AAEF,oCAAmBC,YAFjB;AAGF,qCAAmBC,aAHjB;AAIF,oCAAmBC,MAJjB;AAKF,oCAAmBC,eALjB,CAML;;AANK;AADP,aAFP;AAYA,SA3Ba;AA4Bb,2BAAkB,UAASG,EAAT,EAAY;AAC5BlB,uBAAWuB,MAAX,CAAkB;AAAC,uBAAOL;AAAR,aAAlB;AAEF;AA/Ba,KAAf;AAiCH","file":"imports/dashboard/reactCMS/api/BasicPages.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const BasicPages = new Mongo.Collection(\"basicPages\");\n\nif(Meteor.isServer){\n    Meteor.publish('basicPages',()=>{\n        return BasicPages.find({});\n    });\n\n    Meteor.methods({\n    \t'createBasicPage':function(basicPageName,basicPageUrl,basicPageBody,userId,updateTimestamp){\n\n    \t\tBasicPages.insert({\n    \t\t\t'basicPageName'  : basicPageName,\n    \t\t\t'basicPageUrl'   : basicPageUrl,\n    \t\t\t'basicPageBody'  : basicPageBody,\n    \t\t\t'createdAt'      : new Date(),\n          'authorUserId'   : userId,\n          'lastModified'   : updateTimestamp,\n    \t\t});\n    \t},\n      'updateBasicPage':function(id,basicPageName,basicPageUrl,basicPageBody,userId,updateTimestamp){\n        console.log(\"update server method\");\n        console.log(id);\n    \t\tBasicPages.update(\n    \t\t\t{ '_id': id },\n    \t        {\n    \t          $set:{\n                  'basicPageName'  : basicPageName, \n                  'basicPageUrl'   : basicPageUrl,\n                  'basicPageBody'  : basicPageBody,\n                  'authorUserId'   : userId,\n                  'lastModified'   : updateTimestamp,\n    \t        } //End of set\n    \t      }\n    \t\t);\n    \t},\n      'deleteBasicPage':function(id){\n     \t\t BasicPages.remove({'_id': id});\n\n    \t},\n    });\n}\n"]},"hash":"f0e601a70f480d584a2fd425dfda965dd217b17f"}

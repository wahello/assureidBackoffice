{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"./UserInformation.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"UserInformation"}]},{"source":"../../website/ServiceProcess/api/TicketMaster.js","imported":["TicketMaster"],"specifiers":[{"kind":"named","imported":"TicketMaster","local":"TicketMaster"}]},{"source":"../../website/ServiceProcess/api/TicketMaster.js","imported":["TicketBucket"],"specifiers":[{"kind":"named","imported":"TicketBucket","local":"TicketBucket"}]},{"source":"/imports/website/forms/api/userProfile.js","imported":["UserProfile"],"specifiers":[{"kind":"named","imported":"UserProfile","local":"UserProfile"}]},{"source":"/imports/dashboard/companySetting/api/CompanySettingMaster.js","imported":["CompanySettings"],"specifiers":[{"kind":"named","imported":"CompanySettings","local":"CompanySettings"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx","filenameRelative":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx.map","sourceFileName":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TicketDocumentDetail"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 0);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo: function (v) {\n        Mongo = v;\n    }\n}, 1);\nvar React = void 0,\n    Component = void 0;\nmodule.watch(require(\"react\"), {\n    \"default\": function (v) {\n        React = v;\n    },\n    Component: function (v) {\n        Component = v;\n    }\n}, 2);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n    render: function (v) {\n        render = v;\n    }\n}, 3);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n    \"default\": function (v) {\n        TrackerReact = v;\n    }\n}, 4);\nvar withTracker = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    withTracker: function (v) {\n        withTracker = v;\n    }\n}, 5);\nvar Validation = void 0;\nmodule.watch(require(\"react-validation\"), {\n    \"default\": function (v) {\n        Validation = v;\n    }\n}, 6);\nvar validator = void 0;\nmodule.watch(require(\"validator\"), {\n    \"default\": function (v) {\n        validator = v;\n    }\n}, 7);\nvar Tracker = void 0;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker: function (v) {\n        Tracker = v;\n    }\n}, 8);\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n    browserHistory: function (v) {\n        browserHistory = v;\n    }\n}, 9);\nvar Link = void 0;\nmodule.watch(require(\"react-router\"), {\n    Link: function (v) {\n        Link = v;\n    }\n}, 10);\nvar UserInformation = void 0;\nmodule.watch(require(\"./UserInformation.jsx\"), {\n    \"default\": function (v) {\n        UserInformation = v;\n    }\n}, 11);\nvar TicketMaster = void 0;\nmodule.watch(require(\"../../website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketMaster: function (v) {\n        TicketMaster = v;\n    }\n}, 12);\nvar TicketBucket = void 0;\nmodule.watch(require(\"../../website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketBucket: function (v) {\n        TicketBucket = v;\n    }\n}, 13);\nvar UserProfile = void 0;\nmodule.watch(require(\"/imports/website/forms/api/userProfile.js\"), {\n    UserProfile: function (v) {\n        UserProfile = v;\n    }\n}, 14);\nvar CompanySettings = void 0;\nmodule.watch(require(\"/imports/dashboard/companySetting/api/CompanySettingMaster.js\"), {\n    CompanySettings: function (v) {\n        CompanySettings = v;\n    }\n}, 15);\n\nvar TicketDocumentDetails = function (_TrackerReact) {\n    (0, _inherits3.default)(TicketDocumentDetails, _TrackerReact);\n\n    function TicketDocumentDetails(props) {\n        (0, _classCallCheck3.default)(this, TicketDocumentDetails);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, _TrackerReact.call(this, props));\n\n        _this.state = {\n            \"ticketDocDetails\": {},\n            \"ticketDocDetailsBoth\": {},\n            \"ticketId\": '',\n            \"index\": '',\n            \"addressType\": '',\n            \"subscription\": {\n                \"singleTicket\": Meteor.subscribe(\"allTickets\"),\n                \"ticketBucket\": Meteor.subscribe(\"allTicketBucket\"),\n                \"userProfileSubscribe\": Meteor.subscribe(\"userProfileData\"),\n                \"companyData\": Meteor.subscribe(\"companyData\")\n            }\n        };\n        return _this;\n    }\n\n    TicketDocumentDetails.prototype.acceptpermanentTicket = function () {\n        function acceptpermanentTicket(event) {\n            event.preventDefault();\n            $(event.target).css({\n                'backgroundColor': '#00b8ff',\n                'color': '#fff'\n            });\n            $(event.target).siblings().css({\n                'backgroundColor': '#fff',\n                'color': '#00b8ff'\n            });\n            var status = $(event.currentTarget).attr('data-status');\n            var index = $(event.currentTarget).attr('data-index');\n            var id = $(event.currentTarget).attr('data-id');\n            var addressType = $(event.currentTarget).attr('data-addresstype');\n            Meteor.call(\"addDocument\", id, index, status, addressType, function (error, result) {\n                if (result) {\n                    console.log(\"add successfully\");\n                }\n            });\n        }\n\n        return acceptpermanentTicket;\n    }();\n\n    TicketDocumentDetails.prototype.componentDidMount = function () {\n        function componentDidMount() {//     this.ticketTracket=Tracker.autorun(()=>{\n            //         if(this.state.subscription.singleTicket.ready()){\n            //             var ticketId = this.props.ticketId;\n            //             var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.0.empid':Meteor.userId()});\n            //             // console.log(ticketObj);\n            //             if(ticketObj){\n            //                 if(ticketObj.addressType == \"currentAddress\"){\n            //                     console.log(ticketObj.addressType);\n            //                     var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n            //                     var index  = arrLen-1;\n            //                     console.log(arrLen);\n            //                     this.setState({\n            //                         'ticketId': ticketId,\n            //                         'index': index,\n            //                         'addressType': \"Current Address\",\n            //                         'ticketDocDetails':ticketObj.ticketElement[0].currentAddress[arrLen-1],\n            //                     });\n            //                 } else if(ticketObj.addressType == \"permanentAddress\"){\n            //                     var currentPos = 0;\n            //                     var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n            //                     var index  = arrLen-1;\n            //                     this.setState({\n            //                         'ticketId': ticketId,\n            //                         'index': index,\n            //                         'addressType': \"Permanent Address\",\n            //                         'ticketDocDetails':ticketObj.ticketElement[0].permanentAddress[arrLen-1],\n            //                     });\n            //                     console.log(this.state.ticketDocDetails);\n            //                 } \n            //             }\n            //         }\n            //     });\n        }\n\n        return componentDidMount;\n    }();\n\n    TicketDocumentDetails.prototype.componentWillReceiveProps = function () {\n        function componentWillReceiveProps(nextProps) {\n            if (!nextProps.loading) {\n                var ticketId = this.props.ticketId;\n                console.log(\"inside component will receive props ticketId :\" + ticketId);\n                var ticketObj = TicketMaster.findOne({\n                    '_id': ticketId,\n                    'ticketElement.0.empid': Meteor.userId()\n                }); // console.log(ticketObj);\n\n                if (ticketObj) {\n                    console.log(ticketObj);\n\n                    if (ticketObj.addressType == \"currentAddress\") {\n                        // console.log(ticketObj.addressType);\n                        var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n                        var index = arrLen - 1; // console.log(arrLen);\n\n                        this.setState({\n                            'ticketId': ticketId,\n                            'index': index,\n                            'addressType': \"Current Address\",\n                            'ticketDocDetails': ticketObj.ticketElement[0].currentAddress[arrLen - 1]\n                        });\n                    } else if (ticketObj.addressType == \"permanentAddress\") {\n                        var currentPos = 0;\n                        var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n                        var index = arrLen - 1;\n                        this.setState({\n                            'ticketId': ticketId,\n                            'index': index,\n                            'addressType': \"Permanent Address\",\n                            'ticketDocDetails': ticketObj.ticketElement[0].permanentAddress[arrLen - 1]\n                        }); // console.log(this.state.ticketDocDetails);\n                    }\n                }\n            }\n        }\n\n        return componentWillReceiveProps;\n    }();\n\n    TicketDocumentDetails.prototype.updateTicketStatus = function () {\n        function updateTicketStatus(event) {\n            event.preventDefault(); // console.log(\"inside onclick\");\n\n            var ticketId = $(event.currentTarget).attr('data-id'); // console.log(\"ticketId :\"+ticketId);\n\n            var ticketObj = TicketMaster.findOne({\n                '_id': ticketId,\n                'ticketElement.empid': Meteor.userId()\n            });\n\n            if (ticketObj) {\n                // console.log(ticketObj);\n                if (ticketObj.serviceName == 'Address Verification') {\n                    var permanentLen = ticketObj.ticketElement[0].permanentAddress.length;\n                    var currentLen = ticketObj.ticketElement[0].currentAddress.length; // console.log(\"permanentLen :\"+permanentLen);\n                    // console.log(\"currentLen :\"+currentLen);\n                    // if((ticketObj.ticketElement[0].permanentAddress.length> 0) || (ticketObj.ticketElement[0].currentAddress.length>0)){\n                    //     if((ticketObj.ticketElement[0].permanentAddress[permanentLen-1].status == \"Approved\") || (ticketObj.ticketElement[0].currentAddress[currentLen-1].status== \"Approved\")){\n                    //         var finalStatus = \"Approved\";           \n                    //     }else{\n                    //         var finalStatus = \"Rejected\";\n                    //     }\n                    //     console.log(\"finalStatus :\"+finalStatus);\n                    // }\n\n                    if (ticketObj.ticketElement[0].permanentAddress.length > 0) {\n                        if (ticketObj.ticketElement[0].permanentAddress[permanentLen - 1].status == \"Approved\") {\n                            var finalStatus = \"Approved\";\n                        } else {\n                            var finalStatus = \"Rejected\";\n                        }\n                    } else if (ticketObj.ticketElement[0].currentAddress.length > 0) {\n                        if (ticketObj.ticketElement[0].currentAddress[currentLen - 1].status == \"Approved\") {\n                            var finalStatus = \"Approved\";\n                        } else {\n                            var finalStatus = \"Rejected\";\n                        }\n                    }\n                }\n\n                Meteor.call('updateTicketFinalStatus', ticketId, finalStatus, function (error, result) {\n                    if (result) {\n                        var memberDetails = Meteor.users.find({\n                            \"roles\": \"team leader\"\n                        }, {\n                            sort: {\n                                'count': 1\n                            }\n                        }).fetch();\n                        var companyObj = CompanySettings.findOne({\n                            \"maxnoOfTicketAllocate.role\": \"team leader\"\n                        });\n\n                        for (var i = 0; i < companyObj.maxnoOfTicketAllocate.length; i++) {\n                            if (companyObj.maxnoOfTicketAllocate[i].role == \"team leader\") {\n                                var allocatedtickets = companyObj.maxnoOfTicketAllocate[i].maxTicketAllocate;\n                                console.log(\"allocatedtickets :\" + allocatedtickets);\n                            }\n                        }\n\n                        console.log(\"memberDetails :\" + memberDetails);\n\n                        for (var k = 0; k < memberDetails.length; k++) {\n                            console.log(\"memberDetails length :\" + memberDetails.length);\n                            console.log(\"memberDetails length :\" + memberDetails[k]._id);\n                            console.log(\"memberDetails[k].count :\" + memberDetails[k].count); // if(memberDetails[k].count==undefined || memberDetails[k].count<allocatedtickets){\n\n                            console.log(\"inside if memberDetails[k].count :\" + memberDetails[k].count);\n                            var newTicketAllocated = {\n                                'ticketid': ticketId,\n                                'empID': memberDetails[k]._id,\n                                'role': 'team leader'\n                            };\n                            console.log(newTicketAllocated);\n                            Meteor.call('updateTicketBucket', newTicketAllocated, function (error, result) {\n                                if (result) {\n                                    console.log(\"ticketid :\" + newTicketAllocated.ticketid);\n                                    var ticketBucketDetail = TicketBucket.findOne({\n                                        \"ticketid\": newTicketAllocated.ticketid\n                                    });\n                                    console.log(\"ticketBucketDetail:\" + ticketBucketDetail);\n\n                                    if (ticketBucketDetail) {\n                                        console.log(\"ticketBucketDetail:\" + ticketBucketDetail);\n                                        var ticketId = newTicketAllocated.ticketid;\n                                        var empID = newTicketAllocated.empID;\n                                        var role = newTicketAllocated.role;\n                                        console.log(\"ticketId :\" + ticketId);\n                                        console.log(\"empID :\" + empID);\n                                        console.log(\"role :\" + role);\n                                        console.log(\"ticketObj.ticketElement[0].permanentAddress.length :\" + ticketObj.ticketElement[0].permanentAddress.length);\n                                        console.log(\"ticketObj.ticketElement[0].currentAddress.length :\" + ticketObj.ticketElement[0].currentAddress.length);\n\n                                        if (ticketObj.ticketElement[0].permanentAddress.length > 0) {\n                                            var permanentAddress = ticketObj.ticketElement[0].permanentAddress[permanentLen - 1];\n                                        } else {\n                                            var permanentAddress = [];\n                                        }\n\n                                        if (ticketObj.ticketElement[0].currentAddress.length > 0) {\n                                            var currentAddress = ticketObj.ticketElement[0].currentAddress[currentLen - 1];\n                                        } else {\n                                            var currentAddress = [];\n                                        }\n\n                                        Meteor.call('updateTicketElement', ticketId, empID, role, permanentAddress, currentAddress, function (error, result) {\n                                            console.log(\"success updateTicketElement\");\n                                        });\n                                    }\n                                }\n                            });\n\n                            if (memberDetails[k].count) {\n                                console.log(\"memberDetails[k].count :\" + memberDetails[k].count);\n                                var newCount = memberDetails[k].count + 1;\n                            } else {\n                                var newCount = 1;\n                            }\n\n                            Meteor.call('updateCommitteeUserCount', newCount, memberDetails[k]._id);\n                            break; // }else{\n                            // \tconsole.log(\"Inside else updateCommitteeUserCount\");\t\t\t\t\t\t\t\n                            // \t// Meteor.call('updateCommitteeUserCount',0,memberDetails[k]._id);\n                            // }\n                        }\n                    }\n                });\n            }\n        }\n\n        return updateTicketStatus;\n    }();\n\n    TicketDocumentDetails.prototype.acceptTicket = function () {\n        function acceptTicket(event) {\n            $(event.target).css({\n                'backgroundColor': '#00b8ff',\n                'color': '#fff'\n            });\n            $(event.target).siblings().css({\n                'backgroundColor': '#fff',\n                'color': '#00b8ff'\n            }); // var path = \"/admin/ticketdocumentdetails\";\n            // browserHistory.replace(path);\n        }\n\n        return acceptTicket;\n    }();\n\n    TicketDocumentDetails.prototype.rejectTicket = function () {\n        function rejectTicket(event) {\n            event.preventDefault();\n            $(event.target).parent().parent().siblings('.otherInfoFormGroup').slideUp();\n            $(event.target).css({\n                'backgroundColor': '#00b8ff',\n                'color': '#fff'\n            });\n            $(event.target).siblings().css({\n                'backgroundColor': '#fff',\n                'color': '#00b8ff'\n            }); // $(event.target).parent().parent().siblings().children().find('textarea').attr('disabled','disabled');\n        }\n\n        return rejectTicket;\n    }();\n\n    TicketDocumentDetails.prototype.render = function () {\n        function render() {\n            // console.log(\"id = \",this.props.params.id);\n            return React.createElement(\n                \"div\",\n                {\n                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                    \"div\",\n                    {\n                        className: \"box-header with-border\"\n                    },\n                    React.createElement(\n                        \"h2\",\n                        {\n                            className: \"box-title\"\n                        },\n                        \"Address Documents\"\n                    )\n                ),\n                React.createElement(\n                    \"div\",\n                    {\n                        className: \"box-body\"\n                    },\n                    React.createElement(\n                        \"div\",\n                        {\n                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                            \"div\",\n                            {\n                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                            },\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 docwrap\"\n                                },\n                                this.state.addressType == \"Current Address\" ? React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12\"\n                                        },\n                                        React.createElement(\n                                            \"h5\",\n                                            null,\n                                            \" \",\n                                            this.state.addressType\n                                        ),\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\"\n                                            },\n                                            this.state.ticketDocDetails.tempLine1,\n                                            this.state.ticketDocDetails.tempLine2,\n                                            this.state.ticketDocDetails.tempLine3,\n                                            \", \\xA0\",\n                                            this.state.ticketDocDetails.tempLandmark,\n                                            \",\",\n                                            this.state.ticketDocDetails.tempCity,\n                                            \",\",\n                                            this.state.ticketDocDetails.tempState,\n                                            \", \",\n                                            this.state.ticketDocDetails.tempState,\n                                            \",\",\n                                            this.state.ticketDocDetails.tempPincode\n                                        )\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-2 col-md-4 col-sm-6 col-xs-6\"\n                                        },\n                                        React.createElement(\"img\", {\n                                            src: \"/images/assureid/pdf.png\",\n                                            className: \" img-thumbnail ticketUserImage\"\n                                        })\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\"\n                                        },\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-12 col-md-4 col-sm-6 col-xs-6\"\n                                            },\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"button\",\n                                                    className: \"btn btn-info acceptTicket acceptreject\",\n                                                    \"data-addresstype\": this.state.addressType,\n                                                    \"data-id\": this.state.ticketId,\n                                                    \"data-index\": this.state.index,\n                                                    \"data-status\": \"Approved\",\n                                                    onClick: this.acceptpermanentTicket.bind(this)\n                                                },\n                                                \"Approved\"\n                                            ),\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"button\",\n                                                    className: \"btn btn-info rejectTicket acceptreject\",\n                                                    \"data-addresstype\": this.state.addressType,\n                                                    \"data-id\": this.state.ticketId,\n                                                    \"data-index\": this.state.index,\n                                                    \"data-status\": \"Reject\",\n                                                    onClick: this.acceptpermanentTicket.bind(this)\n                                                },\n                                                \"Reject\"\n                                            )\n                                        )\n                                    )\n                                ) : // this.state.addressType == \"Permanent Address\"\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\"\n                                    },\n                                    React.createElement(\n                                        \"h5\",\n                                        null,\n                                        \" \",\n                                        this.state.addressType\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12\"\n                                        },\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\"\n                                            },\n                                            this.state.ticketDocDetails.line1,\n                                            this.state.ticketDocDetails.line2,\n                                            this.state.ticketDocDetails.line3,\n                                            \", \\xA0\",\n                                            this.state.ticketDocDetails.landmark,\n                                            \",\",\n                                            this.state.ticketDocDetails.city,\n                                            \",\",\n                                            this.state.ticketDocDetails.state,\n                                            \", \",\n                                            this.state.ticketDocDetails.country,\n                                            \",\",\n                                            this.state.ticketDocDetails.pincode,\n                                            this.state.ticketDocDetails.residingFrom,\n                                            \" - \",\n                                            this.state.ticketDocDetails.residingTo\n                                        )\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-2 col-md-4 col-sm-6 col-xs-6\"\n                                        },\n                                        React.createElement(\"img\", {\n                                            src: \"/images/assureid/pdf.png\",\n                                            className: \" img-thumbnail ticketUserImage\"\n                                        })\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\"\n                                        },\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-12 col-md-4 col-sm-6 col-xs-6\"\n                                            },\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"button\",\n                                                    className: \"btn btn-info acceptTicket acceptreject\",\n                                                    \"data-addresstype\": this.state.addressType,\n                                                    \"data-id\": this.state.ticketId,\n                                                    \"data-index\": this.state.index,\n                                                    \"data-status\": \"Approved\",\n                                                    onClick: this.acceptpermanentTicket.bind(this)\n                                                },\n                                                \"Approved\"\n                                            ),\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"button\",\n                                                    className: \"btn btn-info rejectTicket acceptreject\",\n                                                    \"data-addresstype\": this.state.addressType,\n                                                    \"data-id\": this.state.ticketId,\n                                                    \"data-index\": this.state.index,\n                                                    \"data-status\": \"Reject\",\n                                                    onClick: this.acceptpermanentTicket.bind(this)\n                                                },\n                                                \"Reject\"\n                                            )\n                                        )\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 approvedstatus\"\n                                    },\n                                    React.createElement(\n                                        \"button\",\n                                        {\n                                            type: \"button\",\n                                            className: \"btn btn-primary btnapproved\",\n                                            \"data-id\": this.state.ticketId,\n                                            onClick: this.updateTicketStatus.bind(this)\n                                        },\n                                        \"Submit\"\n                                    )\n                                )\n                            )\n                        ),\n                        React.createElement(\"div\", {\n                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        })\n                    )\n                )\n            );\n        }\n\n        return render;\n    }();\n\n    return TicketDocumentDetails;\n}(TrackerReact(Component));\n\nticketDocDetailContainer = withTracker(function (props) {\n    //   console.log('props: ',this.props);\n    var _id = props.ticketId; // console.log(\"_id\",_id);\n\n    var postHandle = Meteor.subscribe('singleTicket', _id);\n    var userfunction = Meteor.subscribe('userfunction');\n    var singleTicket = Meteor.subscribe(\"allTickets\");\n    var ticketBucket = Meteor.subscribe(\"allTicketBucket\");\n    var userProfilSubscribe = Meteor.subscribe(\"userProfileData\");\n    var companyData = Meteor.subscribe(\"companyData\");\n    var getTicket = TicketMaster.findOne({\n        \"_id\": _id\n    }) || {}; // console.log(\"getTicket\",getTicket); \n\n    var loading = !postHandle.ready() && !userfunction.ready() && !singleTicket.ready() && !ticketBucket.ready() && !userProfilSubscribe.ready() && !companyData.ready(); // if(_id){\n\n    return {\n        loading: loading,\n        getTicket: getTicket,\n        ticketId: _id\n    }; // }\n})(TicketDocumentDetails);\nmodule.exportDefault(ticketDocDetailContainer);","map":{"version":3,"sources":["imports/dashboard/ticketManagement/TicketDocumentDetail.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","render","TrackerReact","withTracker","Validation","validator","Tracker","browserHistory","Link","UserInformation","TicketMaster","TicketBucket","UserProfile","CompanySettings","TicketDocumentDetails","props","state","subscribe","acceptpermanentTicket","event","preventDefault","$","target","css","siblings","status","currentTarget","attr","index","id","addressType","call","error","result","console","log","componentDidMount","componentWillReceiveProps","nextProps","loading","ticketId","ticketObj","findOne","userId","arrLen","ticketElement","currentAddress","length","setState","currentPos","permanentAddress","updateTicketStatus","serviceName","permanentLen","currentLen","finalStatus","memberDetails","users","find","sort","fetch","companyObj","i","maxnoOfTicketAllocate","role","allocatedtickets","maxTicketAllocate","k","_id","count","newTicketAllocated","ticketid","ticketBucketDetail","empID","newCount","acceptTicket","rejectTicket","parent","slideUp","ticketDocDetails","tempLine1","tempLine2","tempLine3","tempLandmark","tempCity","tempState","tempPincode","bind","line1","line2","line3","landmark","city","country","pincode","residingFrom","residingTo","ticketDocDetailContainer","postHandle","userfunction","singleTicket","ticketBucket","userProfilSubscribe","companyData","getTicket","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/ticketManagement/TicketDocumentDetail.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\nimport { browserHistory } from 'react-router';\nimport { Link } from 'react-router';\nimport UserInformation from './UserInformation.jsx';\nimport { TicketMaster } from '../../website/ServiceProcess/api/TicketMaster.js';\nimport { TicketBucket } from '../../website/ServiceProcess/api/TicketMaster.js';\nimport { UserProfile } from '/imports/website/forms/api/userProfile.js';\nimport {CompanySettings} from '/imports/dashboard/companySetting/api/CompanySettingMaster.js';\n\n\n\nclass TicketDocumentDetails extends TrackerReact(Component){\n  constructor(props){\n    super(props);\n    \n    this.state = {\n        \"ticketDocDetails\" : {},\n        \"ticketDocDetailsBoth\" : {},\n        \"ticketId\" :'',\n        \"index\"         : '',\n        \"addressType\":'',\n         \"subscription\" : {\n          \"singleTicket\" : Meteor.subscribe(\"allTickets\"),  \n          \"ticketBucket\" : Meteor.subscribe(\"allTicketBucket\"),\n          \"userProfileSubscribe\": Meteor.subscribe(\"userProfileData\"),   \n          \"companyData\"  : Meteor.subscribe(\"companyData\"),\n      } \n    }\n  }\n  acceptpermanentTicket(event){\n    event.preventDefault();\n    $(event.target).css({'backgroundColor':'#00b8ff','color':'#fff'});\n    $(event.target).siblings().css({'backgroundColor':'#fff','color':'#00b8ff'});\n    var status = $(event.currentTarget).attr('data-status');\n    var index = $(event.currentTarget).attr('data-index');\n    var id = $(event.currentTarget).attr('data-id');\n    var addressType = $(event.currentTarget).attr('data-addresstype');\n       \n    Meteor.call(\"addDocument\",id,index,status,addressType,function(error,result){\n        if(result){\n            console.log(\"add successfully\");\n        }\n    });  \n\n  }\n\n    componentDidMount(){\n    //     this.ticketTracket=Tracker.autorun(()=>{\n    //         if(this.state.subscription.singleTicket.ready()){\n    //             var ticketId = this.props.ticketId;\n                \n                \n    //             var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.0.empid':Meteor.userId()});\n    //             // console.log(ticketObj);\n    //             if(ticketObj){\n    //                 if(ticketObj.addressType == \"currentAddress\"){\n    //                     console.log(ticketObj.addressType);\n    //                     var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n    //                     var index  = arrLen-1;\n    //                     console.log(arrLen);\n                        \n    //                     this.setState({\n    //                         'ticketId': ticketId,\n    //                         'index': index,\n    //                         'addressType': \"Current Address\",\n    //                         'ticketDocDetails':ticketObj.ticketElement[0].currentAddress[arrLen-1],\n    //                     });\n                        \n    //                 } else if(ticketObj.addressType == \"permanentAddress\"){\n    //                     var currentPos = 0;\n    //                     var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n    //                     var index  = arrLen-1;\n    //                     this.setState({\n    //                         'ticketId': ticketId,\n    //                         'index': index,\n    //                         'addressType': \"Permanent Address\",\n    //                         'ticketDocDetails':ticketObj.ticketElement[0].permanentAddress[arrLen-1],\n    //                     });\n    //                     console.log(this.state.ticketDocDetails);\n                        \n    //                 } \n    //             }\n    //         }\n    //     });\n    }\n\n    componentWillReceiveProps(nextProps){\n\n        if(!nextProps.loading){\n            var ticketId = this.props.ticketId;\n            console.log(\"inside component will receive props ticketId :\"+ticketId);\n            var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.0.empid':Meteor.userId()});\n            // console.log(ticketObj);\n            if(ticketObj){\n                console.log(ticketObj);\n                if(ticketObj.addressType == \"currentAddress\"){\n                    // console.log(ticketObj.addressType);\n                    var arrLen = ticketObj.ticketElement[0].currentAddress.length;\n                    var index  = arrLen-1;\n                    // console.log(arrLen);\n                    \n                    this.setState({\n                        'ticketId': ticketId,\n                        'index': index,\n                        'addressType': \"Current Address\",\n                        'ticketDocDetails':ticketObj.ticketElement[0].currentAddress[arrLen-1],\n                    });\n                    \n                } else if(ticketObj.addressType == \"permanentAddress\"){\n                    var currentPos = 0;\n                    var arrLen = ticketObj.ticketElement[0].permanentAddress.length;\n                    var index  = arrLen-1;\n                    this.setState({\n                        'ticketId': ticketId,\n                        'index': index,\n                        'addressType': \"Permanent Address\",\n                        'ticketDocDetails':ticketObj.ticketElement[0].permanentAddress[arrLen-1],\n                    });\n                    // console.log(this.state.ticketDocDetails);\n                    \n                } \n            }\n        }\n           \n    }\n    updateTicketStatus(event){\n\n        event.preventDefault();\n        // console.log(\"inside onclick\");\n        var ticketId = $(event.currentTarget).attr('data-id');  \n        // console.log(\"ticketId :\"+ticketId);\n        var ticketObj = TicketMaster.findOne({'_id':ticketId,'ticketElement.empid':Meteor.userId()});                         \n        if(ticketObj){\n            // console.log(ticketObj);\n            if(ticketObj.serviceName == 'Address Verification'){\n                var permanentLen = ticketObj.ticketElement[0].permanentAddress.length;\n                var currentLen = ticketObj.ticketElement[0].currentAddress.length;\n                // console.log(\"permanentLen :\"+permanentLen);\n                // console.log(\"currentLen :\"+currentLen);\n                // if((ticketObj.ticketElement[0].permanentAddress.length> 0) || (ticketObj.ticketElement[0].currentAddress.length>0)){\n                //     if((ticketObj.ticketElement[0].permanentAddress[permanentLen-1].status == \"Approved\") || (ticketObj.ticketElement[0].currentAddress[currentLen-1].status== \"Approved\")){\n                //         var finalStatus = \"Approved\";           \n                //     }else{\n                //         var finalStatus = \"Rejected\";\n                //     }\n                //     console.log(\"finalStatus :\"+finalStatus);\n\n                // }\n                if(ticketObj.ticketElement[0].permanentAddress.length> 0){\n                    if(ticketObj.ticketElement[0].permanentAddress[permanentLen-1].status == \"Approved\"){\n                        var finalStatus = \"Approved\";           \n                    }else{\n                        var finalStatus = \"Rejected\";\n                    }    \n                }else if(ticketObj.ticketElement[0].currentAddress.length> 0){\n                    if(ticketObj.ticketElement[0].currentAddress[currentLen-1].status == \"Approved\"){\n                        var finalStatus = \"Approved\";           \n                    }else{\n                        var finalStatus = \"Rejected\";\n                    }    \n                }\n            }\n            Meteor.call('updateTicketFinalStatus',ticketId,finalStatus,function(error,result){\n                if(result){\n\t\t\t\t\tvar memberDetails = Meteor.users.find({\"roles\":\"team leader\"},{sort:{'count':1}}).fetch();\n\t\t\t\t\tvar companyObj = CompanySettings.findOne({\"maxnoOfTicketAllocate.role\":\"team leader\"});\n\t\t\t\t\tfor(var i=0;i<companyObj.maxnoOfTicketAllocate.length;i++){\n\t\t\t\t\t\tif(companyObj.maxnoOfTicketAllocate[i].role == \"team leader\"){\n\t\t\t\t\t\t\tvar allocatedtickets = companyObj.maxnoOfTicketAllocate[i].maxTicketAllocate;\n\t\t\t\t\t\t\tconsole.log(\"allocatedtickets :\"+allocatedtickets);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"memberDetails :\"+memberDetails);\n\t\t\t\t\tfor(var k=0;k<memberDetails.length;k++){\n    \t\t\t\t\tconsole.log(\"memberDetails length :\"+memberDetails.length);\t\t\t\t\t\t\n\t    \t\t\t\tconsole.log(\"memberDetails length :\"+memberDetails[k]._id);\t\t\t\t\t\t\n\t\t    \t\t\tconsole.log(\"memberDetails[k].count :\"+memberDetails[k].count);\t\t\t\t\t\t\n\t\t\t\t\t\t// if(memberDetails[k].count==undefined || memberDetails[k].count<allocatedtickets){\n\t\t\t    \t\tconsole.log(\"inside if memberDetails[k].count :\"+memberDetails[k].count);\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n                        var newTicketAllocated = {\n                            'ticketid' : ticketId,\n                            'empID'    : memberDetails[k]._id,\n                            'role'     : 'team leader',\n                        }\n\t\t\t\t\t    console.log(newTicketAllocated);\n                        Meteor.call('updateTicketBucket',newTicketAllocated,function(error,result){\n                            if(result){\n                                console.log(\"ticketid :\"+newTicketAllocated.ticketid);\n                                \n                                var ticketBucketDetail = TicketBucket.findOne({\"ticketid\":newTicketAllocated.ticketid});\n                                console.log(\"ticketBucketDetail:\"+ticketBucketDetail);\n                                \n                                if(ticketBucketDetail){\n                                    console.log(\"ticketBucketDetail:\"+ticketBucketDetail);\n                                    var ticketId = newTicketAllocated.ticketid;\n                                    var empID    = newTicketAllocated.empID;\n                                    var role     = newTicketAllocated.role;\n                                    console.log(\"ticketId :\"+ticketId);\n                                    console.log(\"empID :\"+empID);\n                                    console.log(\"role :\"+role);\n                                    console.log(\"ticketObj.ticketElement[0].permanentAddress.length :\"+ticketObj.ticketElement[0].permanentAddress.length);\n                                    console.log(\"ticketObj.ticketElement[0].currentAddress.length :\"+ticketObj.ticketElement[0].currentAddress.length);\n\n                                    if(ticketObj.ticketElement[0].permanentAddress.length> 0){\n                                        var permanentAddress   = ticketObj.ticketElement[0].permanentAddress[permanentLen-1];\n                                    }else{\n                                        var permanentAddress = [];\n                                    }\n                                    if(ticketObj.ticketElement[0].currentAddress.length> 0){\n                                        var currentAddress     = ticketObj.ticketElement[0].currentAddress[currentLen-1];\n                                    }else{\n                                        var currentAddress = [];\n                                    }\n                                    Meteor.call('updateTicketElement',ticketId,empID,role,permanentAddress,currentAddress,function(error,result){\n                                        console.log(\"success updateTicketElement\");\n                                    });\n                                } \n                            }\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tif(memberDetails[k].count){\n\t\t\t\t\t\t\t\tconsole.log(\"memberDetails[k].count :\"+memberDetails[k].count);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar newCount = memberDetails[k].count + 1;\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tvar newCount = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tMeteor.call('updateCommitteeUserCount',newCount,memberDetails[k]._id);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t// }else{\n\t\t\t\t\t\t// \tconsole.log(\"Inside else updateCommitteeUserCount\");\t\t\t\t\t\t\t\n\t\t\t\t\t\t// \t// Meteor.call('updateCommitteeUserCount',0,memberDetails[k]._id);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n                }\n            });\n\n        \n        }\n    }\n\n    acceptTicket(event){\n        $(event.target).css({'backgroundColor':'#00b8ff','color':'#fff'});\n        $(event.target).siblings().css({'backgroundColor':'#fff','color':'#00b8ff'});\n        // var path = \"/admin/ticketdocumentdetails\";\n        // browserHistory.replace(path);\n\n    }\n    rejectTicket(event){\n        event.preventDefault();\n        $(event.target).parent().parent().siblings('.otherInfoFormGroup').slideUp();\n        $(event.target).css({'backgroundColor':'#00b8ff','color':'#fff'});\n        $(event.target).siblings().css({'backgroundColor':'#fff','color':'#00b8ff'});\n        // $(event.target).parent().parent().siblings().children().find('textarea').attr('disabled','disabled');\n    }\n\n\t render(){\n    // console.log(\"id = \",this.props.params.id);\n    return(            \n      <div className =\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div className=\"box-header with-border\">\n                   <h2 className=\"box-title\">Address Documents</h2> \n                  </div>\n                  <div className=\"box-body\">\n                     <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                     \t\n                       <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 docwrap\">\n\n                               \n                                {\n                                    this.state.addressType == \"Current Address\" ?\n                                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\">\n                                            <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12\">\n                                               <h5> {this.state.addressType}</h5>\n                                               \n                                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\">\n                                                {this.state.ticketDocDetails.tempLine1}\n                                                {this.state.ticketDocDetails.tempLine2}\n                                                {this.state.ticketDocDetails.tempLine3}, &nbsp;\n                                                {this.state.ticketDocDetails.tempLandmark},\n                                                {this.state.ticketDocDetails.tempCity},{this.state.ticketDocDetails.tempState}, {this.state.ticketDocDetails.tempState},{this.state.ticketDocDetails.tempPincode}\n\n                                                  \n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-2 col-md-4 col-sm-6 col-xs-6\">\n                                                <img src=\"/images/assureid/pdf.png\" className=\" img-thumbnail ticketUserImage\" /> \n                                            </div>\n                                            <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\">\n                                                <div className=\"col-lg-12 col-md-4 col-sm-6 col-xs-6\">\n                                                        <button type=\"button\" className=\"btn btn-info acceptTicket acceptreject\" data-addresstype={this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Approved\" onClick={this.acceptpermanentTicket.bind(this)}>Approved</button>\n                                                        <button type=\"button\" className=\"btn btn-info rejectTicket acceptreject\" data-addresstype = {this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Reject\" onClick={this.acceptpermanentTicket.bind(this)}>Reject</button>\n                                                </div>\n                                            </div>\n                                        \n                                        </div>\n                                    :\n\n                                    // this.state.addressType == \"Permanent Address\"\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 singledocwrp\">\n                                            <h5> {this.state.addressType}</h5>\n                                        \n                                        <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12\">\n                                        \n                                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 addressdetails\">\n                                                  {this.state.ticketDocDetails.line1}\n                                                  {this.state.ticketDocDetails.line2}\n                                                  {this.state.ticketDocDetails.line3}, &nbsp;\n                                                  {this.state.ticketDocDetails.landmark},\n                                                  {this.state.ticketDocDetails.city},{this.state.ticketDocDetails.state}, {this.state.ticketDocDetails.country},{this.state.ticketDocDetails.pincode}\n                                                  {this.state.ticketDocDetails.residingFrom} - {this.state.ticketDocDetails.residingTo}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-2 col-md-4 col-sm-6 col-xs-6\">\n                                            <img src=\"/images/assureid/pdf.png\" className=\" img-thumbnail ticketUserImage\" /> \n                                        </div>\n                                        <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12 otherInfoForm pull-right detailsbtn\">\n                                            <div className=\"col-lg-12 col-md-4 col-sm-6 col-xs-6\">\n                                                    <button type=\"button\" className=\"btn btn-info acceptTicket acceptreject\" data-addresstype={this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Approved\" onClick={this.acceptpermanentTicket.bind(this)}>Approved</button>\n                                                    <button type=\"button\" className=\"btn btn-info rejectTicket acceptreject\" data-addresstype = {this.state.addressType} data-id={this.state.ticketId} data-index={this.state.index} data-status = \"Reject\" onClick={this.acceptpermanentTicket.bind(this)}>Reject</button>\n                                            </div>\n                                        </div>\n                                \n                                    </div>\n                                    \n                                }\n                               \n\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 approvedstatus\">\n                                    {/* <div className=\"col-lg-4 col-lg-offset-2 col-md-12 col-sm-12 col-xs-12\"> */}\n                                        <button type=\"button\" className=\"btn btn-primary btnapproved\" data-id={this.state.ticketId} onClick={this.updateTicketStatus.bind(this)}>Submit</button>\n                                    {/* </div> */}\n                                </div>\n                            </div>  \n                            \n                                          \n                       </div>\n\n                       <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                       </div>\n\n\n                      \n                     </div> \n                  </div>\n                {/* </div>\n              </div>\n            </div>\n          </section>\n        </div> */}\n      </div>    \n    );\n   }\n}\nticketDocDetailContainer = withTracker(props => {\n    //   console.log('props: ',this.props);\n        var _id = props.ticketId;\n        // console.log(\"_id\",_id);\n        const postHandle = Meteor.subscribe('singleTicket',_id);\n        const userfunction = Meteor.subscribe('userfunction');\n        const singleTicket = Meteor.subscribe(\"allTickets\"); \n        const ticketBucket = Meteor.subscribe(\"allTicketBucket\");\n        const userProfilSubscribe = Meteor.subscribe(\"userProfileData\");   \n        const companyData   = Meteor.subscribe(\"companyData\");      \n        \n        const getTicket  = TicketMaster.findOne({\"_id\" : _id}) || {};  \n        // console.log(\"getTicket\",getTicket); \n       \n        const loading = !postHandle.ready() && !userfunction.ready() && !singleTicket.ready() && !ticketBucket.ready() && !userProfilSubscribe.ready() && !companyData.ready();\n    \n        // if(_id){\n          return {\n              loading  : loading,\n              getTicket : getTicket,\n              ticketId  : _id\n          };\n        // }\n    })(TicketDocumentDetails);\n    export default ticketDocDetailContainer;\n    \n"]},"hash":"91ef906c0da5c959a24c5013d010c12496ec2c83"}

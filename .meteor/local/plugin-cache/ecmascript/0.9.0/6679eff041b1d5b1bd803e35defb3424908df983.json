{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]}],"exports":{"exported":["UMaddRoles"],"specifiers":[{"kind":"local","local":"UMaddRoles","exported":"default"}]}}},"options":{"filename":"imports/dashboard/userManagement/roles/UMaddRoles.jsx","filenameRelative":"imports/dashboard/userManagement/roles/UMaddRoles.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/userManagement/roles/UMaddRoles.jsx.map","sourceFileName":"imports/dashboard/userManagement/roles/UMaddRoles.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UMaddRoles"},"ignored":false,"code":"module.export({\n\tdefault: () => UMaddRoles\n});\nlet React, Component;\nmodule.watch(require(\"react\"), {\n\tdefault(v) {\n\t\tReact = v;\n\t},\n\n\tComponent(v) {\n\t\tComponent = v;\n\t}\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n\trender(v) {\n\t\trender = v;\n\t}\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n\tdefault(v) {\n\t\tTrackerReact = v;\n\t}\n\n}, 2);\n\nclass UMaddRoles extends TrackerReact(Component) {\n\taddRole(event) {\n\t\tevent.preventDefault();\n\t\tvar roleName = $(\"input[name=roleName]\").val();\n\t\tMeteor.call('addrole', roleName, function (error, result) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t});\n\t\t$(\"input[name=roleName]\").val('');\n\t} // render(){    \n\t// \t\t return(\n\t// \t\t<Validation.components.Form id=\"addrolesToList\" ref={c => { this.form = c }} onSubmit={this.addRole} className=\"col-lg-6 col-lg-offset-3 col-md-12 col-sm-12 col-xs-12 paddingLeftz\">\n\t// \t\t\t<div className=\"form-group col-lg-8 col-md-4 col-xs-7 col-sm-12 paddingLeftz noLRPad\">\n\t// \t\t\t\t<label>Role Name*</label>\n\t// \t\t\t\t<Validation.components.Input value='' errorClassName='is-invalid-input' type=\"text\" name=\"roleName\" className=\"form-control rolesField\" validations={['required','alpha']}/>\n\t// \t\t\t</div>\n\t// \t\t\t<div className=\"form-group col-lg-4 col-md-4 col-xs-5 col-sm-12 \">\n\t// \t\t\t\t<label className=\"noLabel\">Button</label>\n\t// \t\t\t\t<Validation.components.Button className=\"btn btn-primary submit addrolesBtn\">ADD ROLE</Validation.components.Button>\n\t// \t\t\t</div>\n\t// \t\t</Validation.components.Form>   \n\t// \t\t );\n\t// } \n\n\n\trender() {\n\t\treturn React.createElement(\n\t\t\t\"form\",\n\t\t\t{\n\t\t\t\tid: \"addrolesToList\",\n\t\t\t\tonSubmit: this.addRole,\n\t\t\t\tclassName: \"col-lg-6 col-lg-offset-3 col-md-12 col-sm-12 col-xs-12 paddingLeftz\"\n\t\t\t},\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{\n\t\t\t\t\tclassName: \"form-group col-lg-8 col-md-4 col-xs-7 col-sm-12 paddingLeftz noLRPad\"\n\t\t\t\t},\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"label\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"Role Name*\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tname: \"roleName\",\n\t\t\t\t\tclassName: \"form-control rolesField\",\n\t\t\t\t\trequired: true\n\t\t\t\t})\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{\n\t\t\t\t\tclassName: \"form-group col-lg-4 col-md-4 col-xs-5 col-sm-12 \"\n\t\t\t\t},\n\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\ttype: \"submit\",\n\t\t\t\t\tvalue: \"ADD ROLE\",\n\t\t\t\t\tclassName: \"btn btn-primary submit addrolesBtn\"\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t}\n\n}","map":{"version":3,"sources":["imports/dashboard/userManagement/roles/UMaddRoles.jsx"],"names":["module","export","default","UMaddRoles","React","Component","watch","require","v","render","TrackerReact","addRole","event","preventDefault","roleName","$","val","Meteor","call","error","result","console","log"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,UAAQ,MAAIC;AAAb,CAAd;AAAwC,IAAIC,KAAJ,EAAUC,SAAV;AAAoBL,OAAOM,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACL,SAAQM,CAAR,EAAU;AAACJ,UAAMI,CAAN;AAAQ,EAApB;;AAAqBH,WAAUG,CAAV,EAAY;AAACH,cAAUG,CAAV;AAAY;;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,MAAJ;AAAWT,OAAOM,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACE,QAAOD,CAAP,EAAS;AAACC,WAAOD,CAAP;AAAS;;AAApB,CAAlC,EAAwD,CAAxD;AAA2D,IAAIE,YAAJ;AAAiBV,OAAOM,KAAP,CAAaC,QAAQ,iCAAR,CAAb,EAAwD;AAACL,SAAQM,CAAR,EAAU;AAACE,iBAAaF,CAAb;AAAe;;AAA3B,CAAxD,EAAqF,CAArF;;AAyCrN,MAAML,UAAN,SAAyBO,aAAaL,SAAb,CAAzB,CAAiD;AAE/DM,SAAQC,KAAR,EAAc;AACdA,QAAMC,cAAN;AACC,MAAIC,WAAaC,EAAE,sBAAF,EAA0BC,GAA1B,EAAjB;AACCC,SAAOC,IAAP,CAAY,SAAZ,EAAuBJ,QAAvB,EAAiC,UAASK,KAAT,EAAgBC,MAAhB,EAAwB;AACxD,OAAID,KAAJ,EAAW;AACXE,YAAQC,GAAR,CAAcH,KAAd;AACE;AAEE,GALL;AAOAJ,IAAE,sBAAF,EAA0BC,GAA1B,CAA8B,EAA9B;AAED,EAd8D,CAiB/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEAP,UAAQ;AACP,SACC;AAAA;AAAA;AAAM,QAAG,gBAAT;AAA0B,cAAU,KAAKE,OAAzC;AAAkD,eAAU;AAA5D;AACC;AAAA;AAAA;AAAK,gBAAU;AAAf;AACC;AAAA;AAAA;AAAA;AAAA,KADD;AAEC;AAAO,WAAK,MAAZ;AAAmB,WAAK,UAAxB;AAAmC,gBAAU,yBAA7C;AAAuE;AAAvE;AAFD,IADD;AAKC;AAAA;AAAA;AAAK,gBAAU;AAAf;AACC;AAAO,WAAK,QAAZ;AAAqB,YAAM,UAA3B;AAAsC,gBAAU;AAAhD;AADD;AALD,GADD;AAWC;;AA7C6D","file":"imports/dashboard/userManagement/roles/UMaddRoles.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\n// import Validation from 'react-validation';\n// import validator from 'validator';\n\n\n// Object.assign(Validation.rules, {    \n// \trequired: {     \n\n// \t\trule: value => {       \n// \t\t if(value) {return value.toString().trim();   }\n// \t\t else{return 'hello'}     \n// \t\t},\n\n// \t hint: value => {           \n// \t  return (<span className='form-error is-visible'>Required</span> )      \n// \t  }  \n\n\n// \t },   \n\n// \t alpha: {        \n// \t \trule: value => validator.isAlpha(value),       \n// \t \t hint: () =>{ return(          \n// \t \t   <span className=\"form-error is-visible\">                \n// \t \t      String should contain only letters (a-zA-Z).           \n// \t \t   </span>       \n// \t \t   )}\n\n// \t \t},   \n// \t \t api: {       \n// \t//  \t  hint: value => (           \n// \t//  \t   <button  className=\"form-error is-visible\">            \n// \t//  \t       API Error on \"{value}\" value. Focus to hide.           \n// \t//  \t   </button>       \n// \t//  \t )\n// \t }\n// }\n// );\n\nexport default class UMaddRoles extends TrackerReact(Component) {\n\n\taddRole(event){  \n\tevent.preventDefault();     \n\t var roleName   = $(\"input[name=roleName]\").val();     \n\t  Meteor.call('addrole', roleName, function(error, result) {                    \n\t   if (error) {                        \n\t   console.log ( error );                    \n\t    }                     \n              \n\t      }        \n\t      );      \n\t  $(\"input[name=roleName]\").val('');\t\n\n\t}\n\n\n\t// render(){    \n\t// \t\t return(\n\t// \t\t<Validation.components.Form id=\"addrolesToList\" ref={c => { this.form = c }} onSubmit={this.addRole} className=\"col-lg-6 col-lg-offset-3 col-md-12 col-sm-12 col-xs-12 paddingLeftz\">\n\t// \t\t\t<div className=\"form-group col-lg-8 col-md-4 col-xs-7 col-sm-12 paddingLeftz noLRPad\">\n\t// \t\t\t\t<label>Role Name*</label>\n\t// \t\t\t\t<Validation.components.Input value='' errorClassName='is-invalid-input' type=\"text\" name=\"roleName\" className=\"form-control rolesField\" validations={['required','alpha']}/>\n\t// \t\t\t</div>\n\t// \t\t\t<div className=\"form-group col-lg-4 col-md-4 col-xs-5 col-sm-12 \">\n\t// \t\t\t\t<label className=\"noLabel\">Button</label>\n\t// \t\t\t\t<Validation.components.Button className=\"btn btn-primary submit addrolesBtn\">ADD ROLE</Validation.components.Button>\n\t// \t\t\t</div>\n\t// \t\t</Validation.components.Form>   \n\t// \t\t );\n\n\t// } \n\n\trender(){    \n\t\treturn(\n\t\t\t<form id=\"addrolesToList\" onSubmit={this.addRole} className=\"col-lg-6 col-lg-offset-3 col-md-12 col-sm-12 col-xs-12 paddingLeftz\">\n\t\t\t\t<div className=\"form-group col-lg-8 col-md-4 col-xs-7 col-sm-12 paddingLeftz noLRPad\">\n\t\t\t\t\t<label>Role Name*</label>\n\t\t\t\t\t<input type=\"text\" name=\"roleName\" className=\"form-control rolesField\" required/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group col-lg-4 col-md-4 col-xs-5 col-sm-12 \">\n\t\t\t\t\t<input type=\"submit\" value=\"ADD ROLE\" className=\"btn btn-primary submit addrolesBtn\"/>\n\t\t\t\t</div>\n\t\t\t</form>   \n\t\t );\n\t }\n\t}\n\n"]},"hash":"6679eff041b1d5b1bd803e35defb3424908df983"}

{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"./AssureIdModal.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AssureIdModal"}]},{"source":"./DoHaveProfile.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DoHaveProfile"}]},{"source":"../forms/ResetPassword.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ResetPassword"}]}],"exports":{"exported":["OTPModal"],"specifiers":[{"kind":"local","local":"OTPModal","exported":"default"}]}}},"options":{"filename":"imports/website/permissionModals/OTPModal.jsx","filenameRelative":"imports/website/permissionModals/OTPModal.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/website/permissionModals/OTPModal.jsx.map","sourceFileName":"imports/website/permissionModals/OTPModal.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"OTPModal"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return OTPModal;\n  }\n});\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n  render: function (v) {\n    render = v;\n  }\n}, 1);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  \"default\": function (v) {\n    TrackerReact = v;\n  }\n}, 2);\nvar AssureIdModal = void 0;\nmodule.watch(require(\"./AssureIdModal.jsx\"), {\n  \"default\": function (v) {\n    AssureIdModal = v;\n  }\n}, 3);\nvar DoHaveProfile = void 0;\nmodule.watch(require(\"./DoHaveProfile.jsx\"), {\n  \"default\": function (v) {\n    DoHaveProfile = v;\n  }\n}, 4);\nvar ResetPassword = void 0;\nmodule.watch(require(\"../forms/ResetPassword.jsx\"), {\n  \"default\": function (v) {\n    ResetPassword = v;\n  }\n}, 5);\n\nvar OTPModal = function (_React$Component) {\n  (0, _inherits3.default)(OTPModal, _React$Component);\n\n  function OTPModal() {\n    (0, _classCallCheck3.default)(this, OTPModal);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this));\n\n    _this.state = {\n      \"subscription\": {\n        user: Meteor.subscribe(\"userfunction\")\n      }\n    };\n    return _this;\n  }\n\n  OTPModal.prototype.componentWillMount = function () {\n    function componentWillMount() {}\n\n    return componentWillMount;\n  }();\n\n  OTPModal.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {}\n\n    return componentWillUnmount;\n  }();\n\n  OTPModal.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      $(\"#OTPMobMail\").validate();\n    }\n\n    return componentDidMount;\n  }();\n\n  OTPModal.prototype.showWelcome = function () {\n    function showWelcome(event) {\n      event.preventDefault();\n      $('#OtpBlock').hide();\n      $('#DoHaveProfile').show();\n    }\n\n    return showWelcome;\n  }();\n\n  OTPModal.prototype.confirmOTP = function () {\n    function confirmOTP(event) {\n      event.preventDefault();\n      var sessionValue1 = Session.get('mobotp');\n      var sessionValue2 = Session.get('mailotp');\n\n      if (sessionValue1 && sessionValue2) {\n        var mobotp = sessionValue1;\n        var mailotp = sessionValue2;\n        var newID = Session.get('newID'); // console.log(\"newID: \",newID);\n      } else {\n        var username = $('input[name=\"loginusername\"]').val();\n        var userOtp = Meteor.users.findOne({\n          \"username\": username\n        });\n\n        if (userOtp) {\n          var mobotp = userOtp.profile.sentMobileOTP;\n          var mailotp = userOtp.profile.sentEmailOTP;\n          var usercode = userOtp.profile.userCode.split(\"\").reverse().join(\"\");\n          var newID = userOtp._id;\n        } // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n\n      }\n\n      var emailotp = this.refs.emailotp.value;\n      var mobileotp = this.refs.mobileotp.value;\n\n      if (mailotp == emailotp && mobotp == mobileotp) {\n        Meteor.call('createUserByAdminSetEmailToTrue', newID, function (error, result) {\n          if (error) {\n            console.log(error.reason, \"danger\", \"growl-top-right\");\n          } else {\n            if ($('#OTPMobMail').hasClass('newPassword')) {} else {\n              if ($('input[name=\"signupEmail\"]').val() != '' && $('input[name=\"signupPassword\"]').val() != '') {\n                var email = $('input[name=\"signupEmail\"]').val();\n                var passwordVar = $('input[name=\"signupPassword\"]').val();\n              } else {\n                var email = username;\n                var passwordVar = usercode;\n              } // console.log(\"email: \",email);\n              // console.log(\"password: \",passwordVar);  \n\n\n              Meteor.loginWithPassword(email, passwordVar, function (error) {\n                if (error) {\n                  console.log('error: ', error);\n                } else {\n                  swal({\n                    title: \"Congratulations!!!\",\n                    text: \"Account Created Successfully!\",\n                    // timer: 1700,\n                    showConfirmButton: true\n                  });\n                }\n              });\n            }\n          }\n        });\n        Meteor.call('updateOTP', newID, mobotp, mailotp, function (error, result) {\n          if (error) {\n            Bert.alert(error);\n          } else {}\n        });\n\n        if ($('#OTPMobMail').hasClass('newPassword')) {\n          $('#OtpBlock').hide();\n          $('#ResetBlock').show(); // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n        } else {\n          $('#OtpBlock').hide();\n          $('#DoHaveProfile').show();\n        }\n      } else {\n        swal('Either email OTP or mobile OTP is incorrect');\n      }\n\n      $('#assureIDModal').show();\n    }\n\n    return confirmOTP;\n  }();\n\n  OTPModal.prototype.inputEffect = function () {\n    function inputEffect(event) {\n      event.preventDefault(); // alert('hi');\n\n      if ($(event.target).val() != \"\") {\n        $(event.target).addClass(\"has-content\");\n      } else {\n        $(event.target).removeClass(\"has-content\");\n      }\n    }\n\n    return inputEffect;\n  }();\n\n  OTPModal.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        {\n          className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"outerOTPWRapper col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n            id: \"OtpBlock\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"row\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\"\n              },\n              React.createElement(\"img\", {\n                src: \"../images/AssureIDlogo.png\",\n                className: \"loginPageLogo\",\n                alt: \"AssureID logo\"\n              })\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-lg-10 col-lg-offset-1 col-md-12 col-sm-12 col-xs-12\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"text-center col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\"\n                },\n                React.createElement(\n                  \"span\",\n                  null,\n                  \"We have sent you an OTP\",\n                  React.createElement(\"br\", null),\n                  \"to your registered email Id and mobile no.\",\n                  React.createElement(\"br\", null),\n                  \"Enter your OTP below.\"\n                )\n              ),\n              React.createElement(\n                \"form\",\n                {\n                  id: \"OTPMobMail\",\n                  onSubmit: this.confirmOTP.bind(this)\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-effect input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon addons\",\n                        id: \"basic-addon1\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-key\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      type: \"text\",\n                      className: \"effect-21 form-control loginInputs\",\n                      ref: \"emailotp\",\n                      name: \"emailotp\",\n                      onBlur: this.inputEffect.bind(this),\n                      \"aria-describedby\": \"basic-addon1\",\n                      title: \"Please enter numbers only!\",\n                      maxLength: \"6\",\n                      pattern: \"^[0-9]*$\",\n                      required: true\n                    }),\n                    React.createElement(\n                      \"label\",\n                      null,\n                      \"6 digits OTP sent on email Id\"\n                    ),\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"focus-border\"\n                      },\n                      React.createElement(\"i\", null)\n                    )\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-effect input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon addons\",\n                        id: \"basic-addon1\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-key\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      type: \"text\",\n                      className: \"effect-21 form-control loginInputs\",\n                      ref: \"mobileotp\",\n                      name: \"mobileotp\",\n                      onBlur: this.inputEffect.bind(this),\n                      \"aria-describedby\": \"basic-addon1\",\n                      title: \"Please enter numbers only!\",\n                      maxLength: \"4\",\n                      pattern: \"^[0-9]*$\",\n                      required: true\n                    }),\n                    React.createElement(\n                      \"label\",\n                      null,\n                      \"4 digits OTP sent on mobile no.\"\n                    ),\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"focus-border\"\n                      },\n                      React.createElement(\"i\", null)\n                    )\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"button\",\n                    {\n                      type: \"submit\",\n                      className: \"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                    },\n                    \"Submit\"\n                  )\n                )\n              )\n            )\n          )\n        ),\n        React.createElement(DoHaveProfile, null),\n        React.createElement(ResetPassword, null)\n      );\n    }\n\n    return render;\n  }();\n\n  return OTPModal;\n}(React.Component);","map":{"version":3,"sources":["imports/website/permissionModals/OTPModal.jsx"],"names":["module","export","OTPModal","React","watch","require","v","render","TrackerReact","AssureIdModal","DoHaveProfile","ResetPassword","state","user","Meteor","subscribe","componentWillMount","componentWillUnmount","componentDidMount","$","validate","showWelcome","event","preventDefault","hide","show","confirmOTP","sessionValue1","Session","get","sessionValue2","mobotp","mailotp","newID","username","val","userOtp","users","findOne","profile","sentMobileOTP","sentEmailOTP","usercode","userCode","split","reverse","join","_id","emailotp","refs","value","mobileotp","call","error","result","console","log","reason","hasClass","email","passwordVar","loginWithPassword","swal","title","text","showConfirmButton","Bert","alert","inputEffect","target","addClass","removeClass","bind","Component"],"mappings":"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","file":"imports/website/permissionModals/OTPModal.jsx.map","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport AssureIdModal from './AssureIdModal.jsx';\n\nimport DoHaveProfile from './DoHaveProfile.jsx';\nimport ResetPassword from '../forms/ResetPassword.jsx';\n\nexport default class OTPModal extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n      \"subscription\" : { \n        user             : Meteor.subscribe(\"userfunction\"),  \n      }\n    }\n  }\n  componentWillMount(){\n  }\n  componentWillUnmount(){\n  }\n  componentDidMount() {\n    $(\"#OTPMobMail\").validate();\n  }\n  showWelcome(event){\n    event.preventDefault();\n    $('#OtpBlock').hide();\n    $('#DoHaveProfile').show();\n  }\n  confirmOTP(event){\n    event.preventDefault();\n    \n    var sessionValue1 = Session.get('mobotp');\n    var sessionValue2 = Session.get('mailotp');\n    if(sessionValue1 && sessionValue2){\n      var mobotp = sessionValue1;\n      var mailotp = sessionValue2;\n      var newID = Session.get('newID');\n      // console.log(\"newID: \",newID);\n    }else{\n      var username = $('input[name=\"loginusername\"]').val();\n      var userOtp = Meteor.users.findOne({\"username\":username});\n      if(userOtp){\n        var mobotp = userOtp.profile.sentMobileOTP;\n        var mailotp = userOtp.profile.sentEmailOTP;\n        var usercode = userOtp.profile.userCode.split(\"\").reverse().join(\"\");\n        var newID = userOtp._id;\n      }\n      // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n    }\n    var emailotp = this.refs.emailotp.value;\n    var mobileotp = this.refs.mobileotp.value;\n    if(mailotp == emailotp && mobotp == mobileotp){\n      Meteor.call('createUserByAdminSetEmailToTrue',newID,\n      function(error,result){\n        if(error){\n          console.log(error.reason,\"danger\",\"growl-top-right\");\n        }else{\n          if($('#OTPMobMail').hasClass('newPassword')){\n            \n          }else{\n            \n            if($('input[name=\"signupEmail\"]').val() != '' && $('input[name=\"signupPassword\"]').val() != ''){\n              var email = $('input[name=\"signupEmail\"]').val();\n              var passwordVar = $('input[name=\"signupPassword\"]').val();\n            }else{\n              var email = username;\n              var passwordVar = usercode;\n            } \n\n            // console.log(\"email: \",email);\n            // console.log(\"password: \",passwordVar);  \n\n            Meteor.loginWithPassword(email, passwordVar, function(error) {\n              if (error) {\n                console.log('error: ',error);\n              } else {\n                swal({\n                  title: \"Congratulations!!!\",\n                  text: \"Account Created Successfully!\",\n                  // timer: 1700,\n                  showConfirmButton: true,\n                });\n              }\n            }); \n          }   \n        }\n      });\n\n      Meteor.call('updateOTP', newID , mobotp, mailotp , function(error,result){\n        if(error){\n          Bert.alert(error);\n        }else{\n\n        }\n      });\n\n      if($('#OTPMobMail').hasClass('newPassword')){\n        $('#OtpBlock').hide();\n        $('#ResetBlock').show();\n        // console.log(\"mobotp: \",mobotp+\" mailotp: \",mailotp);\n      }else{\n        $('#OtpBlock').hide();\n        $('#DoHaveProfile').show();\n      }    \n    }else{\n      swal('Either email OTP or mobile OTP is incorrect');\n    }\n  $('#assureIDModal').show();\n  }\n\n  inputEffect(event){\n    event.preventDefault();\n    // alert('hi');\n    if($(event.target).val() != \"\"){\n      $(event.target).addClass(\"has-content\");\n    }else{\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> \n        <div className=\"outerOTPWRapper col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"OtpBlock\">\n         {/*<button type=\"button\" className=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#OtpModal\">Open OTP Modal</button>*/}\n\n          {/*<div id=\"OtpModal\" className=\"modal fade\" role=\"dialog\">\n            <div className=\"modal-dialog\">\n\n              <div className=\"modal-content\">\n                <div className=\"modal-body text-center\">*/}\n\n                  <div className=\"row\">\n                     <div className=\"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\">\n                        <img src=\"../images/AssureIDlogo.png\" className=\"loginPageLogo\"  alt=\"AssureID logo\"/> \n                      </div>\n                    <div className=\"col-lg-10 col-lg-offset-1 col-md-12 col-sm-12 col-xs-12\">\n                      <div className=\"text-center col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\">\n                        <span>We have sent you an OTP<br/>\n                        to your registered email Id and mobile no.<br />\n                        Enter your OTP below.</span>\n                      </div>\n                      <form id=\"OTPMobMail\" onSubmit={this.confirmOTP.bind(this)}>\n                        <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <div className=\"input-effect input-group\">\n                            <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-key\" aria-hidden=\"true\"></i></span>\n                            <input type=\"text\" className=\"effect-21 form-control loginInputs\" ref=\"emailotp\" name=\"emailotp\" onBlur={this.inputEffect.bind(this)} aria-describedby=\"basic-addon1\" title=\"Please enter numbers only!\" maxLength=\"6\" pattern=\"^[0-9]*$\" required/>\n                            <label>6 digits OTP sent on email Id</label>\n                            <span className=\"focus-border\">\n                              <i></i>\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <div className=\"input-effect input-group\">\n                            <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-key\" aria-hidden=\"true\"></i></span>\n                            <input type=\"text\" className=\"effect-21 form-control loginInputs\" ref=\"mobileotp\" name=\"mobileotp\" onBlur={this.inputEffect.bind(this)} aria-describedby=\"basic-addon1\" title=\"Please enter numbers only!\" maxLength=\"4\" pattern=\"^[0-9]*$\" required/>\n                            <label>4 digits OTP sent on mobile no.</label>\n                            <span className=\"focus-border\">\n                              <i></i>\n                            </span>\n                          </div>\n                        </div>  \n                        <div className=\"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"> \n                          {/*<button type=\"button\" className=\"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12\" onClick={this.showWelcome.bind(this)}>Submit</button>*/}\n                          <button type=\"submit\" className=\"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12\">Submit</button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n\n                {/*</div>\n              </div>\n\n            </div>\n          </div>*/}\n        </div>\n        <DoHaveProfile />\n        <ResetPassword />\n\n      </div>\n    );\n  }\n}\n"]},"hash":"0944e68180789f1fe36c14cb5167bbeb8eeac6e6"}

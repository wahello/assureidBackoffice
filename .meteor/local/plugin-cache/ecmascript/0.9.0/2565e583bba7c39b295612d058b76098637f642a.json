{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../uploadToServer/uploadNewsVideoServer.js","imported":["NewsVideo"],"specifiers":[{"kind":"named","imported":"NewsVideo","local":"NewsVideo"}]}],"exports":{"exported":["NewsFeeds","TempNewsVideo"],"specifiers":[{"kind":"local","local":"NewsFeeds","exported":"NewsFeeds"},{"kind":"local","local":"TempNewsVideo","exported":"TempNewsVideo"}]}}},"options":{"filename":"imports/dashboard/forms/api/NewsFeed.js","filenameRelative":"imports/dashboard/forms/api/NewsFeed.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/api/NewsFeed.js.map","sourceFileName":"imports/dashboard/forms/api/NewsFeed.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NewsFeed"},"ignored":false,"code":"module.export({\n  NewsFeeds: function () {\n    return NewsFeeds;\n  },\n  TempNewsVideo: function () {\n    return TempNewsVideo;\n  }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar NewsVideo = void 0;\nmodule.watch(require(\"../uploadToServer/uploadNewsVideoServer.js\"), {\n  NewsVideo: function (v) {\n    NewsVideo = v;\n  }\n}, 2);\nvar NewsFeeds = new Mongo.Collection(\"newsFeeds\");\nvar TempNewsVideo = new Mongo.Collection(\"tempNewsVideo\");\n\nif (Meteor.isServer) {\n  Meteor.publish('newsFeeds', function () {\n    return NewsFeeds.find({});\n  });\n  Meteor.publish('singleNews', function (_id) {\n    return NewsFeeds.find({\n      \"_id\": _id\n    });\n  });\n  Meteor.publish('tempNewsVideo', function () {\n    return TempNewsVideo.find({});\n  });\n  Meteor.publish('newsFeedData', function () {\n    return NewsFeeds.find({}, {\n      sort: {\n        createdAt: -1\n      },\n      limit: 2\n    });\n  });\n  Meteor.methods({\n    'createNewsFeed': function (newsFeedTitile, startDate, endDate, newsDescription, newsVideoType, youTubevideo, userId, lastModified) {\n      var getVideo = TempNewsVideo.findOne({\n        \"_id\": \"1\"\n      }, {\n        sort: {\n          createdAt: -1,\n          limit: 1\n        }\n      });\n\n      if (getVideo) {\n        var localVideo = getVideo.link;\n      } else {\n        var localVideo = \"\";\n      }\n\n      var getImage = TempNewsVideo.findOne({\n        \"_id\": \"2\"\n      }, {\n        sort: {\n          createdAt: -1,\n          limit: 1\n        }\n      });\n\n      if (getImage) {\n        var localImage = getImage.link;\n      } else {\n        var localImage = \"\";\n      }\n\n      NewsFeeds.insert({\n        'newsFeedTitile': newsFeedTitile,\n        'startDate': startDate,\n        'endDate': endDate,\n        'newsDescription': newsDescription,\n        'newsVideoType': newsVideoType,\n        'newsVideo': localVideo,\n        'newsYouTubeVideo': youTubevideo,\n        'newsImage': localImage,\n        'authorUserId': userId,\n        'lastModified': lastModified,\n        'createdAt': new Date()\n      });\n      TempNewsVideo.remove({});\n    },\n    \"TempAddVideoToS3function\": function (id) {\n      var data = NewsVideo.findOne({\n        \"_id\": id\n      });\n      var link = data.link();\n      TempNewsVideo.insert({\n        \"_id\": \"1\",\n        \"userId\": Meteor.userId(),\n        \"link\": link,\n        \"createdAt\": new Date()\n      }, function (error, result) {});\n    },\n    \"TempAddImagetoNewsFeed\": function (id) {\n      var data = NewsVideo.findOne({\n        \"_id\": id\n      });\n      var link = data.link();\n      TempNewsVideo.insert({\n        \"_id\": \"2\",\n        \"userId\": Meteor.userId(),\n        \"link\": link,\n        \"createdAt\": new Date()\n      }, function (error, result) {});\n    },\n    'updateNewsFeed': function (id, newsFeedTitile, startDate, endDate, newsDescription, newsVideoType, youTubevideo, userId, lastModified) {\n      var data = TempNewsVideo.findOne({\n        \"userId\": Meteor.userId(),\n        \"_id\": \"1\"\n      });\n\n      if (data) {\n        var localvideoLink = data.link;\n      } else {\n        var oldVideoData = NewsVideo.findOne({\n          \"_id\": id\n        }, {\n          sort: {\n            \"createdAt\": -1\n          }\n        });\n\n        if (oldVideoData) {\n          var localvideoLink = oldVideoData.newsVideo;\n        }\n      }\n\n      var data = TempNewsVideo.findOne({\n        \"userId\": Meteor.userId(),\n        \"_id\": \"2\"\n      });\n\n      if (data) {\n        var localImage = data.link;\n      } else {\n        var oldVideoData = NewsVideo.findOne({\n          \"_id\": id\n        }, {\n          sort: {\n            \"createdAt\": -1\n          }\n        });\n\n        if (oldVideoData) {\n          var localImage = oldVideoData.newsImage;\n        }\n      }\n\n      NewsFeeds.update({\n        '_id': id\n      }, {\n        $set: {\n          'newsFeedTitile': newsFeedTitile,\n          'startDate': startDate,\n          'endDate': endDate,\n          'newsDescription': newsDescription,\n          'newsVideoType': newsVideoType,\n          'newsVideo': localvideoLink,\n          'newsYouTubeVideo': youTubevideo,\n          'newsImage': localImage,\n          'authorUserId': userId,\n          'lastModified': lastModified //End of set\n\n        }\n      });\n      TempNewsVideo.remove({});\n    },\n    'deleteNews': function (id) {\n      NewsFeeds.remove({\n        '_id': id\n      });\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/forms/api/NewsFeed.js"],"names":["module","export","NewsFeeds","TempNewsVideo","Mongo","watch","require","v","Meteor","NewsVideo","Collection","isServer","publish","find","_id","sort","createdAt","limit","methods","newsFeedTitile","startDate","endDate","newsDescription","newsVideoType","youTubevideo","userId","lastModified","getVideo","findOne","localVideo","link","getImage","localImage","insert","Date","remove","id","data","error","result","localvideoLink","oldVideoData","newsVideo","newsImage","update","$set"],"mappings":"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","file":"imports/dashboard/forms/api/NewsFeed.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const NewsFeeds = new Mongo.Collection(\"newsFeeds\");\nexport const TempNewsVideo = new Mongo.Collection(\"tempNewsVideo\");\n\nimport { NewsVideo } from \"../uploadToServer/uploadNewsVideoServer.js\";\n\nif(Meteor.isServer){\n   Meteor.publish('newsFeeds',()=>{\n       return NewsFeeds.find({});\n   });\n  Meteor.publish('singleNews',(_id)=>{\n      return NewsFeeds.find({\"_id\":_id});  \n  });\n   Meteor.publish('tempNewsVideo',()=>{\n      return TempNewsVideo.find({});\n  });\n  Meteor.publish('newsFeedData',()=>{\n      return NewsFeeds.find({},{sort : {createdAt: -1} , limit : 2});\n  });\n\n\t Meteor.methods({\n\t \t \t'createNewsFeed':function(newsFeedTitile,startDate,endDate,newsDescription,newsVideoType,youTubevideo,userId,lastModified){\n\n        var getVideo             = TempNewsVideo.findOne({\"_id\": \"1\"}, {sort: {createdAt: -1, limit: 1}});\n        if(getVideo){\n          var localVideo         = getVideo.link;\n        }else{\n          var localVideo         = \"\";\n        }\n\n        var getImage             = TempNewsVideo.findOne({\"_id\": \"2\"}, {sort: {createdAt: -1, limit: 1}});\n        if(getImage){\n          var localImage         = getImage.link;\n        }else{\n          var localImage         = \"\";\n        }\n        \n    \t\tNewsFeeds.insert({\n          'newsFeedTitile'  : newsFeedTitile,\n    \t\t\t'startDate'       : startDate,\n          'endDate'         : endDate,\n    \t\t\t'newsDescription' : newsDescription,\n          'newsVideoType'   : newsVideoType,\n          'newsVideo'       : localVideo,\n          'newsYouTubeVideo': youTubevideo,\n          'newsImage'       : localImage,\n          'authorUserId'    : userId,\n          'lastModified'    : lastModified,\n          'createdAt'       : new Date(),\n\n    \t\t});  \n        TempNewsVideo.remove({});\n     \t},\n      \"TempAddVideoToS3function\": function (id) {\n        var data = NewsVideo.findOne({\"_id\" : id});\n        var link = data.link();\n          TempNewsVideo.insert({\n           \"_id\": \"1\",\n           \"userId\": Meteor.userId(),\n           \"link\":link,\n          \"createdAt\":new Date(),\n          },(error, result)=>{\n\n        });\n      },\n      \"TempAddImagetoNewsFeed\": function (id) {\n        var data = NewsVideo.findOne({\"_id\" : id});\n        var link = data.link();\n          TempNewsVideo.insert({\n           \"_id\": \"2\",\n           \"userId\": Meteor.userId(),\n           \"link\":link,\n          \"createdAt\":new Date(),\n          },(error, result)=>{\n\n        });\n      },\n      'updateNewsFeed':function(id,newsFeedTitile,startDate,endDate,newsDescription,newsVideoType,youTubevideo,userId,lastModified){\n         var data = TempNewsVideo.findOne({\"userId\":Meteor.userId(),\"_id\" : \"1\"});\n          if(data){\n              var localvideoLink       = data.link;\n          }else{\n              var oldVideoData         = NewsVideo.findOne({\"_id\":id},{sort:{\"createdAt\":-1}});\n              if(oldVideoData){\n                var localvideoLink     = oldVideoData.newsVideo;\n              }\n          }\n         var data = TempNewsVideo.findOne({\"userId\":Meteor.userId(),\"_id\" : \"2\"});\n          if(data){\n              var localImage         = data.link;\n          }else{\n              var oldVideoData       = NewsVideo.findOne({\"_id\":id},{sort:{\"createdAt\":-1}});\n              if(oldVideoData){\n                var localImage       = oldVideoData.newsImage;\n              }\n          }\n         \n        NewsFeeds.update(\n          { '_id': id },\n              {\n                $set:{\n                  'newsFeedTitile'        : newsFeedTitile,\n                  'startDate'             : startDate,\n                  'endDate'               : endDate,\n                  'newsDescription'       : newsDescription,\n                  'newsVideoType'         : newsVideoType,\n                  'newsVideo'             : localvideoLink,\n                  'newsYouTubeVideo'      : youTubevideo,\n                  'newsImage'             : localImage,\n                  'authorUserId'          : userId,\n                  'lastModified'          : lastModified,\n              } //End of set\n            }\n        );\n        TempNewsVideo.remove({});\n      }, \n      'deleteNews':function(id){\n         NewsFeeds.remove({'_id': id});\n      },\n\n\t });\n\n}\n"]},"hash":"2565e583bba7c39b295612d058b76098637f642a"}

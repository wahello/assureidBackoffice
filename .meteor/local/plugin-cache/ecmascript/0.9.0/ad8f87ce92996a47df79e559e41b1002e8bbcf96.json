{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"./api/Order.js","imported":["TempOrder"],"specifiers":[{"kind":"named","imported":"TempOrder","local":"TempOrder"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/website/ServiceProcess/PaymentGateway.jsx","filenameRelative":"imports/website/ServiceProcess/PaymentGateway.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/website/ServiceProcess/PaymentGateway.jsx.map","sourceFileName":"imports/website/ServiceProcess/PaymentGateway.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"PaymentGateway"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n  browserHistory(v) {\n    browserHistory = v;\n  }\n\n}, 3);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n  Link(v) {\n    Link = v;\n  }\n\n}, 4);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 5);\nlet TempOrder;\nmodule.watch(require(\"./api/Order.js\"), {\n  TempOrder(v) {\n    TempOrder = v;\n  }\n\n}, 6);\n\nclass PaymentGateway extends TrackerReact(Component) {\n  constructor() {\n    super();\n    this.state = {\n      \"subscription\": {\n        \"singleTempOrder\": Meteor.subscribe(\"singleTempOrder\")\n      }\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {}\n\n  componentWillUnmount() {}\n\n  componentDidMount() {\n    $('html, body').scrollTop(0);\n  }\n\n  confirmPayment(event) {\n    event.preventDefault(); // var path = \"/PaymentGateway\";\n    // browserHistory.replace(path);\n\n    var invoiceDate = this.props.tempOrder.createdAt;\n    var invoiceNo = this.props.tempOrder.invoiceNo;\n    var serviceId = this.props.tempOrder.serviceId;\n    var serviceName = this.props.tempOrder.serviceName;\n    var serviceRate = this.props.tempOrder.serviceRate;\n    var serviceDuration = this.props.tempOrder.serviceDuration;\n    var userId = this.props.tempOrder.userId;\n    var userName = this.props.tempOrder.userName;\n    var totalAmount = this.props.tempOrder.totalAmount;\n    var delieveryStatus = {\n      \"status\": \"New Order\",\n      \"createdAt\": new Date()\n    };\n    Meteor.call(\"insertOrder\", invoiceDate, invoiceNo, serviceId, serviceName, serviceRate, serviceDuration, userId, userName, totalAmount, delieveryStatus, function (error, result) {\n      if (error) {\n        console.log(\"error\", error.reason);\n      } else {\n        swal(\"Done\");\n        var path = \"/Receipt/\" + result;\n        browserHistory.replace(path);\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"outerServiceBlock col-lg-12 col-md-12 col-sm-12 col-xs-1\"\n      },\n      React.createElement(\n        \"div\",\n        {\n          className: \"servieInnerBlock col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-12 col-xs-12\"\n          },\n          React.createElement(\n            \"h1\",\n            {\n              className: \"text-center\"\n            },\n            \"Payment Gateway\"\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 outerButtonDiv\"\n            },\n            React.createElement(\n              \"button\",\n              {\n                type: \"submit\",\n                className: \"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn ServiceProcessButtons pull-right\",\n                onClick: this.confirmPayment.bind(this)\n              },\n              \"Confirm Payment\"\n            )\n          )\n        )\n      )\n    );\n  }\n\n}\n\nPaymentGatewayContainer = withTracker(({\n  params\n}) => {\n  var _id = params.id; // console.log(\"_id\",_id);\n\n  const postHandle = Meteor.subscribe('singleTempOrder', _id); // var editServices   = this.props.params.id;\n  // console.log(\"Param\" +editServices);\n\n  const tempOrder = TempOrder.findOne({\n    \"_id\": _id\n  }); // console.log('tempOrder ', tempOrder);\n\n  const loading = !postHandle.ready();\n\n  if (_id) {\n    return {\n      loading,\n      tempOrder\n    };\n  }\n})(PaymentGateway);\nmodule.exportDefault(PaymentGatewayContainer);","map":{"version":3,"sources":["imports/website/ServiceProcess/PaymentGateway.jsx"],"names":["React","Component","module","watch","require","default","v","render","TrackerReact","browserHistory","Link","withTracker","TempOrder","PaymentGateway","constructor","state","Meteor","subscribe","componentWillMount","componentWillUnmount","componentDidMount","$","scrollTop","confirmPayment","event","preventDefault","invoiceDate","props","tempOrder","createdAt","invoiceNo","serviceId","serviceName","serviceRate","serviceDuration","userId","userName","totalAmount","delieveryStatus","Date","call","error","result","console","log","reason","swal","path","replace","bind","PaymentGatewayContainer","params","_id","id","postHandle","findOne","loading","ready","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ,EAAUC,SAAV;AAAoBC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACN,YAAMM,CAAN;AAAQ,GAApB;;AAAqBL,YAAUK,CAAV,EAAY;AAACL,gBAAUK,CAAV;AAAY;;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,MAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACG,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAlC,EAAwD,CAAxD;AAA2D,IAAIE,YAAJ;AAAiBN,OAAOC,KAAP,CAAaC,QAAQ,iCAAR,CAAb,EAAwD;AAACC,UAAQC,CAAR,EAAU;AAACE,mBAAaF,CAAb;AAAe;;AAA3B,CAAxD,EAAqF,CAArF;AAAwF,IAAIG,cAAJ;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACK,iBAAeH,CAAf,EAAiB;AAACG,qBAAeH,CAAf;AAAiB;;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAII,IAAJ;AAASR,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACM,OAAKJ,CAAL,EAAO;AAACI,WAAKJ,CAAL;AAAO;;AAAhB,CAArC,EAAuD,CAAvD;AAA0D,IAAIK,WAAJ;AAAgBT,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACO,cAAYL,CAAZ,EAAc;AAACK,kBAAYL,CAAZ;AAAc;;AAA9B,CAAjD,EAAiF,CAAjF;AAAoF,IAAIM,SAAJ;AAAcV,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACQ,YAAUN,CAAV,EAAY;AAACM,gBAAUN,CAAV;AAAY;;AAA1B,CAAvC,EAAmE,CAAnE;;AAQ1iB,MAAMO,cAAN,SAA6BL,aAAaP,SAAb,CAA7B,CAAoD;AAClDa,gBAAa;AACX;AACA,SAAKC,KAAL,GAAY;AACV,sBAAiB;AACf,2BAAoBC,OAAOC,SAAP,CAAiB,iBAAjB;AADL;AADP,KAAZ,CAFW,CAOX;AACD;;AACDC,uBAAoB,CACnB;;AACDC,yBAAsB,CACrB;;AACDC,sBAAmB;AACjBC,MAAE,YAAF,EAAgBC,SAAhB,CAA0B,CAA1B;AACD;;AACDC,iBAAeC,KAAf,EAAqB;AACnBA,UAAMC,cAAN,GADmB,CAEnB;AACA;;AACA,QAAIC,cAAmB,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,SAA5C;AACA,QAAIC,YAAmB,KAAKH,KAAL,CAAWC,SAAX,CAAqBE,SAA5C;AACA,QAAIC,YAAmB,KAAKJ,KAAL,CAAWC,SAAX,CAAqBG,SAA5C;AACA,QAAIC,cAAmB,KAAKL,KAAL,CAAWC,SAAX,CAAqBI,WAA5C;AACA,QAAIC,cAAmB,KAAKN,KAAL,CAAWC,SAAX,CAAqBK,WAA5C;AACA,QAAIC,kBAAmB,KAAKP,KAAL,CAAWC,SAAX,CAAqBM,eAA5C;AACA,QAAIC,SAAmB,KAAKR,KAAL,CAAWC,SAAX,CAAqBO,MAA5C;AACA,QAAIC,WAAmB,KAAKT,KAAL,CAAWC,SAAX,CAAqBQ,QAA5C;AACA,QAAIC,cAAmB,KAAKV,KAAL,CAAWC,SAAX,CAAqBS,WAA5C;AACA,QAAIC,kBAAmB;AACrB,gBAAW,WADU;AAErB,mBAAc,IAAIC,IAAJ;AAFO,KAAvB;AAKEvB,WAAOwB,IAAP,CAAY,aAAZ,EAA0Bd,WAA1B,EAAsCI,SAAtC,EAAgDC,SAAhD,EAA0DC,WAA1D,EAAsEC,WAAtE,EAAkFC,eAAlF,EAAkGC,MAAlG,EAAyGC,QAAzG,EAAkHC,WAAlH,EAA8HC,eAA9H,EAA8I,UAASG,KAAT,EAAeC,MAAf,EAAsB;AACnK,UAAID,KAAJ,EAAW;AACVE,gBAAQC,GAAR,CAAY,OAAZ,EAAoBH,MAAMI,MAA1B;AACA,OAFD,MAEK;AACJC,aAAK,MAAL;AACA,YAAIC,OAAO,cAAYL,MAAvB;AACAjC,uBAAeuC,OAAf,CAAuBD,IAAvB;AACA;AACD,KARD;AASH;;AAEDxC,WAAQ;AACN,WACE;AAAA;AAAA;AAAK,mBAAU;AAAf;AACE;AAAA;AAAA;AAAK,qBAAU;AAAf;AACE;AAAA;AAAA;AAAK,uBAAU;AAAf;AACE;AAAA;AAAA;AAAI,yBAAU;AAAd;AAAA;AAAA,WADF;AAEI;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AAAS,sBAAK,QAAd;AAAuB,2BAAU,sFAAjC;AAAwH,yBAAS,KAAKgB,cAAL,CAAoB0B,IAApB,CAAyB,IAAzB;AAAjI;AAAA;AAAA;AADF;AAFJ;AADF;AADF,KADF;AAYD;;AA3DiD;;AA8DpDC,0BAA0BvC,YAAY,CAAC;AAACwC;AAAD,CAAD,KAAc;AAChD,MAAIC,MAAMD,OAAOE,EAAjB,CADgD,CAEhD;;AACA,QAAMC,aAAatC,OAAOC,SAAP,CAAiB,iBAAjB,EAAmCmC,GAAnC,CAAnB,CAHgD,CAIhD;AACA;;AACA,QAAMxB,YAAYhB,UAAU2C,OAAV,CAAkB;AAAC,WAAMH;AAAP,GAAlB,CAAlB,CANgD,CAOhD;;AACA,QAAMI,UAAU,CAACF,WAAWG,KAAX,EAAjB;;AAEA,MAAGL,GAAH,EAAO;AACL,WAAO;AACHI,aADG;AAEH5B;AAFG,KAAP;AAID;AACJ,CAhByB,EAgBvBf,cAhBuB,CAA1B;AAtEAX,OAAOwD,aAAP,CAuFeR,uBAvFf","file":"imports/website/ServiceProcess/PaymentGateway.jsx.map","sourcesContent":["import React,{Component} from 'react';\nimport {render} from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport {browserHistory} from 'react-router';\nimport { Link } from 'react-router';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport { TempOrder } from './api/Order.js';\n\nclass PaymentGateway extends TrackerReact(Component){\n  constructor(){\n    super();\n    this.state ={\n      \"subscription\" : {\n        \"singleTempOrder\" : Meteor.subscribe(\"singleTempOrder\"),\n      }\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n  componentWillMount(){\n  }\n  componentWillUnmount(){\n  }\n  componentDidMount(){ \n    $('html, body').scrollTop(0);\n  }\n  confirmPayment(event){ \n    event.preventDefault();\n    // var path = \"/PaymentGateway\";\n    // browserHistory.replace(path);\n    var invoiceDate      = this.props.tempOrder.createdAt\n    var invoiceNo        = this.props.tempOrder.invoiceNo;\n    var serviceId        = this.props.tempOrder.serviceId;\n    var serviceName      = this.props.tempOrder.serviceName;\n    var serviceRate      = this.props.tempOrder.serviceRate;\n    var serviceDuration  = this.props.tempOrder.serviceDuration;\n    var userId           = this.props.tempOrder.userId;\n    var userName         = this.props.tempOrder.userName;\n    var totalAmount      = this.props.tempOrder.totalAmount;\n    var delieveryStatus  = {\n      \"status\" : \"New Order\",\n      \"createdAt\" : new Date(),\n    };\n\n      Meteor.call(\"insertOrder\",invoiceDate,invoiceNo,serviceId,serviceName,serviceRate,serviceDuration,userId,userName,totalAmount,delieveryStatus,function(error,result){\n       if (error) {\n        console.log(\"error\",error.reason);\n       }else{\n        swal(\"Done\");  \n        var path = \"/Receipt/\"+result;\n        browserHistory.replace(path);\n       }\n      });\n  }\n  \n  render(){\n    return(\n      <div className=\"outerServiceBlock col-lg-12 col-md-12 col-sm-12 col-xs-1\">\n        <div className=\"servieInnerBlock col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-12 col-xs-12\">\n            <h1 className=\"text-center\">Payment Gateway</h1>\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 outerButtonDiv\">\n                <button  type=\"submit\" className=\"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn ServiceProcessButtons pull-right\" onClick={this.confirmPayment.bind(this)}>Confirm Payment</button>\n              </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPaymentGatewayContainer = withTracker(({params}) => {\n    var _id = params.id;\n    // console.log(\"_id\",_id);\n    const postHandle = Meteor.subscribe('singleTempOrder',_id);\n    // var editServices   = this.props.params.id;\n    // console.log(\"Param\" +editServices);\n    const tempOrder = TempOrder.findOne({\"_id\":_id});\n    // console.log('tempOrder ', tempOrder);\n    const loading = !postHandle.ready();\n    \n    if(_id){\n      return {\n          loading,\n          tempOrder,\n      };\n    }\n})(PaymentGateway);\nexport default PaymentGatewayContainer;\n"]},"hash":"ad8f87ce92996a47df79e559e41b1002e8bbcf96"}

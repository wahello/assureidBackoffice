{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["Location"],"specifiers":[{"kind":"local","local":"Location","exported":"Location"}]}}},"options":{"filename":"imports/dashboard/forms/api/ManageLocation.js","filenameRelative":"imports/dashboard/forms/api/ManageLocation.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/api/ManageLocation.js.map","sourceFileName":"imports/dashboard/forms/api/ManageLocation.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ManageLocation"},"ignored":false,"code":"module.export({\n  Location: function () {\n    return Location;\n  }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Location = new Mongo.Collection(\"location\");\n\nif (Meteor.isServer) {\n  Meteor.publish('location', function () {\n    return Location.find({});\n  });\n  Meteor.publish('singleLocation', function (id) {\n    return Location.find({\n      \"_id\": id\n    });\n  });\n  Meteor.methods({\n    'addLocation': function (country, state, city, area, pinCode) {\n      Location.insert({\n        'country': country,\n        'state': state,\n        'city': city,\n        'area': area,\n        'pinCode': pinCode,\n        'createdAt': new Date()\n      });\n    },\n    'updateLocation': function (id, country, state, city, area, pinCode) {\n      Location.update({\n        \"_id\": id\n      }, {\n        $set: {\n          'country': country,\n          'state': state,\n          'city': city,\n          'area': area,\n          'pinCode': pinCode\n        }\n      });\n    },\n    'deleteLocation': function (id) {\n      Location.remove({\n        \"_id\": id\n      });\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/forms/api/ManageLocation.js"],"names":["module","export","Location","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","id","methods","country","state","city","area","pinCode","insert","Date","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,YAAS;AAAA,WAAIA,QAAJ;AAAA;AAAV,CAAd;AAAuC,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,OAAD,YAAOG,CAAP,EAAS;AAACH,YAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAGjH,IAAMJ,WAAW,IAAIC,MAAMK,UAAV,CAAqB,UAArB,CAAjB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AAChBF,SAAOG,OAAP,CAAe,UAAf,EAA0B,YAAI;AAC1B,WAAOR,SAASS,IAAT,CAAc,EAAd,CAAP;AACH,GAFD;AAGAJ,SAAOG,OAAP,CAAe,gBAAf,EAAgC,UAACE,EAAD,EAAM;AAClC,WAAOV,SAASS,IAAT,CAAc;AAAC,aAAMC;AAAP,KAAd,CAAP;AACH,GAFD;AAGDL,SAAOM,OAAP,CAAe;AACZ,mBAAc,UAASC,OAAT,EAAiBC,KAAjB,EAAuBC,IAAvB,EAA4BC,IAA5B,EAAiCC,OAAjC,EAAyC;AACtDhB,eAASiB,MAAT,CAAgB;AACZ,mBAAcL,OADF;AAEZ,iBAAcC,KAFF;AAGZ,gBAAcC,IAHF;AAIZ,gBAAcC,IAJF;AAKZ,mBAAcC,OALF;AAMZ,qBAAmB,IAAIE,IAAJ;AANP,OAAhB;AAQC,KAVU;AAWX,sBAAiB,UAASR,EAAT,EAAYE,OAAZ,EAAoBC,KAApB,EAA0BC,IAA1B,EAA+BC,IAA/B,EAAoCC,OAApC,EAA4C;AAC3DhB,eAASmB,MAAT,CAAgB;AAAC,eAAMT;AAAP,OAAhB,EACE;AAACU,cAAK;AACJ,qBAAcR,OADV;AAEJ,mBAAcC,KAFV;AAGJ,kBAAcC,IAHV;AAIJ,kBAAcC,IAJV;AAKJ,qBAAcC;AALV;AAAN,OADF;AAQD,KApBU;AAqBX,sBAAiB,UAASN,EAAT,EAAY;AAC3BV,eAASqB,MAAT,CAAgB;AAAC,eAAMX;AAAP,OAAhB;AACD;AAvBU,GAAf;AA0BD","file":"imports/dashboard/forms/api/ManageLocation.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const Location = new Mongo.Collection(\"location\");\n\nif(Meteor.isServer){\n   Meteor.publish('location',()=>{\n       return Location.find({});\n   });\n   Meteor.publish('singleLocation',(id)=>{\n       return Location.find({\"_id\":id});\n   });  \n\t Meteor.methods({\n\t \t \t'addLocation':function(country,state,city,area,pinCode){\n    \t\tLocation.insert({\n          'country'   : country,\n          'state'     : state,\n          'city'      : city,\n          'area'      : area,\n          'pinCode'   : pinCode,\n          'createdAt'      : new Date(),\n    \t\t}); \n      },\n      'updateLocation':function(id,country,state,city,area,pinCode){\n        Location.update({\"_id\":id},\n          {$set:{\n            'country'   : country,\n            'state'     : state,\n            'city'      : city,\n            'area'      : area,\n            'pinCode'   : pinCode,\n          }});\n      },\n      'deleteLocation':function(id){\n        Location.remove({\"_id\":id});\n      }\n\t });\n\n}\n"]},"hash":"dd49bcafebf493e5a24458af0652f833109184bc"}

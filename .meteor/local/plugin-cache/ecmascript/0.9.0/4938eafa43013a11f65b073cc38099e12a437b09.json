{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["TempTicketImages","TempTicketVideo"],"specifiers":[{"kind":"local","local":"TempTicketImages","exported":"TempTicketImages"},{"kind":"local","local":"TempTicketVideo","exported":"TempTicketVideo"}]}}},"options":{"filename":"imports/dashboard/ticketManagement/api/TempUpload.js","filenameRelative":"imports/dashboard/ticketManagement/api/TempUpload.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/api/TempUpload.js.map","sourceFileName":"imports/dashboard/ticketManagement/api/TempUpload.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TempUpload"},"ignored":false,"code":"module.export({\n  TempTicketImages: function () {\n    return TempTicketImages;\n  },\n  TempTicketVideo: function () {\n    return TempTicketVideo;\n  }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar TempTicketImages = new Mongo.Collection(\"tempTicketImages\");\nvar TempTicketVideo = new Mongo.Collection(\"tempTicketVideo\");\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    \"addNewTemporaryTicketImages\": function (id) {\n      var data = ServiceImage.findOne({\n        \"_id\": id\n      });\n      var imageLink = data.link();\n      TempTicketImages.insert({\n        \"userId\": Meteor.userId(),\n        \"imageLink\": imageLink,\n        \"createdAt\": new Date()\n      }, function (error, result) {});\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/ticketManagement/api/TempUpload.js"],"names":["module","export","TempTicketImages","TempTicketVideo","Mongo","watch","require","v","Meteor","Collection","isServer","methods","id","data","ServiceImage","findOne","imageLink","link","insert","userId","Date","error","result"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,oBAAiB;AAAA,WAAIA,gBAAJ;AAAA,GAAlB;AAAuCC,mBAAgB;AAAA,WAAIA,eAAJ;AAAA;AAAvD,CAAd;AAA2F,IAAIC,cAAJ;AAAUJ,OAAOK,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,OAAD,YAAOG,CAAP,EAAS;AAACH,YAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWR,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAGrK,IAAML,mBAAmB,IAAIE,MAAMK,UAAV,CAAqB,kBAArB,CAAzB;AACA,IAAMN,kBAAkB,IAAIC,MAAMK,UAAV,CAAqB,iBAArB,CAAxB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AACjBF,SAAOG,OAAP,CAAe;AACd,mCAA+B,UAAUC,EAAV,EAAc;AACxC,UAAIC,OAAOC,aAAaC,OAAb,CAAqB;AAAC,eAAQH;AAAT,OAArB,CAAX;AACA,UAAII,YAAYH,KAAKI,IAAL,EAAhB;AACEf,uBAAiBgB,MAAjB,CAAwB;AACxB,kBAAUV,OAAOW,MAAP,EADc;AAExB,qBAAYH,SAFY;AAGxB,qBAAY,IAAII,IAAJ;AAHY,OAAxB,EAIE,UAACC,KAAD,EAAQC,MAAR,EAAiB,CAEpB,CANC;AAOH;AAXU,GAAf;AAaD","file":"imports/dashboard/ticketManagement/api/TempUpload.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const TempTicketImages = new Mongo.Collection(\"tempTicketImages\");\nexport const TempTicketVideo = new Mongo.Collection(\"tempTicketVideo\");\n\nif(Meteor.isServer){\n\t Meteor.methods({\n\t\t \"addNewTemporaryTicketImages\": function (id) {\n        var data = ServiceImage.findOne({\"_id\" : id});\n        var imageLink = data.link();\n          TempTicketImages.insert({\n          \"userId\": Meteor.userId(),\n          \"imageLink\":imageLink,\n          \"createdAt\":new Date(),\n          },(error, result)=>{\n\n        });\n      }, \n   });\n}"]},"hash":"4938eafa43013a11f65b073cc38099e12a437b09"}

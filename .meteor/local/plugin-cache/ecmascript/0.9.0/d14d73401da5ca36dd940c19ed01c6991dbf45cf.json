{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"../api/QualificationLevel.js","imported":["QualificationLevel"],"specifiers":[{"kind":"named","imported":"QualificationLevel","local":"QualificationLevel"}]},{"source":"./ListOfQualificationLevel.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ListOfQualificationLevel"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/forms/Qualification/AddQualificationLevel.jsx","filenameRelative":"imports/dashboard/forms/Qualification/AddQualificationLevel.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/Qualification/AddQualificationLevel.jsx.map","sourceFileName":"imports/dashboard/forms/Qualification/AddQualificationLevel.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AddQualificationLevel"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet QualificationLevel;\nmodule.watch(require(\"../api/QualificationLevel.js\"), {\n  QualificationLevel(v) {\n    QualificationLevel = v;\n  }\n\n}, 3);\nlet ListOfQualificationLevel;\nmodule.watch(require(\"./ListOfQualificationLevel.jsx\"), {\n  default(v) {\n    ListOfQualificationLevel = v;\n  }\n\n}, 4);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 5);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n  browserHistory(v) {\n    browserHistory = v;\n  }\n\n}, 6);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n  Link(v) {\n    Link = v;\n  }\n\n}, 7);\n\nclass AddQualificationLevel extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);\n    this.state = {\n      QualificationLevelTitle: '',\n      \"subscription\": {\n        \"qualificationLevel\": Meteor.subscribe(\"qualificationLevel\"),\n        \"singlequalificationLevel\": Meteor.subscribe(\"singlequalificationLevel\")\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      if (nextProps.qualificationLevel) {\n        this.setState({\n          QualificationLevelTitle: nextProps.qualificationLevel.QualificationLevelTitle,\n          id: nextProps.qualificationLevel._id,\n          button: nextProps.button\n        });\n      }\n    } else {\n      this.setState({\n        QualificationLevelTitle: '',\n        id: '',\n        button: ''\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    $(\"html,body\").scrollTop(0);\n\n    if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      $(\"body\").append(adminLte);\n    }\n  }\n\n  componentWillMount() {// if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n    //   var dashboardCss = document.createElement(\"link\");\n    //   dashboardCss.type = \"text/css\"; \n    //   dashboardCss.rel = \"stylesheet\";\n    //   dashboardCss.href = \"/css/dashboard.css\"; \n    //   document.head.append(dashboardCss);\n    // }\n  }\n\n  componentWillUnmount() {\n    $(\"script[src='/js/adminLte.js']\").remove(); // $(\"link[href='/css/dashboard.css']\").remove(); \n  }\n\n  uppercase(str) {\n    var array1 = str.split(' ');\n    var newarray1 = [];\n\n    for (var x = 0; x < array1.length; x++) {\n      newarray1.push(array1[x].charAt(0).toUpperCase() + array1[x].slice(1));\n    }\n\n    return newarray1.join(' ');\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var QualificationLevelTitle = this.uppercase(this.refs.QualificationLevelTitle.value);\n    var id = this.props.params.id;\n\n    if (id) {\n      Meteor.call('updateQualificationLevel', id, QualificationLevelTitle, (error, result) => {\n        if (error) {\n          console.log(error.reason);\n        } else {\n          swal(\"Done\", \"Your Qualification Title has been Updated!.\", \"success\");\n          var path = \"/admin/Qualification\";\n          browserHistory.replace(path);\n          $(\".QualificationLevelTitle\").val(\"\");\n        }\n      });\n    } else {\n      Meteor.call('createQualificationLevel', QualificationLevelTitle, (error, result) => {\n        if (error) {\n          console.log(error.reason);\n        } else {\n          swal(\"Done\", \"Your Qualification Title has been Created!.\", \"success\");\n          $(\".QualificationLevelTitle\").val(\"\");\n        }\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"content-wrapper\"\n      },\n      React.createElement(\n        \"section\",\n        {\n          className: \"content-header\"\n        },\n        React.createElement(\n          \"h1\",\n          null,\n          \" Master Data \"\n        ),\n        React.createElement(\n          \"ol\",\n          {\n            className: \"breadcrumb\"\n          },\n          React.createElement(\n            \"li\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: \"#\"\n              },\n              React.createElement(\"i\", {\n                className: \"fa fa-newspaper-o\"\n              }),\n              \"Master Data\"\n            )\n          ),\n          React.createElement(\n            \"li\",\n            {\n              className: \"active\"\n            },\n            \"Manage Qualification\"\n          )\n        )\n      ),\n      React.createElement(\n        \"section\",\n        {\n          className: \"content\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"box box-primary\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box-header with-border\"\n                },\n                React.createElement(\n                  \"h2\",\n                  {\n                    className: \"box-title\"\n                  },\n                  \"Qualification\"\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box-body \"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"col-lg-12 col-sm-12 col-xs-12 col-md-12\"\n                  },\n                  React.createElement(\n                    \"form\",\n                    {\n                      id: \"\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"notifWrapper col-lg-12 col-md-8 col-sm-12 col-xs-12\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12 \"\n                        },\n                        React.createElement(\n                          \"span\",\n                          {\n                            className: \"blocking-span\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"floating-label\"\n                            },\n                            \"Title\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            className: \"form-control inputText QualificationLevelTitle\",\n                            ref: \"QualificationLevelTitle\",\n                            id: \"QualificationLevelTitle\",\n                            value: this.state.QualificationLevelTitle,\n                            name: \"QualificationLevelTitle\",\n                            onChange: this.handleChange,\n                            required: true\n                          })\n                        )\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12 \"\n                        },\n                        React.createElement(\n                          \"button\",\n                          {\n                            className: \"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\",\n                            type: \"submit\",\n                            value: \"\",\n                            onClick: this.handleSubmit.bind(this)\n                          },\n                          this.state.button\n                        )\n                      )\n                    )\n                  )\n                ),\n                React.createElement(ListOfQualificationLevel, null)\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditPageContainer = withTracker(({\n  params\n}) => {\n  var _id = params.id;\n  const postHandle = Meteor.subscribe('singlequalificationLevel', _id); // var editServices   = this.props.params.id;\n  // console.log(\"Param\" +editServices);\n\n  const qualificationLevel = QualificationLevel.findOne({\n    \"_id\": _id\n  }) || {};\n  const loading = !postHandle.ready();\n\n  if (_id) {\n    var button = \"UPDATE\";\n    return {\n      loading,\n      qualificationLevel,\n      button\n    };\n  } else {\n    var button = \"ADD\";\n    return {\n      loading,\n      qualificationLevel,\n      button\n    };\n  }\n})(AddQualificationLevel);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/forms/Qualification/AddQualificationLevel.jsx"],"names":["React","Component","module","watch","require","default","v","render","TrackerReact","QualificationLevel","ListOfQualificationLevel","withTracker","browserHistory","Link","AddQualificationLevel","constructor","props","state","QualificationLevelTitle","Meteor","subscribe","handleChange","bind","componentWillReceiveProps","nextProps","loading","qualificationLevel","setState","id","_id","button","componentDidMount","$","scrollTop","length","hasClass","adminLte","document","createElement","type","src","append","componentWillMount","componentWillUnmount","remove","uppercase","str","array1","split","newarray1","x","push","charAt","toUpperCase","slice","join","handleSubmit","e","preventDefault","refs","value","params","call","error","result","console","log","reason","swal","path","replace","val","event","target","name","EditPageContainer","postHandle","findOne","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/forms/Qualification/AddQualificationLevel.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { QualificationLevel } from '../api/QualificationLevel.js';\nimport  ListOfQualificationLevel  from './ListOfQualificationLevel.jsx';\n// import { createContainer } from 'meteor/react-meteor-data';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport {browserHistory} from 'react-router';\nimport { Link } from 'react-router';\n\n\nclass AddQualificationLevel extends TrackerReact(Component) {\n  constructor(props) {\n    super(props); \n   \n    this.state = {\n      QualificationLevelTitle : '',\n      \"subscription\"  : {\n        \"qualificationLevel\" : Meteor.subscribe(\"qualificationLevel\"),\n        \"singlequalificationLevel\" : Meteor.subscribe(\"singlequalificationLevel\"),\n\n      }  \n    }; \n     this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.qualificationLevel){\n         this.setState({\n             QualificationLevelTitle  : nextProps.qualificationLevel.QualificationLevelTitle,\n             id                  : nextProps.qualificationLevel._id,\n             button              : nextProps.button,\n         });\n      }\n    }else{\n      this.setState({\n             QualificationLevelTitle  : '',\n             id                  : '',\n             button              : '',\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    $(\"html,body\").scrollTop(0);\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n     var adminLte = document.createElement(\"script\");  \n     adminLte.type=\"text/javascript\";  \n     adminLte.src = \"/js/adminLte.js\";  \n     $(\"body\").append(adminLte);  \n    }\n  }\n componentWillMount() {\n  // if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n  //   var dashboardCss = document.createElement(\"link\");\n  //   dashboardCss.type = \"text/css\"; \n  //   dashboardCss.rel = \"stylesheet\";\n  //   dashboardCss.href = \"/css/dashboard.css\"; \n  //   document.head.append(dashboardCss);\n  // }\n}\n componentWillUnmount(){  \n   $(\"script[src='/js/adminLte.js']\").remove(); \n   // $(\"link[href='/css/dashboard.css']\").remove(); \n }\n uppercase(str){\n    var array1 = str.split(' ');\n    var newarray1 = [];\n      \n    for(var x = 0; x < array1.length; x++){\n        newarray1.push(array1[x].charAt(0).toUpperCase()+array1[x].slice(1));\n    } \n   return newarray1.join(' ');\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    var QualificationLevelTitle  = this.uppercase(this.refs.QualificationLevelTitle.value);\n    var id = this.props.params.id;\n    if(id){\n      Meteor.call('updateQualificationLevel',id,QualificationLevelTitle,(error,result)=>{\n        if(error){ \n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"Your Qualification Title has been Updated!.\",\"success\");  \n          var path = \"/admin/Qualification\";\n          browserHistory.replace(path);\n          $(\".QualificationLevelTitle\").val(\"\");\n        }            \n      });\n    }else{\n      Meteor.call('createQualificationLevel',QualificationLevelTitle,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"Your Qualification Title has been Created!.\",\"success\");  \n          $(\".QualificationLevelTitle\").val(\"\");\n        }            \n      });  \n    }\n        \n  }\n   handleChange(event){\n     const target = event.target;\n     const name   = target.name; \n     this.setState({\n      [name]: event.target.value, \n     });\n   }\n  \n\t\trender() { \n       return (\n        <div className=\"content-wrapper\">\n           <section className=\"content-header\">\n            <h1> Master Data </h1>\n            <ol className=\"breadcrumb\">\n              <li>\n                <a href=\"#\"><i className=\"fa fa-newspaper-o\" />Master Data</a></li>\n              <li className=\"active\">Manage Qualification</li>\n            </ol>\n          </section>\n           <section className=\"content\">\n             <div className=\"row\">\n               <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                 <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                     <h2 className=\"box-title\">Qualification</h2>  \n                    </div>\n                    <div className=\"box-body \">\n                      <div className=\"col-lg-12 col-sm-12 col-xs-12 col-md-12\">\n                        <form id=\"\">\n                          <div className=\"notifWrapper col-lg-12 col-md-8 col-sm-12 col-xs-12\">\n                            <div className=\"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12 \">\n                              <span className=\"blocking-span\">\n                                  <label className=\"floating-label\">Title</label>\n                                  <input type=\"text\" className=\"form-control inputText QualificationLevelTitle\" ref=\"QualificationLevelTitle\" id=\"QualificationLevelTitle\" value={this.state.QualificationLevelTitle} name=\"QualificationLevelTitle\" onChange={this.handleChange} required />\n                              </span>\n                            </div>\n                            <div className=\"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12 \">\n                              <button className=\"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\" type=\"submit\" value=\"\" onClick={this.handleSubmit.bind(this)}>{this.state.button}</button>\n                            </div> \n                          </div> \n                        </form>\n                      </div>  \n                      <ListOfQualificationLevel />\n                    </div>\n                 </div>\n                </div>\n             </div>\n           </section>\n        </div>\n        );\n  }  \n\n}\n\nEditPageContainer = withTracker(({params}) => {\n    var _id          = params.id;\n    const postHandle = Meteor.subscribe('singlequalificationLevel',_id);\n    // var editServices   = this.props.params.id;\n    // console.log(\"Param\" +editServices);\n    const qualificationLevel  = QualificationLevel.findOne({\"_id\":_id})|| {};\n    const loading    = !postHandle.ready();\n    \n    if(_id){\n      var button = \"UPDATE\";\n      return {\n          loading,\n          qualificationLevel,\n          button,\n      };\n    }else{ \n       var button = \"ADD\"; \n      return {\n          loading,\n          qualificationLevel,\n          button\n      };\n    }\n})(AddQualificationLevel);\n\nexport default EditPageContainer;\n\n\n\n\n\n\n\n"]},"hash":"d14d73401da5ca36dd940c19ed01c6991dbf45cf"}

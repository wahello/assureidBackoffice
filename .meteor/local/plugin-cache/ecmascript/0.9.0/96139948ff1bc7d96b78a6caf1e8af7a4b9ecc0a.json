{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["fixJSONParse","fixJSONStringify","formatFleURL"],"specifiers":[{"kind":"local","local":"fixJSONParse","exported":"fixJSONParse"},{"kind":"local","local":"fixJSONStringify","exported":"fixJSONStringify"},{"kind":"local","local":"formatFleURL","exported":"formatFleURL"}]}}},"options":{"filename":"packages/ostrio:files/lib.js","filenameRelative":"packages/ostrio:files/lib.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ostrio:files/lib.js.map","sourceFileName":"packages/ostrio:files/lib.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"lib"},"ignored":false,"code":"module.export({\n  fixJSONParse: () => fixJSONParse,\n  fixJSONStringify: () => fixJSONStringify,\n  formatFleURL: () => formatFleURL\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\n/*\n * @const {Function} fixJSONParse - Fix issue with Date parse\n */const fixJSONParse = function (obj) {\n  for (let key in obj) {\n    if (_.isString(obj[key]) && !!~obj[key].indexOf('=--JSON-DATE--=')) {\n      obj[key] = obj[key].replace('=--JSON-DATE--=', '');\n      obj[key] = new Date(parseInt(obj[key]));\n    } else if (_.isObject(obj[key])) {\n      obj[key] = fixJSONParse(obj[key]);\n    } else if (_.isArray(obj[key])) {\n      let v;\n\n      for (let i = 0; i < obj[key].length; i++) {\n        v = obj[key][i];\n\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONParse(v);\n        } else if (_.isString(v) && !!~v.indexOf('=--JSON-DATE--=')) {\n          v = v.replace('=--JSON-DATE--=', '');\n          obj[key][i] = new Date(parseInt(v));\n        }\n      }\n    }\n  }\n\n  return obj;\n}; /*\n    * @const {Function} fixJSONStringify - Fix issue with Date stringify\n    */\n\nconst fixJSONStringify = function (obj) {\n  for (let key in obj) {\n    if (_.isDate(obj[key])) {\n      obj[key] = `=--JSON-DATE--=${+obj[key]}`;\n    } else if (_.isObject(obj[key])) {\n      obj[key] = fixJSONStringify(obj[key]);\n    } else if (_.isArray(obj[key])) {\n      let v;\n\n      for (let i = 0; i < obj[key].length; i++) {\n        v = obj[key][i];\n\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONStringify(v);\n        } else if (_.isDate(v)) {\n          obj[key][i] = `=--JSON-DATE--=${+v}`;\n        }\n      }\n    }\n  }\n\n  return obj;\n}; /*\n    * @locus Anywhere\n    * @private\n    * @name formatFleURL\n    * @param {Object} fileRef - File reference object\n    * @param {String} version - [Optional] Version of file you would like build URL for\n    * @summary Returns formatted URL for file\n    * @returns {String} Downloadable link\n    */\n\nconst formatFleURL = (fileRef, version = 'original') => {\n  let ext;\n  check(fileRef, Object);\n  check(version, String);\n\n  const _root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '');\n\n  const vRef = fileRef.versions && fileRef.versions[version] || fileRef;\n\n  if (vRef.extension && _.isString(vRef, 'extension')) {\n    ext = `.${vRef.extension.replace(/^\\./, '')}`;\n  } else {\n    ext = '';\n  }\n\n  if (fileRef.public === true) {\n    return _root + (version === 'original' ? `${fileRef._downloadRoute}/${fileRef._id}${ext}` : `${fileRef._downloadRoute}/${version}-${fileRef._id}${ext}`);\n  }\n\n  return _root + `${fileRef._downloadRoute}/${fileRef._collectionName}/${fileRef._id}/${version}/${fileRef._id}${ext}`;\n};","map":{"version":3,"sources":["packages/ostrio:files/lib.js"],"names":["module","export","fixJSONParse","fixJSONStringify","formatFleURL","_","watch","require","v","check","obj","key","isString","indexOf","replace","Date","parseInt","isObject","isArray","i","length","isDate","fileRef","version","ext","Object","String","_root","__meteor_runtime_config__","ROOT_URL","vRef","versions","extension","public","_downloadRoute","_id","_collectionName"],"mappings":"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","file":"packages/ostrio:files/lib.js.map","sourcesContent":["import { _ }     from 'meteor/underscore';\nimport { check } from 'meteor/check';\n\n/*\n * @const {Function} fixJSONParse - Fix issue with Date parse\n */\nconst fixJSONParse = function(obj) {\n  for (let key in obj) {\n    if (_.isString(obj[key]) && !!~obj[key].indexOf('=--JSON-DATE--=')) {\n      obj[key] = obj[key].replace('=--JSON-DATE--=', '');\n      obj[key] = new Date(parseInt(obj[key]));\n    } else if (_.isObject(obj[key])) {\n      obj[key] = fixJSONParse(obj[key]);\n    } else if (_.isArray(obj[key])) {\n      let v;\n      for (let i = 0; i < obj[key].length; i++) {\n        v = obj[key][i];\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONParse(v);\n        } else if (_.isString(v) && !!~v.indexOf('=--JSON-DATE--=')) {\n          v = v.replace('=--JSON-DATE--=', '');\n          obj[key][i] = new Date(parseInt(v));\n        }\n      }\n    }\n  }\n  return obj;\n};\n\n/*\n * @const {Function} fixJSONStringify - Fix issue with Date stringify\n */\nconst fixJSONStringify = function(obj) {\n  for (let key in obj) {\n    if (_.isDate(obj[key])) {\n      obj[key] = `=--JSON-DATE--=${+obj[key]}`;\n    } else if (_.isObject(obj[key])) {\n      obj[key] = fixJSONStringify(obj[key]);\n    } else if (_.isArray(obj[key])) {\n      let v;\n      for (let i = 0; i < obj[key].length; i++) {\n        v = obj[key][i];\n        if (_.isObject(v)) {\n          obj[key][i] = fixJSONStringify(v);\n        } else if (_.isDate(v)) {\n          obj[key][i] = `=--JSON-DATE--=${+v}`;\n        }\n      }\n    }\n  }\n  return obj;\n};\n\n/*\n * @locus Anywhere\n * @private\n * @name formatFleURL\n * @param {Object} fileRef - File reference object\n * @param {String} version - [Optional] Version of file you would like build URL for\n * @summary Returns formatted URL for file\n * @returns {String} Downloadable link\n */\nconst formatFleURL = (fileRef, version = 'original') => {\n  let ext;\n  check(fileRef, Object);\n  check(version, String);\n\n  const _root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '');\n  const vRef = ((fileRef.versions && fileRef.versions[version]) || fileRef);\n\n  if (vRef.extension && _.isString(vRef, 'extension')) {\n    ext = `.${vRef.extension.replace(/^\\./, '')}`;\n  } else {\n    ext = '';\n  }\n\n  if (fileRef.public === true) {\n    return _root + (version === 'original' ? `${fileRef._downloadRoute}/${fileRef._id}${ext}` : `${fileRef._downloadRoute}/${version}-${fileRef._id}${ext}`);\n  }\n  return _root + `${fileRef._downloadRoute}/${fileRef._collectionName}/${fileRef._id}/${version}/${fileRef._id}${ext}`;\n};\n\nexport { fixJSONParse, fixJSONStringify, formatFleURL };\n"]},"hash":"96139948ff1bc7d96b78a6caf1e8af7a4b9ecc0a"}

{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["CareerPages"],"specifiers":[{"kind":"local","local":"CareerPages","exported":"CareerPages"}]}}},"options":{"filename":"imports/dashboard/reactCMS/api/CareerPages.js","filenameRelative":"imports/dashboard/reactCMS/api/CareerPages.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/api/CareerPages.js.map","sourceFileName":"imports/dashboard/reactCMS/api/CareerPages.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"CareerPages"},"ignored":false,"code":"module.export({\n      CareerPages: function () {\n            return CareerPages;\n      }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n      Mongo: function (v) {\n            Mongo = v;\n      }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n      Meteor: function (v) {\n            Meteor = v;\n      }\n}, 1);\nvar CareerPages = new Mongo.Collection(\"careerPages\");\n\nif (Meteor.isServer) {\n      Meteor.publish('careerPages', function () {\n            return CareerPages.find({});\n      });\n      Meteor.methods({\n            'createCareerPage': function (jobTitle, jobPosition, jobLocation, jobSkills, jobValidUpTo, jobSalary, jobQualification, jobDescription, userId, updateTimestamp) {\n                  CareerPages.insert({\n                        'careerPageTitle': jobTitle,\n                        'careerPagePosition': jobPosition,\n                        'careerPageLocation': jobLocation,\n                        'careerPageSkills': jobSkills,\n                        'careerPageValidUpTo': jobValidUpTo,\n                        'careerPageSalary': jobSalary,\n                        'careerPageDescription': jobDescription,\n                        'careerPageQualification': jobQualification,\n                        'createdAt': new Date(),\n                        'authorUserId': userId,\n                        'lastModified': updateTimestamp\n                  });\n            },\n            'updateCareerPage': function (id, jobTitle, jobPosition, jobLocation, jobSkills, jobValidUpTo, jobSalary, jobQualification, jobDescription, userId, updateTimestamp) {\n                  console.log(\"update server method\");\n                  console.log(id);\n                  CareerPages.update({\n                        '_id': id\n                  }, {\n                        $set: {\n                              'careerPageTitle': jobTitle,\n                              'careerPagePosition': jobPosition,\n                              'careerPageLocation': jobLocation,\n                              'careerPageSkills': jobSkills,\n                              'careerPageValidUpTo': jobValidUpTo,\n                              'careerPageSalary': jobSalary,\n                              'careerPageDescription': jobDescription,\n                              'careerPageQualification': jobQualification,\n                              'authorUserId': userId,\n                              'lastModified': updateTimestamp //End of set\n\n                        }\n                  });\n            },\n            'deleteCareerPage': function (id) {\n                  CareerPages.remove({\n                        '_id': id\n                  });\n            }\n      });\n}","map":{"version":3,"sources":["imports/dashboard/reactCMS/api/CareerPages.js"],"names":["module","export","CareerPages","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","methods","jobTitle","jobPosition","jobLocation","jobSkills","jobValidUpTo","jobSalary","jobQualification","jobDescription","userId","updateTimestamp","insert","Date","id","console","log","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,mBAAY;AAAA,mBAAIA,WAAJ;AAAA;AAAb,CAAd;AAA6C,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,WAAD,YAAOG,CAAP,EAAS;AAACH,oBAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,YAAD,YAAQD,CAAR,EAAU;AAACC,qBAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAGvH,IAAMJ,cAAc,IAAIC,MAAMK,UAAV,CAAqB,aAArB,CAApB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AACfF,aAAOG,OAAP,CAAe,aAAf,EAA6B,YAAI;AAC7B,mBAAOR,YAAYS,IAAZ,CAAiB,EAAjB,CAAP;AACH,OAFD;AAIAJ,aAAOK,OAAP,CAAe;AACd,gCAAmB,UAASC,QAAT,EAAkBC,WAAlB,EAA8BC,WAA9B,EAA0CC,SAA1C,EAAoDC,YAApD,EAAiEC,SAAjE,EAA2EC,gBAA3E,EAA4FC,cAA5F,EAA2GC,MAA3G,EAAkHC,eAAlH,EAAkI;AAEpJpB,8BAAYqB,MAAZ,CAAmB;AAClB,2CAA4BV,QADV;AAElB,8CAA4BC,WAFV;AAGlB,8CAA4BC,WAHV;AAIf,4CAA4BC,SAJb;AAKf,+CAA4BC,YALb;AAMf,4CAA4BC,SANb;AAOf,iDAA4BE,cAPb;AAQf,mDAA4BD,gBARb;AASlB,qCAA4B,IAAIK,IAAJ,EATV;AAUf,wCAA4BH,MAVb;AAWf,wCAA4BC;AAXb,mBAAnB;AAaA,aAhBa;AAiBb,gCAAmB,UAASG,EAAT,EAAYZ,QAAZ,EAAqBC,WAArB,EAAiCC,WAAjC,EAA6CC,SAA7C,EAAuDC,YAAvD,EAAoEC,SAApE,EAA8EC,gBAA9E,EAA+FC,cAA/F,EAA8GC,MAA9G,EAAqHC,eAArH,EAAqI;AACtJI,0BAAQC,GAAR,CAAY,sBAAZ;AACAD,0BAAQC,GAAR,CAAYF,EAAZ;AACFvB,8BAAY0B,MAAZ,CACC;AAAE,+BAAOH;AAAT,mBADD,EAEO;AACEI,8BAAK;AACF,iDAA4BhB,QAD1B;AAEL,oDAA4BC,WAFvB;AAGL,oDAA4BC,WAHvB;AAIF,kDAA4BC,SAJ1B;AAKF,qDAA4BC,YAL1B;AAMF,kDAA4BC,SAN1B;AAOF,uDAA4BE,cAP1B;AAQF,yDAA4BD,gBAR1B;AASF,8CAAmBE,MATjB;AAUF,8CAAmBC,eAVjB,CAWL;;AAXK;AADP,mBAFP;AAiBA,aArCa;AAsCb,gCAAmB,UAASG,EAAT,EAAY;AAC7BvB,8BAAY4B,MAAZ,CAAmB;AAAC,+BAAOL;AAAR,mBAAnB;AAEF;AAzCa,OAAf;AA2CH","file":"imports/dashboard/reactCMS/api/CareerPages.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const CareerPages = new Mongo.Collection(\"careerPages\");\n\nif(Meteor.isServer){\n    Meteor.publish('careerPages',()=>{\n        return CareerPages.find({});\n    });\n\n    Meteor.methods({\n    \t'createCareerPage':function(jobTitle,jobPosition,jobLocation,jobSkills,jobValidUpTo,jobSalary,jobQualification,jobDescription,userId,updateTimestamp){\n\n    \t\tCareerPages.insert({\n    \t\t\t'careerPageTitle'         : jobTitle,\n    \t\t\t'careerPagePosition'      : jobPosition,\n    \t\t\t'careerPageLocation'      : jobLocation,\n          'careerPageSkills'        : jobSkills,\n          'careerPageValidUpTo'     : jobValidUpTo,\n          'careerPageSalary'        : jobSalary,\n          'careerPageDescription'   : jobDescription,\n          'careerPageQualification' : jobQualification,\n    \t\t\t'createdAt'               : new Date(),\n          'authorUserId'            : userId,\n          'lastModified'            : updateTimestamp,\n    \t\t});\n    \t},\n      'updateCareerPage':function(id,jobTitle,jobPosition,jobLocation,jobSkills,jobValidUpTo,jobSalary,jobQualification,jobDescription,userId,updateTimestamp){\n        console.log(\"update server method\");\n        console.log(id);\n    \t\tCareerPages.update(\n    \t\t\t{ '_id': id },\n    \t        {\n    \t          $set:{\n                  'careerPageTitle'         : jobTitle,\n            \t\t\t'careerPagePosition'      : jobPosition,\n            \t\t\t'careerPageLocation'      : jobLocation,\n                  'careerPageSkills'        : jobSkills,\n                  'careerPageValidUpTo'     : jobValidUpTo,\n                  'careerPageSalary'        : jobSalary,\n                  'careerPageDescription'   : jobDescription,\n                  'careerPageQualification' : jobQualification,\n                  'authorUserId'   : userId,\n                  'lastModified'   : updateTimestamp,\n    \t        } //End of set\n    \t      }\n    \t\t);\n    \t},\n      'deleteCareerPage':function(id){\n     \t\t CareerPages.remove({'_id': id});\n\n    \t},\n    });\n}\n"]},"hash":"286bb99d2745450e028da79f185a9ed22f86a18c"}

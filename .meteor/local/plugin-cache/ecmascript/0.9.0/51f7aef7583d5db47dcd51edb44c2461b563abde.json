{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["University"],"specifiers":[{"kind":"local","local":"University","exported":"University"}]}}},"options":{"filename":"imports/dashboard/forms/api/University.js","filenameRelative":"imports/dashboard/forms/api/University.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/api/University.js.map","sourceFileName":"imports/dashboard/forms/api/University.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"University"},"ignored":false,"code":"module.export({\n  University: () => University\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst University = new Mongo.Collection(\"university\");\n\nif (Meteor.isServer) {\n  Meteor.publish('university', () => {\n    return University.find({});\n  });\n  Meteor.publish('singleuniversity', id => {\n    return University.find({\n      \"_id\": id\n    });\n  });\n  Meteor.methods({\n    'createUniversity': function (UniversityName, UniversityStatus) {\n      University.insert({\n        'UniversityName': UniversityName,\n        'UniversityStatus': UniversityStatus,\n        'createdAt': new Date()\n      });\n    },\n    'updateUniversity': function (id, UniversityName, UniversityStatus) {\n      University.update({\n        \"_id\": id\n      }, {\n        $set: {\n          'UniversityName': UniversityName,\n          'UniversityStatus': UniversityStatus\n        }\n      });\n    },\n    'deleteUniversity': function (id) {\n      University.remove({\n        \"_id\": id\n      });\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/forms/api/University.js"],"names":["module","export","University","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","id","methods","UniversityName","UniversityStatus","insert","Date","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW,MAAIA;AAAhB,CAAd;AAA2C,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAGrH,MAAMJ,aAAa,IAAIC,MAAMK,UAAV,CAAqB,YAArB,CAAnB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AAChBF,SAAOG,OAAP,CAAe,YAAf,EAA4B,MAAI;AAC5B,WAAOR,WAAWS,IAAX,CAAgB,EAAhB,CAAP;AACH,GAFD;AAGAJ,SAAOG,OAAP,CAAe,kBAAf,EAAmCE,EAAD,IAAM;AACpC,WAAOV,WAAWS,IAAX,CAAgB;AAAC,aAAMC;AAAP,KAAhB,CAAP;AACH,GAFD;AAIDL,SAAOM,OAAP,CAAe;AACZ,wBAAmB,UAASC,cAAT,EAAwBC,gBAAxB,EAAyC;AAC3Db,iBAAWc,MAAX,CAAkB;AACd,0BAAmBF,cADL;AAEd,4BAAqBC,gBAFP;AAGd,qBAAoB,IAAIE,IAAJ;AAHN,OAAlB;AAKC,KAPU;AAQX,wBAAmB,UAASL,EAAT,EAAYE,cAAZ,EAA2BC,gBAA3B,EAA4C;AAC7Db,iBAAWgB,MAAX,CAAkB;AAAC,eAAMN;AAAP,OAAlB,EAA6B;AAACO,cAAK;AAAC,4BAAoBL,cAArB;AAAoC,8BAAsBC;AAA1D;AAAN,OAA7B;AACD,KAVU;AAWX,wBAAmB,UAASH,EAAT,EAAY;AAC7BV,iBAAWkB,MAAX,CAAkB;AAAC,eAAMR;AAAP,OAAlB;AACD;AAbU,GAAf;AAgBD","file":"imports/dashboard/forms/api/University.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const University = new Mongo.Collection(\"university\");\n\nif(Meteor.isServer){\n   Meteor.publish('university',()=>{\n       return University.find({});\n   });\n   Meteor.publish('singleuniversity',(id)=>{\n       return University.find({\"_id\":id});\n   });   \n\n\t Meteor.methods({\n\t \t \t'createUniversity':function(UniversityName,UniversityStatus){\n    \t\tUniversity.insert({\n          'UniversityName' : UniversityName,\n          'UniversityStatus' : UniversityStatus,\n          'createdAt'       : new Date(),\n    \t\t});  \n      },\n      'updateUniversity':function(id,UniversityName,UniversityStatus){\n        University.update({\"_id\":id},{$set:{'UniversityName'  : UniversityName,'UniversityStatus'  : UniversityStatus}});\n      },\n      'deleteUniversity':function(id){\n        University.remove({\"_id\":id});\n      }\n\t });\n\n}\n"]},"hash":"51f7aef7583d5db47dcd51edb44c2461b563abde"}

{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"meteor/http","imported":["HTTP"],"specifiers":[{"kind":"named","imported":"HTTP","local":"HTTP"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/random","imported":["Random"],"specifiers":[{"kind":"named","imported":"Random","local":"Random"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"eventemitter3","imported":["EventEmitter"],"specifiers":[{"kind":"named","imported":"EventEmitter","local":"EventEmitter"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"./lib.js","imported":["fixJSONParse","fixJSONStringify"],"specifiers":[{"kind":"named","imported":"fixJSONParse","local":"fixJSONParse"},{"kind":"named","imported":"fixJSONStringify","local":"fixJSONStringify"}]}],"exports":{"exported":["UploadInstance","FileUpload"],"specifiers":[{"kind":"local","local":"UploadInstance","exported":"UploadInstance"},{"kind":"local","local":"FileUpload","exported":"FileUpload"}]}}},"options":{"filename":"packages/ostrio:files/upload.js","filenameRelative":"packages/ostrio:files/upload.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ostrio:files/upload.js.map","sourceFileName":"packages/ostrio:files/upload.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"upload"},"ignored":false,"code":"module.export({\n  UploadInstance: () => UploadInstance,\n  FileUpload: () => FileUpload\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.watch(require(\"meteor/http\"), {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 4);\nlet ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 5);\nlet EventEmitter;\nmodule.watch(require(\"eventemitter3\"), {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 6);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 7);\nlet fixJSONParse, fixJSONStringify;\nmodule.watch(require(\"./lib.js\"), {\n  fixJSONParse(v) {\n    fixJSONParse = v;\n  },\n\n  fixJSONStringify(v) {\n    fixJSONStringify = v;\n  }\n\n}, 8);\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); /*\n                                                                              * @locus Client\n                                                                              * @name UploadInstance\n                                                                              * @class UploadInstance\n                                                                              * @summary Internal Class, used for file upload\n                                                                              */\n\nclass UploadInstance extends EventEmitter {\n  constructor(config, collection) {\n    super();\n    this.config = config;\n    this.collection = collection;\n\n    this.collection._debug('[FilesCollection] [insert()]');\n\n    if (!this.config.ddp) {\n      this.config.ddp = this.collection.ddp;\n    }\n\n    if (!this.config.meta) {\n      this.config.meta = {};\n    }\n\n    if (!this.config.streams) {\n      this.config.streams = 2;\n    }\n\n    if (this.config.streams < 1) {\n      this.config.streams = 2;\n    }\n\n    if (!_.isString(this.config.transport)) {\n      this.config.transport = 'ddp';\n    }\n\n    this.config.transport = this.config.transport.toLowerCase();\n\n    if (this.config.transport !== 'ddp' && this.config.transport !== 'http') {\n      this.config.transport = 'ddp';\n    }\n\n    if (!this.config.chunkSize) {\n      this.config.chunkSize = this.collection.chunkSize;\n    }\n\n    if (!_.isBoolean(this.config.allowWebWorkers)) {\n      this.config.allowWebWorkers = true;\n    }\n\n    check(this.config, {\n      ddp: Match.Any,\n      file: Match.Any,\n      meta: Match.Optional(Object),\n      type: Match.Optional(String),\n      onError: Match.Optional(Function),\n      onAbort: Match.Optional(Function),\n      streams: Match.OneOf('dynamic', Number),\n      onStart: Match.Optional(Function),\n      fileName: Match.Optional(String),\n      isBase64: Match.Optional(Boolean),\n      transport: Match.OneOf('http', 'ddp'),\n      chunkSize: Match.OneOf('dynamic', Number),\n      onUploaded: Match.Optional(Function),\n      onProgress: Match.Optional(Function),\n      onBeforeUpload: Match.Optional(Function),\n      allowWebWorkers: Boolean\n    });\n\n    if (this.config.isBase64 === true) {\n      check(this.config.file, String);\n\n      if (!this.config.fileName) {\n        throw new Meteor.Error(400, '\"fileName\" must me specified for base64 upload!');\n      }\n\n      if (!!~this.config.file.indexOf('data:')) {\n        this.config.file = this.config.file.replace('data:', '');\n      }\n\n      if (!!~this.config.file.indexOf(',')) {\n        const _file = this.config.file.split(',');\n\n        this.fileData = {\n          size: Math.floor(_file[1].replace(/\\=/g, '').length / 4 * 3),\n          type: _file[0].split(';')[0],\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n        this.config.file = _file[1];\n      } else if (!this.config.type) {\n        throw new Meteor.Error(400, '\"type\" must me specified for base64 upload! And represent mime-type of the file');\n      } else {\n        this.fileData = {\n          size: Math.floor(this.config.file.replace(/\\=/g, '').length / 4 * 3),\n          type: this.config.type,\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n      }\n    }\n\n    if (this.config.file) {\n      if (!this.config.isBase64) {\n        try {\n          if (!this.config.file.name || !this.config.file.size) {\n            throw new Meteor.Error(500, 'Not a File!');\n          }\n        } catch (e) {\n          throw new Meteor.Error(500, '[FilesCollection] [insert] Insert method accepts File, not a FileList. You need to provide a real File. File must have `.name` property, and its size must be larger than zero.');\n        }\n\n        this.fileData = {\n          size: this.config.file.size,\n          type: this.config.type || this.config.file.type,\n          name: this.config.fileName || this.config.file.name,\n          meta: this.config.meta\n        };\n      }\n\n      if (this.collection.debug) {\n        console.time(`insert ${this.fileData.name}`);\n        console.time(`loadFile ${this.fileData.name}`);\n      }\n\n      if (this.collection._supportWebWorker && this.config.allowWebWorkers) {\n        try {\n          this.worker = new Worker(this.collection._webWorkerUrl);\n        } catch (wwError) {\n          this.worker = false;\n\n          this.collection._debug('[FilesCollection] [insert] [create WebWorker]: Can\\'t create WebWorker, fallback to MainThread', wwError);\n        }\n      } else {\n        this.worker = null;\n      }\n\n      this.startTime = {};\n      this.config.debug = this.collection.debug;\n      this.config._debug = this.collection._debug;\n      this.currentChunk = 0;\n      this.transferTime = 0;\n      this.trackerComp = null;\n      this.sentChunks = 0;\n      this.fileLength = 1;\n      this.EOFsent = false;\n      this.fileId = Random.id();\n      this.FSName = this.collection.namingFunction ? this.collection.namingFunction(this.fileData) : this.fileId;\n      this.pipes = [];\n      this.fileData = _.extend(this.fileData, this.collection._getExt(this.fileData.name), {\n        mime: this.collection._getMimeType(this.fileData)\n      });\n      this.fileData['mime-type'] = this.fileData.mime;\n      this.result = new FileUpload(_.extend(this.config, {\n        fileData: this.fileData,\n        fileId: this.fileId,\n        _Abort: this.collection._methodNames._Abort\n      }));\n\n      this.beforeunload = e => {\n        const message = _.isFunction(this.collection.onbeforeunloadMessage) ? this.collection.onbeforeunloadMessage.call(this.result, this.fileData) : this.collection.onbeforeunloadMessage;\n\n        if (e) {\n          e.returnValue = message;\n        }\n\n        return message;\n      };\n\n      this.result.config.beforeunload = this.beforeunload;\n      window.addEventListener('beforeunload', this.beforeunload, false);\n\n      this.result.config._onEnd = () => this.emit('_onEnd');\n\n      this.addListener('end', this.end);\n      this.addListener('start', this.start);\n      this.addListener('upload', this.upload);\n      this.addListener('sendEOF', this.sendEOF);\n      this.addListener('prepare', this.prepare);\n      this.addListener('sendChunk', this.sendChunk);\n      this.addListener('proceedChunk', this.proceedChunk);\n      this.addListener('createStreams', this.createStreams);\n      this.addListener('calculateStats', _.throttle(() => {\n        const _t = this.transferTime / this.sentChunks / this.config.streams;\n\n        this.result.estimateTime.set(_t * (this.fileLength - this.sentChunks));\n        this.result.estimateSpeed.set(this.config.chunkSize / (_t / 1000));\n        const progress = Math.round(this.sentChunks / this.fileLength * 100);\n        this.result.progress.set(progress);\n        this.config.onProgress && this.config.onProgress.call(this.result, progress, this.fileData);\n        this.result.emit('progress', progress, this.fileData);\n      }, 250));\n      this.addListener('_onEnd', () => {\n        if (this.result.estimateTimer) {\n          Meteor.clearInterval(this.result.estimateTimer);\n        }\n\n        if (this.worker) {\n          this.worker.terminate();\n        }\n\n        if (this.trackerComp) {\n          this.trackerComp.stop();\n        }\n\n        if (this.beforeunload) {\n          window.removeEventListener('beforeunload', this.beforeunload, false);\n        }\n\n        if (this.result) {\n          return this.result.progress.set(0);\n        }\n\n        return void 0;\n      });\n    } else {\n      throw new Meteor.Error(500, '[FilesCollection] [insert] Have you forget to pass a File itself?');\n    }\n  }\n\n  end(error, data) {\n    this.collection._debug('[FilesCollection] [UploadInstance] [end]', this.fileData.name);\n\n    if (this.collection.debug) {\n      console.timeEnd(`insert ${this.fileData.name}`);\n    }\n\n    this.emit('_onEnd');\n    this.result.emit('uploaded', error, data);\n    this.config.onUploaded && this.config.onUploaded.call(this.result, error, data);\n\n    if (error) {\n      this.collection._debug('[FilesCollection] [insert] [end] Error:', error);\n\n      this.result.abort();\n      this.result.state.set('aborted');\n      this.result.emit('error', error, this.fileData);\n      this.config.onError && this.config.onError.call(this.result, error, this.fileData);\n    } else {\n      this.result.state.set('completed');\n      this.collection.emit('afterUpload', data);\n    }\n\n    this.result.emit('end', error, data || this.fileData);\n    return this.result;\n  }\n\n  sendChunk(evt) {\n    const opts = {\n      fileId: this.fileId,\n      binData: evt.data.bin,\n      chunkId: evt.data.chunkId\n    };\n\n    if (this.config.isBase64) {\n      const pad = opts.binData.length % 4;\n\n      if (pad) {\n        let p = 0;\n\n        while (p < pad) {\n          opts.binData += '=';\n          p++;\n        }\n      }\n    }\n\n    this.emit('data', evt.data.bin);\n\n    if (this.pipes.length) {\n      for (let i = this.pipes.length - 1; i >= 0; i--) {\n        opts.binData = this.pipes[i](opts.binData);\n      }\n    }\n\n    if (this.fileLength === evt.data.chunkId) {\n      if (this.collection.debug) {\n        console.timeEnd(`loadFile ${this.fileData.name}`);\n      }\n\n      this.emit('readEnd');\n    }\n\n    if (opts.binData) {\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, error => {\n          this.transferTime += +new Date() - this.startTime[opts.chunkId];\n\n          if (error) {\n            if (this.result.state.get() !== 'aborted') {\n              this.emit('end', error);\n            }\n          } else {\n            ++this.sentChunks;\n\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n\n            this.emit('calculateStats');\n          }\n        });\n      } else {\n        HTTP.call('POST', `${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n          content: opts.binData,\n          headers: {\n            'x-mtok': (_.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : undefined) || null,\n            'x-fileid': opts.fileId,\n            'x-chunkid': opts.chunkId,\n            'content-type': 'text/plain'\n          }\n        }, error => {\n          this.transferTime += +new Date() - this.startTime[opts.chunkId];\n\n          if (error) {\n            if (`${error}` === 'Error: network') {\n              this.result.pause();\n            } else {\n              if (this.result.state.get() !== 'aborted') {\n                this.emit('end', error);\n              }\n            }\n          } else {\n            ++this.sentChunks;\n\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n\n            this.emit('calculateStats');\n          }\n        });\n      }\n    }\n  }\n\n  sendEOF() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [sendEOF]', this.EOFsent);\n\n    if (!this.EOFsent) {\n      this.EOFsent = true;\n      const opts = {\n        eof: true,\n        fileId: this.fileId\n      };\n\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, (error, result) => {\n          this.emit('end', error, result);\n        });\n      } else {\n        HTTP.call('POST', `${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n          content: '',\n          headers: {\n            'x-eof': '1',\n            'x-mtok': (_.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : undefined) || null,\n            'x-fileId': opts.fileId,\n            'content-type': 'text/plain'\n          }\n        }, (error, _result) => {\n          let result;\n\n          try {\n            result = JSON.parse((_.isObject(_result) ? _result.content : undefined) || {});\n          } catch (e) {\n            console.warn('Something went wrong! [sendEOF] method doesn\\'t returned JSON! Looks like you\\'re on Cordova app or behind proxy, switching to DDP transport is recommended.');\n            result = {};\n          }\n\n          if (result.meta) {\n            result.meta = fixJSONParse(result.meta);\n          }\n\n          this.emit('end', error, result);\n        });\n      }\n    }\n  }\n\n  proceedChunk(chunkId) {\n    const chunk = this.config.file.slice(this.config.chunkSize * (chunkId - 1), this.config.chunkSize * chunkId);\n\n    if (this.config.isBase64) {\n      this.emit('sendChunk', {\n        data: {\n          bin: chunk,\n          chunkId\n        }\n      });\n    } else {\n      let fileReader;\n\n      if (FileReader) {\n        fileReader = new FileReader();\n\n        fileReader.onloadend = evt => {\n          this.emit('sendChunk', {\n            data: {\n              bin: ((_.isObject(fileReader) ? fileReader.result : undefined) || (evt.srcElement ? evt.srcElement.result : undefined) || (evt.target ? evt.target.result : undefined)).split(',')[1],\n              chunkId\n            }\n          });\n        };\n\n        fileReader.onerror = e => {\n          this.emit('end', (e.target || e.srcElement).error);\n        };\n\n        fileReader.readAsDataURL(chunk);\n      } else if (FileReaderSync) {\n        fileReader = new FileReaderSync();\n        this.emit('sendChunk', {\n          data: {\n            bin: fileReader.readAsDataURL(chunk).split(',')[1],\n            chunkId\n          }\n        });\n      } else {\n        this.emit('end', 'File API is not supported in this Browser!');\n      }\n    }\n  }\n\n  upload() {\n    if (this.result.onPause.get()) {\n      return this;\n    }\n\n    if (this.result.state.get() === 'aborted') {\n      return this;\n    }\n\n    if (this.currentChunk <= this.fileLength) {\n      ++this.currentChunk;\n\n      if (this.worker) {\n        this.worker.postMessage({\n          f: this.config.file,\n          sc: this.sentChunks,\n          cc: this.currentChunk,\n          cs: this.config.chunkSize,\n          ib: this.config.isBase64\n        });\n      } else {\n        this.emit('proceedChunk', this.currentChunk);\n      }\n    } else {\n      this.emit('sendEOF');\n    }\n\n    this.startTime[this.currentChunk] = +new Date();\n    return this;\n  }\n\n  createStreams() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [createStreams]');\n\n    let i = 1;\n\n    while (i <= this.config.streams) {\n      this.emit('upload');\n      i++;\n    }\n  }\n\n  prepare() {\n    let _len;\n\n    this.config.onStart && this.config.onStart.call(this.result, null, this.fileData);\n    this.result.emit('start', null, this.fileData);\n\n    if (this.config.chunkSize === 'dynamic') {\n      this.config.chunkSize = this.fileData.size / 1000;\n\n      if (this.config.chunkSize < 327680) {\n        this.config.chunkSize = 327680;\n      } else if (this.config.chunkSize > 1048576) {\n        this.config.chunkSize = 1048576;\n      }\n\n      if (this.config.transport === 'http') {\n        this.config.chunkSize = Math.round(this.config.chunkSize / 2);\n      } else if (isSafari) {\n        this.config.chunkSize = Math.ceil(this.config.chunkSize / 8);\n      }\n    }\n\n    if (this.config.isBase64) {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 4) * 4;\n      _len = Math.ceil(this.config.file.length / this.config.chunkSize);\n    } else {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 8) * 8;\n      _len = Math.ceil(this.fileData.size / this.config.chunkSize);\n    }\n\n    if (this.config.streams === 'dynamic') {\n      this.config.streams = _.clone(_len);\n\n      if (this.config.streams > 24) {\n        this.config.streams = 24;\n      }\n\n      if (this.config.transport === 'http') {\n        this.config.streams = Math.round(this.config.streams / 2);\n      } else if (isSafari) {\n        this.config.streams = 1;\n      }\n    }\n\n    this.fileLength = _len <= 0 ? 1 : _len;\n\n    if (this.config.streams > this.fileLength) {\n      this.config.streams = this.fileLength;\n    }\n\n    this.result.config.fileLength = this.fileLength;\n    const opts = {\n      file: this.fileData,\n      fileId: this.fileId,\n      chunkSize: this.config.isBase64 ? this.config.chunkSize / 4 * 3 : this.config.chunkSize,\n      fileLength: this.fileLength\n    };\n\n    if (this.FSName !== this.fileId) {\n      opts.FSName = this.FSName;\n    }\n\n    const handleStart = error => {\n      if (error) {\n        this.collection._debug('[FilesCollection] [_Start] Error:', error);\n\n        this.emit('end', error);\n      } else {\n        this.result.continueFunc = () => {\n          this.collection._debug('[FilesCollection] [insert] [continueFunc]');\n\n          this.emit('createStreams');\n        };\n\n        this.emit('createStreams');\n      }\n    };\n\n    if (this.config.transport === 'ddp') {\n      this.config.ddp.call(this.collection._methodNames._Start, opts, handleStart);\n    } else {\n      if (_.isObject(opts.file) ? opts.file.meta : undefined) {\n        opts.file.meta = fixJSONStringify(opts.file.meta);\n      }\n\n      HTTP.call('POST', `${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n        data: opts,\n        headers: {\n          'x-start': '1',\n          'x-mtok': (_.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : undefined) || null\n        }\n      }, handleStart);\n    }\n  }\n\n  pipe(func) {\n    this.pipes.push(func);\n    return this;\n  }\n\n  start() {\n    let isUploadAllowed;\n\n    if (this.fileData.size <= 0) {\n      this.end(new Meteor.Error(400, 'Can\\'t upload empty file'));\n      return this.result;\n    }\n\n    if (this.config.onBeforeUpload && _.isFunction(this.config.onBeforeUpload)) {\n      isUploadAllowed = this.config.onBeforeUpload.call(_.extend(this.result, this.collection._getUser()), this.fileData);\n\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'config.onBeforeUpload() returned false'));\n      }\n    }\n\n    if (this.collection.onBeforeUpload && _.isFunction(this.collection.onBeforeUpload)) {\n      isUploadAllowed = this.collection.onBeforeUpload.call(_.extend(this.result, this.collection._getUser()), this.fileData);\n\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'collection.onBeforeUpload() returned false'));\n      }\n    }\n\n    Tracker.autorun(computation => {\n      this.trackerComp = computation;\n\n      if (!this.result.onPause.curValue && !Meteor.status().connected) {\n        this.collection._debug('[FilesCollection] [insert] [Tracker] [pause]');\n\n        this.result.pause();\n      }\n    });\n\n    if (this.worker) {\n      this.collection._debug('[FilesCollection] [insert] using WebWorkers');\n\n      this.worker.onmessage = evt => {\n        if (evt.data.error) {\n          this.collection._debug('[FilesCollection] [insert] [worker] [onmessage] [ERROR:]', evt.data.error);\n\n          this.emit('proceedChunk', evt.data.chunkId);\n        } else {\n          this.emit('sendChunk', evt);\n        }\n      };\n\n      this.worker.onerror = e => {\n        this.collection._debug('[FilesCollection] [insert] [worker] [onerror] [ERROR:]', e);\n\n        this.emit('end', e.message);\n      };\n    } else {\n      this.collection._debug('[FilesCollection] [insert] using MainThread');\n    }\n\n    this.emit('prepare');\n    return this.result;\n  }\n\n  manual() {\n    this.result.start = () => {\n      this.emit('start');\n    };\n\n    this.result.pipe = function (func) {\n      self.pipe(func);\n      return this;\n    };\n\n    return this.result;\n  }\n\n}\n\nclass FileUpload extends EventEmitter {\n  constructor(config) {\n    super();\n    this.config = config;\n\n    this.config._debug('[FilesCollection] [FileUpload] [constructor]');\n\n    if (!this.config.isBase64) {\n      this.file = _.extend(this.config.file, this.config.fileData);\n    } else {\n      this.file = this.config.fileData;\n    }\n\n    this.state = new ReactiveVar('active');\n    this.onPause = new ReactiveVar(false);\n    this.progress = new ReactiveVar(0);\n\n    this.continueFunc = () => {};\n\n    this.estimateTime = new ReactiveVar(1000);\n    this.estimateSpeed = new ReactiveVar(0);\n    this.estimateTimer = Meteor.setInterval(() => {\n      if (this.state.get() === 'active') {\n        const _currentTime = this.estimateTime.get();\n\n        if (_currentTime > 1000) {\n          this.estimateTime.set(_currentTime - 1000);\n        }\n      }\n    }, 1000);\n  }\n\n  pause() {\n    this.config._debug('[FilesCollection] [insert] [.pause()]');\n\n    if (!this.onPause.get()) {\n      this.onPause.set(true);\n      this.state.set('paused');\n      this.emit('pause', this.file);\n    }\n  }\n\n  continue() {\n    this.config._debug('[FilesCollection] [insert] [.continue()]');\n\n    if (this.onPause.get()) {\n      this.onPause.set(false);\n      this.state.set('active');\n      this.emit('continue', this.file);\n      this.continueFunc();\n    }\n  }\n\n  toggle() {\n    this.config._debug('[FilesCollection] [insert] [.toggle()]');\n\n    if (this.onPause.get()) {\n      this.continue();\n    } else {\n      this.pause();\n    }\n  }\n\n  abort() {\n    this.config._debug('[FilesCollection] [insert] [.abort()]');\n\n    window.removeEventListener('beforeunload', this.config.beforeunload, false);\n    this.config.onAbort && this.config.onAbort.call(this, this.file);\n    this.emit('abort', this.file);\n    this.pause();\n\n    this.config._onEnd();\n\n    this.state.set('aborted');\n\n    if (this.config.debug) {\n      console.timeEnd(`insert ${this.config.fileData.name}`);\n    }\n\n    this.config.ddp.call(this.config._Abort, this.config.fileId);\n  }\n\n}","map":{"version":3,"sources":["packages/ostrio:files/upload.js"],"names":["module","export","UploadInstance","FileUpload","_","watch","require","v","HTTP","Meteor","Random","Tracker","ReactiveVar","EventEmitter","check","Match","fixJSONParse","fixJSONStringify","isSafari","test","navigator","userAgent","constructor","config","collection","_debug","ddp","meta","streams","isString","transport","toLowerCase","chunkSize","isBoolean","allowWebWorkers","Any","file","Optional","Object","type","String","onError","Function","onAbort","OneOf","Number","onStart","fileName","isBase64","Boolean","onUploaded","onProgress","onBeforeUpload","Error","indexOf","replace","_file","split","fileData","size","Math","floor","length","name","e","debug","console","time","_supportWebWorker","worker","Worker","_webWorkerUrl","wwError","startTime","currentChunk","transferTime","trackerComp","sentChunks","fileLength","EOFsent","fileId","id","FSName","namingFunction","pipes","extend","_getExt","mime","_getMimeType","result","_Abort","_methodNames","beforeunload","message","isFunction","onbeforeunloadMessage","call","returnValue","window","addEventListener","_onEnd","emit","addListener","end","start","upload","sendEOF","prepare","sendChunk","proceedChunk","createStreams","throttle","_t","estimateTime","set","estimateSpeed","progress","round","estimateTimer","clearInterval","terminate","stop","removeEventListener","error","data","timeEnd","abort","state","evt","opts","binData","bin","chunkId","pad","p","i","_Write","Date","get","downloadRoute","collectionName","content","headers","isObject","connection","_lastSessionId","undefined","pause","eof","_result","JSON","parse","warn","chunk","slice","fileReader","FileReader","onloadend","srcElement","target","onerror","readAsDataURL","FileReaderSync","onPause","postMessage","f","sc","cc","cs","ib","_len","ceil","clone","handleStart","continueFunc","_Start","pipe","func","push","isUploadAllowed","_getUser","autorun","computation","curValue","status","connected","onmessage","manual","self","setInterval","_currentTime","continue","toggle"],"mappings":"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","file":"packages/ostrio:files/upload.js.map","sourcesContent":["import { _ }            from 'meteor/underscore';\nimport { HTTP }         from 'meteor/http';\nimport { Meteor }       from 'meteor/meteor';\nimport { Random }       from 'meteor/random';\nimport { Tracker }      from 'meteor/tracker';\nimport { ReactiveVar }  from 'meteor/reactive-var';\nimport { EventEmitter } from 'eventemitter3';\nimport { check, Match } from 'meteor/check';\nimport { fixJSONParse, fixJSONStringify } from './lib.js';\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n/*\n * @locus Client\n * @name UploadInstance\n * @class UploadInstance\n * @summary Internal Class, used for file upload\n */\nexport class UploadInstance extends EventEmitter {\n  constructor(config, collection) {\n    super();\n    this.config     = config;\n    this.collection = collection;\n    this.collection._debug('[FilesCollection] [insert()]');\n\n    if (!this.config.ddp) {\n      this.config.ddp = this.collection.ddp;\n    }\n\n    if (!this.config.meta) {\n      this.config.meta = {};\n    }\n\n    if (!this.config.streams) {\n      this.config.streams = 2;\n    }\n\n    if (this.config.streams < 1) {\n      this.config.streams = 2;\n    }\n\n    if (!_.isString(this.config.transport)) {\n      this.config.transport = 'ddp';\n    }\n\n    this.config.transport = this.config.transport.toLowerCase();\n\n    if (this.config.transport !== 'ddp' && this.config.transport !== 'http') {\n      this.config.transport = 'ddp';\n    }\n\n    if (!this.config.chunkSize) {\n      this.config.chunkSize = this.collection.chunkSize;\n    }\n\n    if (!_.isBoolean(this.config.allowWebWorkers)) {\n      this.config.allowWebWorkers = true;\n    }\n\n    check(this.config, {\n      ddp: Match.Any,\n      file: Match.Any,\n      meta: Match.Optional(Object),\n      type: Match.Optional(String),\n      onError: Match.Optional(Function),\n      onAbort: Match.Optional(Function),\n      streams: Match.OneOf('dynamic', Number),\n      onStart: Match.Optional(Function),\n      fileName: Match.Optional(String),\n      isBase64: Match.Optional(Boolean),\n      transport: Match.OneOf('http', 'ddp'),\n      chunkSize: Match.OneOf('dynamic', Number),\n      onUploaded: Match.Optional(Function),\n      onProgress: Match.Optional(Function),\n      onBeforeUpload: Match.Optional(Function),\n      allowWebWorkers: Boolean\n    });\n\n    if (this.config.isBase64 === true) {\n      check(this.config.file, String);\n\n      if (!this.config.fileName) {\n        throw new Meteor.Error(400, '\"fileName\" must me specified for base64 upload!');\n      }\n\n      if (!!~this.config.file.indexOf('data:')) {\n        this.config.file = this.config.file.replace('data:', '');\n      }\n\n      if (!!~this.config.file.indexOf(',')) {\n        const _file = this.config.file.split(',');\n        this.fileData = {\n          size: Math.floor(((_file[1].replace(/\\=/g, '')).length / 4) * 3),\n          type: _file[0].split(';')[0],\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n        this.config.file = _file[1];\n      } else if (!this.config.type) {\n        throw new Meteor.Error(400, '\"type\" must me specified for base64 upload! And represent mime-type of the file');\n      } else {\n        this.fileData = {\n          size: Math.floor(((this.config.file.replace(/\\=/g, '')).length / 4) * 3),\n          type: this.config.type,\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n      }\n    }\n\n    if (this.config.file) {\n      if (!this.config.isBase64) {\n        try {\n          if (!this.config.file.name || !this.config.file.size) {\n            throw new Meteor.Error(500, 'Not a File!');\n          }\n        } catch (e) {\n          throw new Meteor.Error(500, '[FilesCollection] [insert] Insert method accepts File, not a FileList. You need to provide a real File. File must have `.name` property, and its size must be larger than zero.');\n        }\n\n        this.fileData = {\n          size: this.config.file.size,\n          type: this.config.type || this.config.file.type,\n          name: this.config.fileName || this.config.file.name,\n          meta: this.config.meta\n        };\n      }\n\n      if (this.collection.debug) {\n        console.time(`insert ${this.fileData.name}`);\n        console.time(`loadFile ${this.fileData.name}`);\n      }\n\n      if (this.collection._supportWebWorker && this.config.allowWebWorkers) {\n        try {\n          this.worker = new Worker(this.collection._webWorkerUrl);\n        } catch (wwError) {\n          this.worker = false;\n          this.collection._debug('[FilesCollection] [insert] [create WebWorker]: Can\\'t create WebWorker, fallback to MainThread', wwError);\n        }\n      } else {\n        this.worker = null;\n      }\n\n      this.startTime     = {};\n      this.config.debug  = this.collection.debug;\n      this.config._debug = this.collection._debug;\n      this.currentChunk  = 0;\n      this.transferTime  = 0;\n      this.trackerComp   = null;\n      this.sentChunks    = 0;\n      this.fileLength    = 1;\n      this.EOFsent       = false;\n      this.fileId        = Random.id();\n      this.FSName        = this.collection.namingFunction ? this.collection.namingFunction(this.fileData) : this.fileId;\n      this.pipes         = [];\n\n      this.fileData = _.extend(this.fileData, this.collection._getExt(this.fileData.name), {mime: this.collection._getMimeType(this.fileData)});\n      this.fileData['mime-type'] = this.fileData.mime;\n\n      this.result = new FileUpload(_.extend(this.config, {\n        fileData: this.fileData,\n        fileId: this.fileId,\n        _Abort: this.collection._methodNames._Abort\n      }));\n\n      this.beforeunload = (e) => {\n        const message = _.isFunction(this.collection.onbeforeunloadMessage) ? this.collection.onbeforeunloadMessage.call(this.result, this.fileData) : this.collection.onbeforeunloadMessage;\n\n        if (e) {\n          e.returnValue = message;\n        }\n        return message;\n      };\n\n      this.result.config.beforeunload = this.beforeunload;\n      window.addEventListener('beforeunload', this.beforeunload, false);\n\n      this.result.config._onEnd = () => this.emit('_onEnd');\n\n      this.addListener('end', this.end);\n      this.addListener('start', this.start);\n      this.addListener('upload', this.upload);\n      this.addListener('sendEOF', this.sendEOF);\n      this.addListener('prepare', this.prepare);\n      this.addListener('sendChunk', this.sendChunk);\n      this.addListener('proceedChunk', this.proceedChunk);\n      this.addListener('createStreams', this.createStreams);\n\n      this.addListener('calculateStats', _.throttle(() => {\n        const _t = (this.transferTime / this.sentChunks) / this.config.streams;\n        this.result.estimateTime.set((_t * (this.fileLength - this.sentChunks)));\n        this.result.estimateSpeed.set((this.config.chunkSize / (_t / 1000)));\n\n        const progress = Math.round((this.sentChunks / this.fileLength) * 100);\n        this.result.progress.set(progress);\n        this.config.onProgress && this.config.onProgress.call(this.result, progress, this.fileData);\n        this.result.emit('progress', progress, this.fileData);\n      }, 250));\n\n      this.addListener('_onEnd', () => {\n        if (this.result.estimateTimer) {\n          Meteor.clearInterval(this.result.estimateTimer);\n        }\n        if (this.worker) {\n          this.worker.terminate();\n        }\n        if (this.trackerComp) {\n          this.trackerComp.stop();\n        }\n        if (this.beforeunload) {\n          window.removeEventListener('beforeunload', this.beforeunload, false);\n        }\n        if (this.result) {\n          return this.result.progress.set(0);\n        }\n        return void 0;\n      });\n    } else {\n      throw new Meteor.Error(500, '[FilesCollection] [insert] Have you forget to pass a File itself?');\n    }\n  }\n\n  end(error, data) {\n    this.collection._debug('[FilesCollection] [UploadInstance] [end]', this.fileData.name);\n    if (this.collection.debug) {\n      console.timeEnd(`insert ${this.fileData.name}`);\n    }\n\n    this.emit('_onEnd');\n    this.result.emit('uploaded', error, data);\n    this.config.onUploaded && this.config.onUploaded.call(this.result, error, data);\n\n    if (error) {\n      this.collection._debug('[FilesCollection] [insert] [end] Error:', error);\n      this.result.abort();\n      this.result.state.set('aborted');\n      this.result.emit('error', error, this.fileData);\n      this.config.onError && this.config.onError.call(this.result, error, this.fileData);\n    } else {\n      this.result.state.set('completed');\n      this.collection.emit('afterUpload', data);\n    }\n    this.result.emit('end', error, (data || this.fileData));\n    return this.result;\n  }\n\n  sendChunk(evt) {\n    const opts = {\n      fileId: this.fileId,\n      binData: evt.data.bin,\n      chunkId: evt.data.chunkId\n    };\n\n    if (this.config.isBase64) {\n      const pad = opts.binData.length % 4;\n      if (pad) {\n        let p = 0;\n        while (p < pad) {\n          opts.binData += '=';\n          p++;\n        }\n      }\n    }\n\n    this.emit('data', evt.data.bin);\n    if (this.pipes.length) {\n      for (let i = this.pipes.length - 1; i >= 0; i--) {\n        opts.binData = this.pipes[i](opts.binData);\n      }\n    }\n\n    if (this.fileLength === evt.data.chunkId) {\n      if (this.collection.debug) {\n        console.timeEnd(`loadFile ${this.fileData.name}`);\n      }\n      this.emit('readEnd');\n    }\n\n    if (opts.binData) {\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, (error) => {\n          this.transferTime += (+new Date) - this.startTime[opts.chunkId];\n          if (error) {\n            if (this.result.state.get() !== 'aborted') {\n              this.emit('end', error);\n            }\n          } else {\n            ++this.sentChunks;\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n            this.emit('calculateStats');\n          }\n        });\n      } else {\n        HTTP.call('POST', `${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n          content: opts.binData,\n          headers: {\n            'x-mtok': (_.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : undefined) || null,\n            'x-fileid': opts.fileId,\n            'x-chunkid': opts.chunkId,\n            'content-type': 'text/plain'\n          }\n        }, (error) => {\n          this.transferTime += +new Date() - this.startTime[opts.chunkId];\n          if (error) {\n            if (`${error}` === 'Error: network') {\n              this.result.pause();\n            } else {\n              if (this.result.state.get() !== 'aborted') {\n                this.emit('end', error);\n              }\n            }\n          } else {\n            ++this.sentChunks;\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n            this.emit('calculateStats');\n          }\n        });\n      }\n    }\n  }\n\n  sendEOF() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [sendEOF]', this.EOFsent);\n    if (!this.EOFsent) {\n      this.EOFsent = true;\n      const opts = {\n        eof: true,\n        fileId: this.fileId\n      };\n\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, (error, result) => {\n          this.emit('end', error, result);\n        });\n      } else {\n        HTTP.call('POST', `${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n          content: '',\n          headers: {\n            'x-eof': '1',\n            'x-mtok': (_.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : undefined) || null,\n            'x-fileId': opts.fileId,\n            'content-type': 'text/plain'\n          }\n        }, (error, _result) => {\n          let result;\n          try {\n            result = JSON.parse((_.isObject(_result) ? _result.content : undefined) || {});\n          } catch (e) {\n            console.warn('Something went wrong! [sendEOF] method doesn\\'t returned JSON! Looks like you\\'re on Cordova app or behind proxy, switching to DDP transport is recommended.');\n            result = {};\n          }\n\n          if (result.meta) {\n            result.meta = fixJSONParse(result.meta);\n          }\n\n          this.emit('end', error, result);\n        });\n      }\n    }\n  }\n\n  proceedChunk(chunkId) {\n    const chunk = this.config.file.slice((this.config.chunkSize * (chunkId - 1)), (this.config.chunkSize * chunkId));\n\n    if (this.config.isBase64) {\n      this.emit('sendChunk', {\n        data: {\n          bin: chunk,\n          chunkId\n        }\n      });\n    } else {\n      let fileReader;\n      if (FileReader) {\n        fileReader = new FileReader;\n\n        fileReader.onloadend = (evt) => {\n          this.emit('sendChunk', {\n            data: {\n              bin: ((_.isObject(fileReader) ? fileReader.result : undefined) || (evt.srcElement ? evt.srcElement.result : undefined) || (evt.target ? evt.target.result : undefined)).split(',')[1],\n              chunkId\n            }\n          });\n        };\n\n        fileReader.onerror = (e) => {\n          this.emit('end', (e.target || e.srcElement).error);\n        };\n\n        fileReader.readAsDataURL(chunk);\n      } else if (FileReaderSync) {\n        fileReader = new FileReaderSync;\n\n        this.emit('sendChunk', {\n          data: {\n            bin: fileReader.readAsDataURL(chunk).split(',')[1],\n            chunkId\n          }\n        });\n      } else {\n        this.emit('end', 'File API is not supported in this Browser!');\n      }\n    }\n  }\n\n  upload() {\n    if (this.result.onPause.get()) {\n      return this;\n    }\n\n    if (this.result.state.get() === 'aborted') {\n      return this;\n    }\n\n    if (this.currentChunk <= this.fileLength) {\n      ++this.currentChunk;\n      if (this.worker) {\n        this.worker.postMessage({\n          f: this.config.file,\n          sc: this.sentChunks,\n          cc: this.currentChunk,\n          cs: this.config.chunkSize,\n          ib: this.config.isBase64\n        });\n      } else {\n        this.emit('proceedChunk', this.currentChunk);\n      }\n    } else {\n      this.emit('sendEOF');\n    }\n    this.startTime[this.currentChunk] = +new Date();\n    return this;\n  }\n\n  createStreams() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [createStreams]');\n    let i = 1;\n    while (i <= this.config.streams) {\n      this.emit('upload');\n      i++;\n    }\n  }\n\n  prepare() {\n    let _len;\n\n    this.config.onStart && this.config.onStart.call(this.result, null, this.fileData);\n    this.result.emit('start', null, this.fileData);\n\n    if (this.config.chunkSize === 'dynamic') {\n      this.config.chunkSize = this.fileData.size / 1000;\n      if (this.config.chunkSize < 327680) {\n        this.config.chunkSize = 327680;\n      } else if (this.config.chunkSize > 1048576) {\n        this.config.chunkSize = 1048576;\n      }\n\n      if (this.config.transport === 'http') {\n        this.config.chunkSize = Math.round(this.config.chunkSize / 2);\n      } else if (isSafari) {\n        this.config.chunkSize = Math.ceil(this.config.chunkSize / 8);\n      }\n    }\n\n    if (this.config.isBase64) {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 4) * 4;\n      _len = Math.ceil(this.config.file.length / this.config.chunkSize);\n    } else {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 8) * 8;\n      _len = Math.ceil(this.fileData.size / this.config.chunkSize);\n    }\n\n    if (this.config.streams === 'dynamic') {\n      this.config.streams = _.clone(_len);\n      if (this.config.streams > 24) { this.config.streams = 24; }\n\n      if (this.config.transport === 'http') {\n        this.config.streams = Math.round(this.config.streams / 2);\n      } else if (isSafari) {\n        this.config.streams = 1;\n      }\n    }\n\n    this.fileLength = _len <= 0 ? 1 : _len;\n    if (this.config.streams > this.fileLength) {\n      this.config.streams = this.fileLength;\n    }\n    this.result.config.fileLength = this.fileLength;\n\n    const opts = {\n      file: this.fileData,\n      fileId: this.fileId,\n      chunkSize: this.config.isBase64 ? ((this.config.chunkSize  / 4) * 3) : this.config.chunkSize,\n      fileLength: this.fileLength\n    };\n\n    if (this.FSName !== this.fileId) {\n      opts.FSName = this.FSName;\n    }\n\n    const handleStart = (error) => {\n      if (error) {\n        this.collection._debug('[FilesCollection] [_Start] Error:', error);\n        this.emit('end', error);\n      } else {\n        this.result.continueFunc = () => {\n          this.collection._debug('[FilesCollection] [insert] [continueFunc]');\n          this.emit('createStreams');\n        };\n        this.emit('createStreams');\n      }\n    };\n\n    if (this.config.transport === 'ddp') {\n      this.config.ddp.call(this.collection._methodNames._Start, opts, handleStart);\n    } else {\n      if (_.isObject(opts.file) ? opts.file.meta : undefined) {\n        opts.file.meta = fixJSONStringify(opts.file.meta);\n      }\n\n      HTTP.call('POST', `${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n        data: opts,\n        headers: {\n          'x-start': '1',\n          'x-mtok': (_.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : undefined) || null\n        }\n      }, handleStart);\n    }\n  }\n\n  pipe(func) {\n    this.pipes.push(func);\n    return this;\n  }\n\n  start() {\n    let isUploadAllowed;\n    if (this.fileData.size <= 0) {\n      this.end(new Meteor.Error(400, 'Can\\'t upload empty file'));\n      return this.result;\n    }\n\n    if (this.config.onBeforeUpload && _.isFunction(this.config.onBeforeUpload)) {\n      isUploadAllowed = this.config.onBeforeUpload.call(_.extend(this.result, this.collection._getUser()), this.fileData);\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'config.onBeforeUpload() returned false'));\n      }\n    }\n\n    if (this.collection.onBeforeUpload && _.isFunction(this.collection.onBeforeUpload)) {\n      isUploadAllowed = this.collection.onBeforeUpload.call(_.extend(this.result, this.collection._getUser()), this.fileData);\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'collection.onBeforeUpload() returned false'));\n      }\n    }\n\n    Tracker.autorun((computation) => {\n      this.trackerComp = computation;\n      if (!this.result.onPause.curValue && !Meteor.status().connected) {\n        this.collection._debug('[FilesCollection] [insert] [Tracker] [pause]');\n        this.result.pause();\n      }\n    });\n\n    if (this.worker) {\n      this.collection._debug('[FilesCollection] [insert] using WebWorkers');\n      this.worker.onmessage = (evt) => {\n        if (evt.data.error) {\n          this.collection._debug('[FilesCollection] [insert] [worker] [onmessage] [ERROR:]', evt.data.error);\n          this.emit('proceedChunk', evt.data.chunkId);\n        } else {\n          this.emit('sendChunk', evt);\n        }\n      };\n\n      this.worker.onerror = (e) => {\n        this.collection._debug('[FilesCollection] [insert] [worker] [onerror] [ERROR:]', e);\n        this.emit('end', e.message);\n      };\n    } else {\n      this.collection._debug('[FilesCollection] [insert] using MainThread');\n    }\n\n    this.emit('prepare');\n    return this.result;\n  }\n\n  manual() {\n    this.result.start = () => {\n      this.emit('start');\n    };\n\n    this.result.pipe = function (func) {\n      self.pipe(func);\n      return this;\n    };\n    return this.result;\n  }\n}\n\n/*\n * @locus Client\n * @name FileUpload\n * @class FileUpload\n * @summary Internal Class, instance of this class is returned from `.insert()` method\n */\nexport class FileUpload extends EventEmitter {\n  constructor(config) {\n    super();\n    this.config = config;\n    this.config._debug('[FilesCollection] [FileUpload] [constructor]');\n\n    if (!this.config.isBase64) {\n      this.file        = _.extend(this.config.file, this.config.fileData);\n    } else {\n      this.file        = this.config.fileData;\n    }\n    this.state         = new ReactiveVar('active');\n    this.onPause       = new ReactiveVar(false);\n    this.progress      = new ReactiveVar(0);\n    this.continueFunc  = () => { };\n    this.estimateTime  = new ReactiveVar(1000);\n    this.estimateSpeed = new ReactiveVar(0);\n    this.estimateTimer = Meteor.setInterval(() => {\n      if (this.state.get() === 'active') {\n        const _currentTime = this.estimateTime.get();\n        if (_currentTime > 1000) {\n          this.estimateTime.set(_currentTime - 1000);\n        }\n      }\n    }, 1000);\n  }\n  pause() {\n    this.config._debug('[FilesCollection] [insert] [.pause()]');\n    if (!this.onPause.get()) {\n      this.onPause.set(true);\n      this.state.set('paused');\n      this.emit('pause', this.file);\n    }\n  }\n  continue() {\n    this.config._debug('[FilesCollection] [insert] [.continue()]');\n    if (this.onPause.get()) {\n      this.onPause.set(false);\n      this.state.set('active');\n      this.emit('continue', this.file);\n      this.continueFunc();\n    }\n  }\n  toggle() {\n    this.config._debug('[FilesCollection] [insert] [.toggle()]');\n    if (this.onPause.get()) {\n      this.continue();\n    } else {\n      this.pause();\n    }\n  }\n  abort() {\n    this.config._debug('[FilesCollection] [insert] [.abort()]');\n    window.removeEventListener('beforeunload', this.config.beforeunload, false);\n    this.config.onAbort && this.config.onAbort.call(this, this.file);\n    this.emit('abort', this.file);\n    this.pause();\n    this.config._onEnd();\n    this.state.set('aborted');\n    if (this.config.debug) {\n      console.timeEnd(`insert ${this.config.fileData.name}`);\n    }\n\n    this.config.ddp.call(this.config._Abort, this.config.fileId);\n  }\n}\n"]},"hash":"26b130dbcd38dfecbffe1252d77c4b82b6c73c16"}

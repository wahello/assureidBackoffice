{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"../api/Portfolios","imported":["Portfolios"],"specifiers":[{"kind":"named","imported":"Portfolios","local":"Portfolios"}]},{"source":"../api/Portfolios","imported":["TempPortfolioImages"],"specifiers":[{"kind":"named","imported":"TempPortfolioImages","local":"TempPortfolioImages"}]},{"source":"../api/Portfolios","imported":["TempPortfolioLogoImages"],"specifiers":[{"kind":"named","imported":"TempPortfolioLogoImages","local":"TempPortfolioLogoImages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/reactCMS/components/PortfolioPage.jsx","filenameRelative":"imports/dashboard/reactCMS/components/PortfolioPage.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/components/PortfolioPage.jsx.map","sourceFileName":"imports/dashboard/reactCMS/components/PortfolioPage.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"PortfolioPage"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar React = void 0,\n    Component = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 2);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n  render: function (v) {\n    render = v;\n  }\n}, 3);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  \"default\": function (v) {\n    TrackerReact = v;\n  }\n}, 4);\nvar createContainer = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer: function (v) {\n    createContainer = v;\n  }\n}, 5);\nvar Validation = void 0;\nmodule.watch(require(\"react-validation\"), {\n  \"default\": function (v) {\n    Validation = v;\n  }\n}, 6);\nvar validator = void 0;\nmodule.watch(require(\"validator\"), {\n  \"default\": function (v) {\n    validator = v;\n  }\n}, 7);\nvar Tracker = void 0;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 8);\nvar Portfolios = void 0;\nmodule.watch(require(\"../api/Portfolios\"), {\n  Portfolios: function (v) {\n    Portfolios = v;\n  }\n}, 9);\nvar TempPortfolioImages = void 0;\nmodule.watch(require(\"../api/Portfolios\"), {\n  TempPortfolioImages: function (v) {\n    TempPortfolioImages = v;\n  }\n}, 10);\nvar TempPortfolioLogoImages = void 0;\nmodule.watch(require(\"../api/Portfolios\"), {\n  TempPortfolioLogoImages: function (v) {\n    TempPortfolioLogoImages = v;\n  }\n}, 11);\n\nvar PortfolioPage = function (_TrackerReact) {\n  (0, _inherits3.default)(PortfolioPage, _TrackerReact);\n\n  function PortfolioPage(props) {\n    (0, _classCallCheck3.default)(this, PortfolioPage);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _TrackerReact.call(this, props));\n\n    var metaContext = {\n      id: Meteor.userId(),\n      dir: \"images\",\n      name: \"portfolioImage\"\n    };\n    var uploader = new Slingshot.Upload(\"myFileUploads\", metaContext);\n    _this.state = {\n      portfolioPageTitle: _this.props.portfolios,\n      portfolioPageName: _this.props.portfolios,\n      portfolioPageBody: _this.props.portfolios,\n      id: _this.props.portfolios._id,\n      portfolios: [],\n      portfolioVideoLink: _this.props.portfolios,\n      upload: uploader,\n      isUploading: false,\n      isLogoUploading: false,\n      logoProgressValue: \"0%\",\n      progressValue: \"0%\",\n      tempPortfolioImages: [],\n      tempPortfolioLogoImages: [],\n      edit: false\n    };\n    _this.handleChange = _this.handleChange.bind(_this);\n    return _this;\n  }\n\n  PortfolioPage.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (!nextProps.loading) {\n        if (nextProps.portfolios) {\n          this.setState({\n            portfolioPageTitle: nextProps.portfolios.portfolioPageTitle,\n            portfolioPageName: nextProps.portfolios.portfolioPageName,\n            portfolioPageBody: nextProps.portfolios.portfolioPageBody,\n            portfolioVideoLink: nextProps.portfolios.portfolioVideoLink,\n            id: nextProps.portfolios._id\n          });\n        }\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  PortfolioPage.prototype.calculateProgress = function () {\n    function calculateProgress() {\n      var _this2 = this;\n\n      this.uploadComputation = Tracker.autorun(function () {\n        var uploadProgress = Math.round(_this2.state.upload.progress() * 100);\n        if (!isNaN(uploadProgress)) _this2.setState({\n          progressValue: uploadProgress + \"%\"\n        });\n      });\n    }\n\n    return calculateProgress;\n  }();\n\n  PortfolioPage.prototype.handleChange = function () {\n    function handleChange(event) {\n      var _setState;\n\n      var target = event.target;\n      var name = target.name;\n      this.setState((_setState = {}, _setState[name] = event.target.value, _setState));\n    }\n\n    return handleChange;\n  }();\n\n  PortfolioPage.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      var _this3 = this;\n\n      if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n        var dashboardCss = document.createElement(\"link\");\n        dashboardCss.type = \"text/css\";\n        dashboardCss.rel = \"stylesheet\";\n        dashboardCss.href = \"/css/dashboard.css\";\n        document.head.append(dashboardCss);\n      }\n\n      if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n        console.log(\"I am appended!\");\n        var adminLte = document.createElement(\"script\");\n        adminLte.type = \"text/javascript\";\n        adminLte.src = \"/js/adminLte.js\";\n        adminLte.setAttribute('id', 'adminLte');\n        $(\"body\").append(adminLte);\n      }\n\n      $('#messageContent').summernote({\n        height: 190,\n        maxHeight: 190,\n        minHeight: 175\n      });\n      this.portfolioPageTracker = Tracker.autorun(function () {\n        Meteor.subscribe(\"portfolios\");\n        var portfolios = Portfolios.find().fetch();\n\n        _this3.setState({\n          portfolios: portfolios\n        });\n      });\n      this.tempPortfolioImageTracker = Tracker.autorun(function () {\n        Meteor.subscribe('tempPortfolioImages');\n        var tempPortfolioImages = TempPortfolioImages.find().fetch();\n\n        _this3.setState({\n          tempPortfolioImages: tempPortfolioImages\n        });\n      });\n      this.tempPortfolioLogoImageTracker = Tracker.autorun(function () {\n        Meteor.subscribe('tempPortfolioLogoImages');\n        var tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n\n        _this3.setState({\n          tempPortfolioLogoImages: tempPortfolioLogoImages\n        });\n      }); // $(\".image-box\").css({'background-image':'url('+  $(\".image-box\").attr('data-image')+')','background-size': 'cover'});\n    }\n\n    return componentDidMount;\n  }();\n\n  PortfolioPage.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n      var tempPortfolioImages = TempPortfolioImages.find().fetch();\n\n      for (i = 0; i < tempPortfolioImages.length; i++) {\n        if (!tempPortfolioImages[i].submitted) Meteor.call('removeS3Data', tempPortfolioImages[i].amazonUrl);\n      }\n\n      var tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n\n      for (i = 0; i < tempPortfolioLogoImages.length; i++) {\n        if (!tempPortfolioLogoImages[i].submitted) Meteor.call('removeS3Data', tempPortfolioLogoImages[i].logoAmazonUrl);\n      }\n\n      Meteor.call('removePortfolioUnsubmitImages', Meteor.userId());\n      Meteor.call('removePortfolioLogoUnsubmitImages', Meteor.userId());\n      console.log('unmounted');\n      if (this.portfolioPageTracker) this.portfolioPageTracker.stop();\n      if (this.tempPortfolioImageTracker) this.tempPortfolioImageTracker.stop();\n      if (this.tempPortfolioLogoImageTracker) this.tempPortfolioLogoImageTracker.stop();\n    }\n\n    return componentWillUnmount;\n  }();\n\n  PortfolioPage.prototype.handleClose = function () {\n    function handleClose(e) {\n      e.preventDefault();\n      console.log('deleting ' + e.target.getAttribute('id'));\n\n      if (this.props.params.id && this.state.edit) {\n        Meteor.call('removeS3Data', e.target.getAttribute('id'));\n        Meteor.call('updateEditPortfolioPage', e.target.getAttribute('id'));\n      }\n\n      Meteor.call('removePortfolioUrlImages', e.target.getAttribute('id'));\n      Meteor.call('removeS3Data', e.target.getAttribute('id'));\n    }\n\n    return handleClose;\n  }();\n\n  PortfolioPage.prototype.handleLogoClose = function () {\n    function handleLogoClose(e) {\n      e.preventDefault();\n      console.log('deleting ' + e.target.getAttribute('id'));\n\n      if (this.props.params.id && this.state.edit) {\n        Meteor.call('removeS3Data', e.target.getAttribute('id'));\n        Meteor.call('updateEditPortfolioLogoPage', e.target.getAttribute('id'));\n      }\n\n      Meteor.call('removePortfolioLogoUrlImages', e.target.getAttribute('id'));\n      Meteor.call('removeS3Data', e.target.getAttribute('id'));\n    }\n\n    return handleLogoClose;\n  }();\n\n  PortfolioPage.prototype.renderImageData = function () {\n    function renderImageData() {\n      var _this4 = this;\n\n      if (this.props.params.id && this.state.edit) {\n        console.log(\"I have Id\");\n        var portfolios = Portfolios.find({\n          '_id': this.props.params.id\n        }).fetch();\n        var imageArray = [];\n\n        for (i = 0; i < portfolios.length; i++) {\n          for (j = 0; j < portfolios[i].s3.length; j++) {\n            if (portfolios[i].s3[j].amazonUrl != '') {\n              imageArray.push(React.createElement(\n                \"div\",\n                {\n                  key: j,\n                  \"data-image\": portfolios[i].s3[j].amazonUrl,\n                  className: \"image-box\"\n                },\n                React.createElement(\"img\", {\n                  src: portfolios[i].s3[j].amazonUrl,\n                  alt: \"\"\n                }),\n                React.createElement(\n                  \"button\",\n                  {\n                    id: portfolios[i].s3[j].amazonUrl,\n                    className: \"close\",\n                    onClick: this.handleClose.bind(this)\n                  },\n                  React.createElement(\"i\", {\n                    className: \"ion ion-close-circled\"\n                  })\n                )\n              ));\n            }\n          }\n        }\n\n        var tempPortfolioImages = TempPortfolioImages.find().fetch();\n\n        for (k = 0; k < tempPortfolioImages.length; k++) {\n          if (tempPortfolioImages[k].amazonUrl != '' && !tempPortfolioImages[k].submitted) imageArray.push(React.createElement(\n            \"div\",\n            {\n              \"data-image\": tempPortfolioImages[k].amazonUrl,\n              className: \"image-box\"\n            },\n            React.createElement(\"img\", {\n              src: tempPortfolioImages[k].amazonUrl,\n              alt: \"\"\n            }),\n            React.createElement(\n              \"button\",\n              {\n                id: tempPortfolioImages[k].amazonUrl,\n                className: \"close\",\n                onClick: this.handleClose.bind(this)\n              },\n              React.createElement(\"i\", {\n                className: \"ion ion-close-circled\"\n              })\n            )\n          ));\n        }\n\n        return imageArray;\n      } else {\n        var _tempPortfolioImages = TempPortfolioImages.find().fetch();\n\n        return _tempPortfolioImages.map(function (tempPortfolioImage) {\n          if (tempPortfolioImage.amazonUrl != '' && !tempPortfolioImage.submitted) return React.createElement(\n            \"div\",\n            {\n              \"data-image\": tempPortfolioImage.amazonUrl,\n              className: \"image-box\"\n            },\n            React.createElement(\"img\", {\n              src: tempPortfolioImage.amazonUrl,\n              alt: \"\"\n            }),\n            React.createElement(\n              \"button\",\n              {\n                id: tempPortfolioImage.amazonUrl,\n                className: \"close\",\n                onClick: _this4.handleClose.bind(_this4)\n              },\n              React.createElement(\"i\", {\n                className: \"ion ion-close-circled\"\n              })\n            )\n          );\n        });\n      }\n    }\n\n    return renderImageData;\n  }();\n\n  PortfolioPage.prototype.handleUpload = function () {\n    function handleUpload(e) {\n      var id = Meteor.userId();\n      e.preventDefault();\n      this.setState({\n        isUploading: true\n      });\n      this.calculateProgress();\n      var comp = this; // console.log(comp);\n\n      this.state.upload.send(document.getElementById('s3file').files[0], function (error, downloadUrl) {\n        if (error) {\n          // Log service detailed response.\n          console.error('Error uploading' + downloadUrl + error.reason);\n          console.error(error);\n        } else {\n          comp.setState({\n            progressValue: \"0%\"\n          });\n          comp.setState({\n            isUploading: false\n          });\n          comp.uploadComputation.stop();\n          console.log(\"Success file uploaded! \" + downloadUrl); // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n\n          Meteor.call('uploadTempPortfolioImages', id, downloadUrl, new Date(), function (error, result) {\n            if (error) {\n              console.log(error.reason);\n            } else if (result) {\n              Bert.alert(\"Successfully Inserted..!!\");\n            }\n          });\n        }\n      });\n    }\n\n    return handleUpload;\n  }();\n\n  PortfolioPage.prototype.renderLogoImageData = function () {\n    function renderLogoImageData() {\n      var _this5 = this;\n\n      if (this.props.params.id && this.state.edit) {\n        var portfolios = Portfolios.find({\n          '_id': this.props.params.id\n        }).fetch();\n        var imageArray = [];\n\n        for (i = 0; i < portfolios.length; i++) {\n          for (j = 0; j < portfolios[i].logoS3.length; j++) {\n            if (portfolios[i].logoS3[j].logoAmazonUrl != '') {\n              imageArray.push(React.createElement(\n                \"div\",\n                {\n                  key: j,\n                  \"data-image\": portfolios[i].logoS3[j].logoAmazonUrl,\n                  className: \"image-box\"\n                },\n                React.createElement(\"img\", {\n                  src: portfolios[i].logoS3[j].logoAmazonUrl,\n                  alt: \"\"\n                }),\n                React.createElement(\n                  \"button\",\n                  {\n                    id: portfolios[i].logoS3[j].logoAmazonUrl,\n                    className: \"close\",\n                    onClick: this.handleLogoClose.bind(this)\n                  },\n                  React.createElement(\"i\", {\n                    className: \"ion ion-close-circled\"\n                  })\n                )\n              ));\n            }\n          }\n        }\n\n        var tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n\n        for (k = 0; k < tempPortfolioLogoImages.length; k++) {\n          if (tempPortfolioLogoImages[k].logoAmazonUrl != '' && !tempPortfolioLogoImages[k].submitted) imageArray.push(React.createElement(\n            \"div\",\n            {\n              \"data-image\": tempPortfolioLogoImages[k].logoAmazonUrl,\n              className: \"image-box\"\n            },\n            React.createElement(\"img\", {\n              src: tempPortfolioLogoImages[k].logoAmazonUrl,\n              alt: \"\"\n            }),\n            React.createElement(\n              \"button\",\n              {\n                id: tempPortfolioLogoImages[k].logoAmazonUrl,\n                className: \"close\",\n                onClick: this.handleLogoClose.bind(this)\n              },\n              React.createElement(\"i\", {\n                className: \"ion ion-close-circled\"\n              })\n            )\n          ));\n        }\n\n        return imageArray;\n      } else {\n        var _tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n\n        return _tempPortfolioLogoImages.map(function (tempPortfolioLogoImage) {\n          if (tempPortfolioLogoImage.logoAmazonUrl != '' && !tempPortfolioLogoImage.submitted) return React.createElement(\n            \"div\",\n            {\n              \"data-image\": tempPortfolioLogoImage.logoAmazonUrl,\n              className: \"image-box\"\n            },\n            React.createElement(\"img\", {\n              src: tempPortfolioLogoImage.logoAmazonUrl,\n              alt: \"\"\n            }),\n            React.createElement(\n              \"button\",\n              {\n                id: tempPortfolioLogoImage.logoAmazonUrl,\n                className: \"close\",\n                onClick: _this5.handleLogoClose.bind(_this5)\n              },\n              React.createElement(\"i\", {\n                className: \"ion ion-close-circled\"\n              })\n            )\n          );\n        });\n      }\n    }\n\n    return renderLogoImageData;\n  }();\n\n  PortfolioPage.prototype.calculateLogoProgress = function () {\n    function calculateLogoProgress() {\n      var _this6 = this;\n\n      this.uploadLogoComputation = Tracker.autorun(function () {\n        var logoUploadProgress = Math.round(_this6.state.upload.progress() * 100);\n        if (!isNaN(logoUploadProgress)) _this6.setState({\n          logoProgressValue: logoUploadProgress + \"%\"\n        });\n      });\n    }\n\n    return calculateLogoProgress;\n  }();\n\n  PortfolioPage.prototype.handleLogoUpload = function () {\n    function handleLogoUpload(e) {\n      var id = Meteor.userId();\n      e.preventDefault();\n      this.setState({\n        isLogoUploading: true\n      });\n      this.calculateLogoProgress();\n      var comp = this; // console.log(comp);\n\n      this.state.upload.send(document.getElementById('s3fileLogo').files[0], function (error, downloadUrl) {\n        if (error) {\n          // Log service detailed response.\n          console.error('Error uploading ' + error.reason);\n          console.error(error);\n        } else {\n          comp.setState({\n            logoProgressValue: \"0%\"\n          });\n          comp.setState({\n            isLogoUploading: false\n          });\n          comp.uploadLogoComputation.stop();\n          console.log(\"Success file uploaded! \" + downloadUrl); // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n\n          Meteor.call('uploadTempPortfolioLogoImages', id, downloadUrl, new Date(), function (error, result) {\n            if (error) {\n              console.log(error.reason);\n            } else if (result) {\n              Bert.alert(\"Successfully Inserted..!!\");\n            }\n          });\n        }\n      });\n    }\n\n    return handleLogoUpload;\n  }();\n\n  PortfolioPage.prototype.handleUpdate = function () {\n    function handleUpdate(e) {\n      e.preventDefault();\n      this.setState({\n        edit: true\n      });\n      var tempPortfolioImages = TempPortfolioImages.find().fetch();\n      var tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      var pageName = this.refs.portfolioPageTitle.value;\n      var pageUrl = this.refs.portfolioPageName.value;\n      var pageVideoLink = this.refs.portfolioVideoLink.value;\n      var pageBody = $('#messageContent').summernote('code');\n      var userId = Meteor.userId();\n      var lastModified = new Date();\n      var id = e.target.getAttribute('id');\n      var amazons3 = [];\n      var logoAmazons3 = [];\n\n      for (i = 0; i < tempPortfolioImages.length; i++) {\n        if (!tempPortfolioImages[i].submitted) {\n          amazons3.push({\n            'amazonUrl': tempPortfolioImages[i].amazonUrl,\n            'uploadTime': tempPortfolioImages[i].uploadTime\n          });\n        }\n\n        Meteor.call('updateTempPortfolioImages', tempPortfolioImages[i]._id, true);\n      }\n\n      for (i = 0; i < tempPortfolioLogoImages.length; i++) {\n        if (!tempPortfolioLogoImages[i].submitted) {\n          amazons3.push({\n            'amazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n            'uploadTime': tempPortfolioLogoImages[i].uploadTime\n          });\n        }\n\n        Meteor.call('updateTempPortfolioLogoImages', tempPortfolioLogoImages[i]._id, true);\n      }\n\n      Meteor.call('updatePortfolioPage', id, pageName, pageUrl, pageVideoLink, pageBody, userId, lastModified, function (error, result) {\n        if (error) {\n          console.log(error.reason);\n        } else if (result) {\n          Bert.alert(\"Successfully Updated..!!\");\n        }\n      });\n\n      for (j = 0; j < tempPortfolioImages.length; j++) {\n        if (!tempPortfolioImages[j].submitted) {\n          Meteor.call('updatePortfolioAmazonUrl', tempPortfolioImages[j].amazonUrl, tempPortfolioImages[j].uploadTime, id, function (error, result) {\n            if (error) {\n              console.log(error.reason);\n            } else if (result) {\n              Bert.alert(\"Successfully Updated..!!\");\n            }\n          });\n        }\n      }\n\n      for (j = 0; j < tempPortfolioLogoImages.length; j++) {\n        if (!tempPortfolioLogoImages[j].submitted) {\n          Meteor.call('updatePortfolioLogoAmazonUrl', tempPortfolioLogoImages[j].logoAmazonUrl, tempPortfolioLogoImages[j].uploadTime, id, function (error, result) {\n            if (error) {\n              console.log(error.reason);\n            } else if (result) {\n              Bert.alert(\"Successfully Updated..!!\");\n            }\n          });\n        }\n      }\n\n      Meteor.call('removeTempPortfolioImages', Meteor.userId());\n      Meteor.call('removeTempPortfolioLogoImages', Meteor.userId());\n      swal(\"Done\", \"Your page has been Updated!.\", \"success\");\n      $(\".newTemplateForm\").css({\n        display: 'none'\n      });\n    }\n\n    return handleUpdate;\n  }();\n\n  PortfolioPage.prototype.handleSubmit = function () {\n    function handleSubmit(e) {\n      e.preventDefault();\n      var tempPortfolioImages = TempPortfolioImages.find().fetch();\n      var tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      var pageName = this.refs.portfolioPageTitle.value;\n      var pageUrl = this.refs.portfolioPageName.value;\n      var pageVideoLink = this.refs.portfolioVideoLink.value;\n      var pageBody = $('#messageContent').summernote('code');\n      var userId = Meteor.userId();\n      var lastModified = \"\";\n      var pageNameExist = Portfolios.findOne({\n        'portfolioPageTitle': pageName\n      });\n      var pageUrlExist = Portfolios.findOne({\n        'portfolioPageName': pageUrl\n      });\n      var amazons3 = [];\n      var logoAmazons3 = [];\n\n      for (i = 0; i < tempPortfolioImages.length; i++) {\n        if (!tempPortfolioImages[i].submitted) amazons3.push({\n          'amazonUrl': tempPortfolioImages[i].amazonUrl,\n          'uploadTime': tempPortfolioImages[i].uploadTime\n        });\n        Meteor.call('updateTempPortfolioImages', tempPortfolioImages[i]._id, true);\n      }\n\n      for (i = 0; i < tempPortfolioLogoImages.length; i++) {\n        if (!tempPortfolioLogoImages[i].submitted) logoAmazons3.push({\n          'logoAmazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n          'uploadTime': tempPortfolioLogoImages[i].uploadTime\n        });\n        Meteor.call('updateTempPortfolioLogoImages', tempPortfolioLogoImages[i]._id, true);\n      }\n\n      if (pageNameExist) {\n        swal(\"Oops...!\", \"This page name is already taken!\", \"error\");\n      } else if (pageUrlExist) {\n        swal(\"Oops...!\", \"This page url is already taken!\", \"error\");\n      } else {\n        Meteor.call('createPortfolioPage', pageName, pageUrl, pageVideoLink, pageBody, amazons3, logoAmazons3, userId, lastModified, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Inserted..!!\");\n          }\n        });\n      }\n\n      Meteor.call('removeTempPortfolioImages', Meteor.userId());\n      Meteor.call('removeTempPortfolioLogoImages', Meteor.userId());\n      swal(\"Done\", \"Your page has been Created!.\", \"success\");\n      $(\".newTemplateForm\").css({\n        display: 'none'\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  PortfolioPage.prototype.edit = function () {\n    function edit(e) {\n      e.preventDefault();\n      this.setState({\n        'edit': true\n      });\n      var portfolios = Portfolios.find({\n        _id: this.props.params.id\n      }).fetch();\n      portfolios.map(function (portfolioPage) {\n        $(\"#portfolioPageTitle\").val(portfolioPage.portfolioPageTitle);\n        $(\"#portfolioPageName\").val(portfolioPage.portfolioPageName);\n        $(\"#portfolioVideoLink\").val(portfolioPage.portfolioVideoLink);\n        $('.note-editable').html(portfolioPage.portfolioPageBody);\n        $('.updatebtn').attr(\"id\", portfolioPage._id);\n      });\n      $(\".updatebtn\").css({\n        display: 'block'\n      });\n      $(\".sendtxtmsgbtn\").css({\n        display: 'none'\n      });\n      $(\".newTemplateForm\").css({\n        display: 'block'\n      });\n    }\n\n    return edit;\n  }();\n\n  PortfolioPage.prototype.delete = function () {\n    function _delete(e) {\n      e.preventDefault(); // console.log(e.target.getAttribute('id'));\n\n      var id = e.target.getAttribute('id');\n      swal({\n        title: \"Are you sure?\",\n        text: \"You want to delete this page!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#DD6B55\",\n        confirmButtonText: \"Yes, delete it!\",\n        closeOnConfirm: false,\n        html: false\n      }, function () {\n        Meteor.call(\"deletePortfolioPage\", id, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Deleted..!!\");\n          }\n        });\n        swal(\"Done\", \"Your page has been deleted!.\", \"success\");\n      });\n      $(\".newTemplateForm\").css({\n        display: 'none'\n      });\n    }\n\n    return _delete;\n  }();\n\n  PortfolioPage.prototype.renderTableRow = function () {\n    function renderTableRow() {\n      var _this7 = this;\n\n      return this.state.portfolios.map(function (portfolioPage) {\n        return React.createElement(\n          \"tr\",\n          null,\n          React.createElement(\n            \"td\",\n            null,\n            portfolioPage.portfolioPageTitle\n          ),\n          \" \",\n          React.createElement(\n            \"td\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: '/portfolio/' + portfolioPage._id,\n                onClick: _this7.edit.bind(_this7)\n              },\n              React.createElement(\"i\", {\n                className: \"fa fa-pencil\"\n              }),\n              \"Edit\"\n            )\n          ),\n          React.createElement(\n            \"td\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: \"#\",\n                id: portfolioPage._id,\n                onClick: _this7.delete.bind(_this7)\n              },\n              React.createElement(\"i\", {\n                className: \"fa fa-trash-o\"\n              }),\n              \" Delete\"\n            )\n          )\n        );\n      });\n    }\n\n    return renderTableRow;\n  }();\n\n  PortfolioPage.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"div\",\n          {\n            className: \"content-wrapper\"\n          },\n          React.createElement(\n            \"section\",\n            {\n              className: \"content-header\"\n            },\n            React.createElement(\n              \"h1\",\n              null,\n              \"Dashboard\",\n              React.createElement(\n                \"small\",\n                null,\n                \"Version 3.0\"\n              )\n            ),\n            React.createElement(\n              \"ol\",\n              {\n                className: \"breadcrumb\"\n              },\n              React.createElement(\n                \"li\",\n                null,\n                React.createElement(\n                  \"a\",\n                  {\n                    href: \"#\"\n                  },\n                  React.createElement(\"i\", {\n                    className: \"fa fa-dashboard\"\n                  }),\n                  \" Home\"\n                )\n              ),\n              React.createElement(\n                \"li\",\n                {\n                  className: \"active\"\n                },\n                \"Portfolio Page\"\n              )\n            )\n          ),\n          React.createElement(\n            \"section\",\n            {\n              className: \"content\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-md-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"box-header with-border\"\n                    },\n                    React.createElement(\n                      \"h3\",\n                      {\n                        className: \"box-title\"\n                      },\n                      \"Portfolio Page\"\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"box-tools pull-right\"\n                      },\n                      React.createElement(\n                        \"button\",\n                        {\n                          type: \"button\",\n                          className: \"btn btn-box-tool btn-minus\",\n                          \"data-widget\": \"collapse\"\n                        },\n                        React.createElement(\"i\", {\n                          className: \"fa fa-minus\"\n                        })\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"btn-group\"\n                        },\n                        React.createElement(\n                          \"button\",\n                          {\n                            type: \"button\",\n                            className: \"btn btn-box-tool dropdown-toggle\",\n                            \"data-toggle\": \"dropdown\"\n                          },\n                          React.createElement(\"i\", {\n                            className: \"fa fa-wrench\"\n                          })\n                        ),\n                        React.createElement(\n                          \"ul\",\n                          {\n                            className: \"dropdown-menu\",\n                            role: \"menu\"\n                          },\n                          React.createElement(\n                            \"li\",\n                            null,\n                            React.createElement(\n                              \"a\",\n                              {\n                                href: \"#\"\n                              },\n                              \"Action\"\n                            )\n                          ),\n                          React.createElement(\n                            \"li\",\n                            null,\n                            React.createElement(\n                              \"a\",\n                              {\n                                href: \"#\"\n                              },\n                              \"Another action \"\n                            )\n                          ),\n                          React.createElement(\n                            \"li\",\n                            null,\n                            React.createElement(\n                              \"a\",\n                              {\n                                href: \"#\"\n                              },\n                              \"Something else here\"\n                            )\n                          ),\n                          React.createElement(\"li\", {\n                            className: \"divider\"\n                          }),\n                          React.createElement(\n                            \"li\",\n                            null,\n                            React.createElement(\n                              \"a\",\n                              {\n                                href: \"#\"\n                              },\n                              \"Separated link\"\n                            )\n                          )\n                        )\n                      ),\n                      React.createElement(\n                        \"button\",\n                        {\n                          type: \"button\",\n                          className: \"btn btn-box-tool\",\n                          \"data-widget\": \"remove\"\n                        },\n                        React.createElement(\"i\", {\n                          className: \"fa fa-times\"\n                        })\n                      )\n                    )\n                  ),\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"box-body\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-md-12\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                          },\n                          React.createElement(\n                            \"h1\",\n                            {\n                              className: \"reportTitleName\"\n                            },\n                            \"Portfolio PAGE\"\n                          ),\n                          React.createElement(\"hr\", null),\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                            },\n                            React.createElement(\n                              \"form\",\n                              {\n                                className: \"newTemplateForm\"\n                              },\n                              \"    \",\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Case Title\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"text\",\n                                      ref: \"portfolioPageTitle\",\n                                      id: \"portfolioPageTitle\",\n                                      name: \"portfolioPageTitle\",\n                                      value: this.state.portfolioPageTitle,\n                                      onChange: this.handleChange,\n                                      className: \"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    })\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group subjectDiv\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Client Name\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"text\",\n                                      ref: \"portfolioPageName\",\n                                      id: \"portfolioPageName\",\n                                      name: \"portfolioPageName\",\n                                      value: this.state.portfolioPageName,\n                                      onChange: this.handleChange,\n                                      className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    })\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Project Description\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\n                                      \"div\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\"\n                                      },\n                                      React.createElement(\"div\", {\n                                        id: \"messageContent\",\n                                        name: \"portfolioPageBody\",\n                                        ref: \"portfolioPageBody\"\n                                      })\n                                    )\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group subjectDiv\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Video Link\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"text\",\n                                      ref: \"portfolioVideoLink\",\n                                      id: \"portfolioVideoLink\",\n                                      name: \"portfolioVideoLink\",\n                                      value: this.state.portfolioVideoLink,\n                                      onChange: this.handleChange,\n                                      className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    })\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group subjectDiv\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Image Upload\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"file\",\n                                      ref: \"blogImageFile\",\n                                      id: \"s3file\",\n                                      name: \"blogImageFile\",\n                                      onChange: this.handleUpload.bind(this),\n                                      className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    }),\n                                    this.state.isUploading ? React.createElement(\n                                      \"div\",\n                                      null,\n                                      React.createElement(\n                                        \"div\",\n                                        {\n                                          className: \"progress-sm\"\n                                        },\n                                        React.createElement(\n                                          \"div\",\n                                          {\n                                            className: \"progress-bar progress-bar-yellow\",\n                                            role: \"progressbar\",\n                                            \"data-width\": this.state.progressValue,\n                                            \"aria-valuemin\": \"0\",\n                                            \"aria-valuemax\": \"100\",\n                                            style: {\n                                              width: this.state.progressValue\n                                            }\n                                          },\n                                          React.createElement(\n                                            \"span\",\n                                            {\n                                              className: \"sr-only\"\n                                            },\n                                            this.state.progressValue,\n                                            \"% Complete\"\n                                          )\n                                        )\n                                      )\n                                    ) : React.createElement(\"div\", null)\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"imageContainer\"\n                                  },\n                                  this.renderImageData()\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group subjectDiv\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Logo Image Upload\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"file\",\n                                      ref: \"blogImageFile\",\n                                      id: \"s3fileLogo\",\n                                      name: \"blogImageFile\",\n                                      onChange: this.handleLogoUpload.bind(this),\n                                      className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    }),\n                                    this.state.isLogoUploading ? React.createElement(\n                                      \"div\",\n                                      null,\n                                      React.createElement(\n                                        \"div\",\n                                        {\n                                          className: \"progress-sm\"\n                                        },\n                                        React.createElement(\n                                          \"div\",\n                                          {\n                                            className: \"progress-bar progress-bar-yellow\",\n                                            role: \"progressbar\",\n                                            \"data-width\": this.state.logoProgressValue,\n                                            \"aria-valuemin\": \"0\",\n                                            \"aria-valuemax\": \"100\",\n                                            style: {\n                                              width: this.state.logoProgressValue\n                                            }\n                                          },\n                                          React.createElement(\n                                            \"span\",\n                                            {\n                                              className: \"sr-only\"\n                                            },\n                                            this.state.logoProgressValue,\n                                            \"% Complete\"\n                                          )\n                                        )\n                                      )\n                                    ) : React.createElement(\"div\", null)\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"imageContainer\"\n                                  },\n                                  this.renderLogoImageData()\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"button\",\n                                  {\n                                    onClick: this.handleSubmit.bind(this),\n                                    type: \"submit\",\n                                    className: \"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\"\n                                  },\n                                  \"Submit Page\"\n                                ),\n                                React.createElement(\n                                  \"button\",\n                                  {\n                                    onClick: this.handleUpdate.bind(this),\n                                    type: \"submit\",\n                                    className: \"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\"\n                                  },\n                                  \"Update Page\"\n                                )\n                              )\n                            )\n                          ),\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"dataTable tableBasicPage\"\n                            },\n                            React.createElement(\n                              \"table\",\n                              {\n                                className: \"heavyTable\",\n                                className: \"display\",\n                                width: \"100%\",\n                                cellSpacing: \"0\"\n                              },\n                              React.createElement(\n                                \"thead\",\n                                null,\n                                React.createElement(\n                                  \"tr\",\n                                  null,\n                                  React.createElement(\n                                    \"th\",\n                                    null,\n                                    \"Case Title\"\n                                  ),\n                                  React.createElement(\"th\", null),\n                                  React.createElement(\"th\", null)\n                                )\n                              ),\n                              React.createElement(\n                                \"tfoot\",\n                                null,\n                                React.createElement(\n                                  \"tr\",\n                                  null,\n                                  React.createElement(\n                                    \"th\",\n                                    null,\n                                    \"Case Title\"\n                                  ),\n                                  React.createElement(\"th\", null),\n                                  React.createElement(\"th\", null)\n                                )\n                              ),\n                              React.createElement(\n                                \"tbody\",\n                                null,\n                                this.renderTableRow()\n                              )\n                            )\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return PortfolioPage;\n}(TrackerReact(Component));\n\nEditPageContainer = createContainer(function (props) {\n  var postHandle = Meteor.subscribe('portfolios'); // var editPortfolios   = this.props.params.id;\n  // console.log(\"Param\" +editPortfolios);\n\n  var portfolios = Portfolios.find().fetch() || {};\n  console.log(portfolios);\n  var loading = !postHandle.ready();\n  return {\n    loading: loading,\n    portfolios: portfolios\n  };\n}, PortfolioPage);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/reactCMS/components/PortfolioPage.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","render","TrackerReact","createContainer","Validation","validator","Tracker","Portfolios","TempPortfolioImages","TempPortfolioLogoImages","PortfolioPage","props","metaContext","id","userId","dir","name","uploader","Slingshot","Upload","state","portfolioPageTitle","portfolios","portfolioPageName","portfolioPageBody","_id","portfolioVideoLink","upload","isUploading","isLogoUploading","logoProgressValue","progressValue","tempPortfolioImages","tempPortfolioLogoImages","edit","handleChange","bind","componentWillReceiveProps","nextProps","loading","setState","calculateProgress","uploadComputation","autorun","uploadProgress","Math","round","progress","isNaN","event","target","value","componentDidMount","$","length","dashboardCss","document","createElement","type","rel","href","head","append","hasClass","console","log","adminLte","src","setAttribute","summernote","height","maxHeight","minHeight","portfolioPageTracker","subscribe","find","fetch","tempPortfolioImageTracker","tempPortfolioLogoImageTracker","componentWillUnmount","remove","i","submitted","call","amazonUrl","logoAmazonUrl","stop","handleClose","e","preventDefault","getAttribute","params","handleLogoClose","renderImageData","imageArray","j","s3","push","k","map","tempPortfolioImage","handleUpload","comp","send","getElementById","files","error","downloadUrl","reason","Date","result","Bert","alert","renderLogoImageData","logoS3","tempPortfolioLogoImage","calculateLogoProgress","uploadLogoComputation","logoUploadProgress","handleLogoUpload","handleUpdate","pageName","refs","pageUrl","pageVideoLink","pageBody","lastModified","amazons3","logoAmazons3","uploadTime","swal","css","display","handleSubmit","pageNameExist","findOne","pageUrlExist","portfolioPage","val","html","attr","delete","title","text","showCancelButton","confirmButtonColor","confirmButtonText","closeOnConfirm","renderTableRow","width","EditPageContainer","postHandle","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/reactCMS/components/PortfolioPage.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\n\nimport {Portfolios} from '../api/Portfolios';\nimport {TempPortfolioImages} from '../api/Portfolios';\nimport {TempPortfolioLogoImages} from '../api/Portfolios';\n\nclass PortfolioPage extends TrackerReact (Component){\n  constructor(props) {\n\t  super(props);\n    var metaContext = {id: Meteor.userId(), dir: \"images\" , name: \"portfolioImage\"};\n    var uploader = new Slingshot.Upload(\"myFileUploads\" ,metaContext);\n\t  this.state = {\n\t    portfolioPageTitle      : this.props.portfolios,\n\t    portfolioPageName       : this.props.portfolios,\n\t    portfolioPageBody       : this.props.portfolios,\n      id                      : this.props.portfolios._id,\n      portfolios              : [],\n      portfolioVideoLink      : this.props.portfolios,\n      upload                  : uploader,\n      isUploading             : false,\n      isLogoUploading         : false,\n      logoProgressValue       : \"0%\",\n      progressValue           : \"0%\",\n      tempPortfolioImages     : [],\n      tempPortfolioLogoImages : [],\n      edit                    : false,\n\t  };\n  this.handleChange = this.handleChange.bind(this);\n\t}\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.portfolios){\n         this.setState({\n             portfolioPageTitle    : nextProps.portfolios.portfolioPageTitle,\n             portfolioPageName     : nextProps.portfolios.portfolioPageName,\n             portfolioPageBody     : nextProps.portfolios.portfolioPageBody,\n             portfolioVideoLink    : nextProps.portfolios.portfolioVideoLink,\n             id                    : nextProps.portfolios._id,\n         });\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  calculateProgress(){\n    this.uploadComputation = Tracker.autorun(() => {\n         const uploadProgress = Math.round(this.state.upload.progress() * 100);\n         if (!isNaN(uploadProgress)) this.setState({progressValue: uploadProgress +\"%\" });\n    });\n  }\n  handleChange(event){\n   const target = event.target;\n   const name   = target.name;\n   this.setState({\n    [name]: event.target.value,\n   });\n  }\n  componentDidMount() {\n    if(!!!$(\"link[href='/css/dashboard.css']\").length > 0){\n      var dashboardCss = document.createElement(\"link\");\n      dashboardCss.type=\"text/css\";\n      dashboardCss.rel =\"stylesheet\";\n      dashboardCss.href=\"/css/dashboard.css\";\n      document.head.append(dashboardCss);\n    }\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n      console.log(\"I am appended!\");\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      adminLte.setAttribute('id','adminLte');\n      $(\"body\").append(adminLte);\n    }\n    $('#messageContent').summernote({\n        height: 190,\n        maxHeight:190,\n        minHeight:175,\n      });\n    this.portfolioPageTracker = Tracker.autorun( ()=> {\n      Meteor.subscribe(\"portfolios\");\n      const portfolios = Portfolios.find().fetch();\n      this.setState({portfolios: portfolios});\n    });\n    this.tempPortfolioImageTracker = Tracker.autorun(()=>{\n      Meteor.subscribe('tempPortfolioImages');\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      this.setState({tempPortfolioImages});\n    });\n    this.tempPortfolioLogoImageTracker = Tracker.autorun(()=>{\n      Meteor.subscribe('tempPortfolioLogoImages');\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      this.setState({tempPortfolioLogoImages});\n    });\n    // $(\".image-box\").css({'background-image':'url('+  $(\".image-box\").attr('data-image')+')','background-size': 'cover'});\n  }\n  componentWillUnmount() {\n    $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n    const tempPortfolioImages = TempPortfolioImages.find().fetch();\n    for(i=0;i<tempPortfolioImages.length;i++){\n      if(!tempPortfolioImages[i].submitted)\n        Meteor.call('removeS3Data',tempPortfolioImages[i].amazonUrl);\n    }\n    const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n    for(i=0;i<tempPortfolioLogoImages.length;i++){\n      if(!tempPortfolioLogoImages[i].submitted)\n        Meteor.call('removeS3Data',tempPortfolioLogoImages[i].logoAmazonUrl);\n    }\n    Meteor.call('removePortfolioUnsubmitImages',Meteor.userId());\n    Meteor.call('removePortfolioLogoUnsubmitImages',Meteor.userId());\n    console.log('unmounted');\n    if(this.portfolioPageTracker)\n      this.portfolioPageTracker.stop();\n    if(this.tempPortfolioImageTracker)\n      this.tempPortfolioImageTracker.stop();\n    if(this.tempPortfolioLogoImageTracker)\n      this.tempPortfolioLogoImageTracker.stop();\n  }\n  handleClose(e){\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n    if(this.props.params.id&&this.state.edit){\n      Meteor.call('removeS3Data',e.target.getAttribute('id'));\n      Meteor.call('updateEditPortfolioPage',e.target.getAttribute('id'));\n    }\n    Meteor.call('removePortfolioUrlImages',e.target.getAttribute('id'));\n    Meteor.call('removeS3Data',e.target.getAttribute('id'));\n  }\n  handleLogoClose(e){\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n    if(this.props.params.id&&this.state.edit){\n      Meteor.call('removeS3Data',e.target.getAttribute('id'));\n      Meteor.call('updateEditPortfolioLogoPage',e.target.getAttribute('id'));\n    }\n    Meteor.call('removePortfolioLogoUrlImages',e.target.getAttribute('id'));\n    Meteor.call('removeS3Data',e.target.getAttribute('id'));\n  }\n  renderImageData(){\n    if(this.props.params.id && this.state.edit){\n      console.log(\"I have Id\");\n      const portfolios = Portfolios.find({'_id': this.props.params.id}).fetch();\n      var imageArray =[];\n      for(i=0;i<portfolios.length;i++){\n        for(j=0;j<portfolios[i].s3.length; j++){\n          if(portfolios[i].s3[j].amazonUrl != ''){\n            imageArray.push(\n            <div key={j} data-image={portfolios[i].s3[j].amazonUrl} className=\"image-box\">\n              <img src={portfolios[i].s3[j].amazonUrl} alt=\"\"/><button id={portfolios[i].s3[j].amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>);\n          }\n        }\n      }\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      for(k=0;k<tempPortfolioImages.length;k++){\n        if(tempPortfolioImages[k].amazonUrl != ''&& !tempPortfolioImages[k].submitted)\n          imageArray.push(\n            <div data-image={tempPortfolioImages[k].amazonUrl} className=\"image-box\">\n              <img src={tempPortfolioImages[k].amazonUrl} alt=\"\"/><button id={tempPortfolioImages[k].amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>\n          );\n      }\n      return imageArray;\n  }else{\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      return tempPortfolioImages.map((tempPortfolioImage)=>{\n        if(tempPortfolioImage.amazonUrl != ''&& !tempPortfolioImage.submitted)\n          return <div data-image={tempPortfolioImage.amazonUrl} className=\"image-box\">\n            <img src={tempPortfolioImage.amazonUrl} alt=\"\"/><button id={tempPortfolioImage.amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>;\n      });\n    }\n}\n  handleUpload(e) {\n      let id = Meteor.userId();\n      e.preventDefault();\n      this.setState({isUploading: true});\n      this.calculateProgress();\n      var comp = this;\n      // console.log(comp);\n      this.state.upload.send(document.getElementById('s3file').files[0], function (error, downloadUrl) {\n        if (error) {\n          // Log service detailed response.\n          console.error('Error uploading' + downloadUrl + error.reason);\n          console.error (error);\n        }\n        else {\n          comp.setState({progressValue:\"0%\"});\n          comp.setState({isUploading:false});\n          comp.uploadComputation.stop();\n          console.log(\"Success file uploaded! \" + downloadUrl);\n          // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n          Meteor.call('uploadTempPortfolioImages',id,downloadUrl,new Date(), function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n        }\n      });\n    }\n    renderLogoImageData(){\n      if(this.props.params.id && this.state.edit){\n        const portfolios = Portfolios.find({'_id': this.props.params.id}).fetch();\n        var imageArray =[];\n        for(i=0;i<portfolios.length;i++){\n          for(j=0;j<portfolios[i].logoS3.length; j++){\n            if(portfolios[i].logoS3[j].logoAmazonUrl != ''){\n              imageArray.push(\n              <div key={j} data-image={portfolios[i].logoS3[j].logoAmazonUrl} className=\"image-box\">\n                <img src={portfolios[i].logoS3[j].logoAmazonUrl} alt=\"\"/><button id={portfolios[i].logoS3[j].logoAmazonUrl} className=\"close\" onClick={this.handleLogoClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>);\n            }\n          }\n        }\n        const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n        for(k=0;k<tempPortfolioLogoImages.length;k++){\n          if(tempPortfolioLogoImages[k].logoAmazonUrl != ''&& !tempPortfolioLogoImages[k].submitted)\n            imageArray.push(\n              <div data-image={tempPortfolioLogoImages[k].logoAmazonUrl} className=\"image-box\">\n                <img src={tempPortfolioLogoImages[k].logoAmazonUrl} alt=\"\"/><button id={tempPortfolioLogoImages[k].logoAmazonUrl} className=\"close\" onClick={this.handleLogoClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>\n            );\n        }\n        return imageArray;\n    }else{\n        const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n        return tempPortfolioLogoImages.map((tempPortfolioLogoImage)=>{\n          if(tempPortfolioLogoImage.logoAmazonUrl != ''&& !tempPortfolioLogoImage.submitted)\n            return <div data-image={tempPortfolioLogoImage.logoAmazonUrl} className=\"image-box\">\n              <img src={tempPortfolioLogoImage.logoAmazonUrl} alt=\"\"/><button id={tempPortfolioLogoImage.logoAmazonUrl} className=\"close\" onClick={this.handleLogoClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>;\n        });\n      }\n  }\n    calculateLogoProgress(){\n      this.uploadLogoComputation = Tracker.autorun(() => {\n           const logoUploadProgress = Math.round(this.state.upload.progress() * 100);\n           if (!isNaN(logoUploadProgress)) this.setState({logoProgressValue: logoUploadProgress +\"%\" });\n      });\n    }\n    handleLogoUpload(e) {\n        let id = Meteor.userId();\n        e.preventDefault();\n        this.setState({isLogoUploading: true});\n        this.calculateLogoProgress();\n        var comp = this;\n        // console.log(comp);\n        this.state.upload.send(document.getElementById('s3fileLogo').files[0], function (error, downloadUrl) {\n          if (error) {\n            // Log service detailed response.\n            console.error('Error uploading '  + error.reason);\n            console.error (error);\n          }\n          else {\n            comp.setState({logoProgressValue:\"0%\"});\n            comp.setState({isLogoUploading:false});\n            comp.uploadLogoComputation.stop();\n            console.log(\"Success file uploaded! \" + downloadUrl);\n            // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n            Meteor.call('uploadTempPortfolioLogoImages',id,downloadUrl,new Date(), function(error,result){\n                if(error){\n                    console.log(error.reason);\n                }else if(result){\n                    Bert.alert(\"Successfully Inserted..!!\");\n                }\n            });\n          }\n        });\n      }\n  handleUpdate(e){\n    e.preventDefault();\n    this.setState({edit:true});\n    const tempPortfolioImages  = TempPortfolioImages.find().fetch();\n    const tempPortfolioLogoImages  = TempPortfolioLogoImages.find().fetch();\n    let pageName      = this.refs.portfolioPageTitle.value;\n    let pageUrl       = this.refs.portfolioPageName.value;\n    let pageVideoLink = this.refs.portfolioVideoLink.value;\n    let pageBody      = $('#messageContent').summernote('code');\n    let userId        = Meteor.userId();\n    let lastModified  = new Date();\n    let id            = e.target.getAttribute('id');\n    let amazons3      = [];\n    let logoAmazons3  = [];\n    for(i=0;i<tempPortfolioImages.length;i++){\n      if(!tempPortfolioImages[i].submitted){\n        amazons3.push({\n          'amazonUrl': tempPortfolioImages[i].amazonUrl,\n          'uploadTime': tempPortfolioImages[i].uploadTime,\n        });\n      }\n      Meteor.call('updateTempPortfolioImages',tempPortfolioImages[i]._id,true);\n    }\n    for(i=0;i<tempPortfolioLogoImages.length;i++){\n      if(!tempPortfolioLogoImages[i].submitted){\n        amazons3.push({\n          'amazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n          'uploadTime': tempPortfolioLogoImages[i].uploadTime,\n        });\n      }\n      Meteor.call('updateTempPortfolioLogoImages',tempPortfolioLogoImages[i]._id,true);\n    }\n    Meteor.call('updatePortfolioPage',id,pageName,pageUrl,pageVideoLink,pageBody,userId,lastModified,function(error,result){\n        if(error){\n            console.log(error.reason);\n        }else if(result){\n            Bert.alert(\"Successfully Updated..!!\");\n        }\n    });\n    for(j=0;j<tempPortfolioImages.length;j++){\n      if(!tempPortfolioImages[j].submitted){\n        Meteor.call('updatePortfolioAmazonUrl',tempPortfolioImages[j].amazonUrl,tempPortfolioImages[j].uploadTime,id,function(error,result){\n            if(error){\n                console.log(error.reason);\n            }else if(result){\n                Bert.alert(\"Successfully Updated..!!\");\n            }\n        });\n      }\n    }\n    for(j=0;j<tempPortfolioLogoImages.length;j++){\n      if(!tempPortfolioLogoImages[j].submitted){\n        Meteor.call('updatePortfolioLogoAmazonUrl',tempPortfolioLogoImages[j].logoAmazonUrl,tempPortfolioLogoImages[j].uploadTime,id,function(error,result){\n            if(error){\n                console.log(error.reason);\n            }else if(result){\n                Bert.alert(\"Successfully Updated..!!\");\n            }\n        });\n      }\n    }\n    Meteor.call('removeTempPortfolioImages',Meteor.userId());\n    Meteor.call('removeTempPortfolioLogoImages',Meteor.userId());\n    swal(\"Done\",\n    \"Your page has been Updated!.\",\n    \"success\");\n    $(\".newTemplateForm\").css({display:'none'});\n  }\n  handleSubmit(e){\n      e.preventDefault();\n      const tempPortfolioImages = TempPortfolioImages.find().fetch();\n      const tempPortfolioLogoImages = TempPortfolioLogoImages.find().fetch();\n      let pageName = this.refs.portfolioPageTitle.value;\n      let pageUrl = this.refs.portfolioPageName.value;\n      let pageVideoLink = this.refs.portfolioVideoLink.value;\n      let pageBody = $('#messageContent').summernote('code');\n      let userId = Meteor.userId();\n      let lastModified = \"\";\n      let pageNameExist = Portfolios.findOne({'portfolioPageTitle': pageName});\n      let pageUrlExist = Portfolios.findOne({'portfolioPageName': pageUrl});\n      let amazons3 = [];\n      let logoAmazons3 = [];\n      for(i=0;i<tempPortfolioImages.length;i++){\n        if(!tempPortfolioImages[i].submitted)\n          amazons3.push({\n            'amazonUrl': tempPortfolioImages[i].amazonUrl,\n            'uploadTime': tempPortfolioImages[i].uploadTime,\n          });\n        Meteor.call('updateTempPortfolioImages',tempPortfolioImages[i]._id,true);\n      }\n      for(i=0;i<tempPortfolioLogoImages.length;i++){\n        if(!tempPortfolioLogoImages[i].submitted)\n          logoAmazons3.push({\n            'logoAmazonUrl': tempPortfolioLogoImages[i].logoAmazonUrl,\n            'uploadTime': tempPortfolioLogoImages[i].uploadTime,\n          });\n        Meteor.call('updateTempPortfolioLogoImages',tempPortfolioLogoImages[i]._id,true);\n      }\n      if(pageNameExist){\n          swal(\"Oops...!\",\"This page name is already taken!\",\"error\");\n      }else if(pageUrlExist){\n          swal(\"Oops...!\",\"This page url is already taken!\",\"error\");\n      }else{\n          Meteor.call('createPortfolioPage',pageName,pageUrl,pageVideoLink,pageBody,amazons3,logoAmazons3,userId,lastModified,function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n      }\n      Meteor.call('removeTempPortfolioImages',Meteor.userId());\n      Meteor.call('removeTempPortfolioLogoImages',Meteor.userId());\n      swal(\"Done\",\n      \"Your page has been Created!.\",\n      \"success\");\n        $(\".newTemplateForm\").css({display:'none'});\n  }\n  edit(e){\n    e.preventDefault();\n    this.setState({'edit': true});\n    const portfolios = Portfolios.find({_id: this.props.params.id}).fetch();\n    portfolios.map((portfolioPage)=>{\n      $(\"#portfolioPageTitle\").val(portfolioPage.portfolioPageTitle);\n      $(\"#portfolioPageName\").val(portfolioPage.portfolioPageName);\n      $(\"#portfolioVideoLink\").val(portfolioPage.portfolioVideoLink);\n      $('.note-editable').html(portfolioPage.portfolioPageBody);\n      $('.updatebtn').attr(\"id\",portfolioPage._id);\n    });\n    $(\".updatebtn\").css({display:'block'});\n    $(\".sendtxtmsgbtn\").css({display:'none'});\n    $(\".newTemplateForm\").css({display:'block'});\n\n  }\n  delete(e){\n    e.preventDefault();\n    // console.log(e.target.getAttribute('id'));\n    let id = e.target.getAttribute('id');\n    swal({\n      title: \"Are you sure?\",\n      text: \"You want to delete this page!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      closeOnConfirm: false,\n      html: false\n    }, function(){\n      Meteor.call(\"deletePortfolioPage\",id,function(error,result){\n          if(error){\n              console.log(error.reason);\n          }else if(result){\n              Bert.alert(\"Successfully Deleted..!!\");\n          }\n      });\n      swal(\"Done\",\n      \"Your page has been deleted!.\",\n      \"success\");\n    });\n      $(\".newTemplateForm\").css({display:'none'});\n  }\n\n  renderTableRow(){\n    return this.state.portfolios.map((portfolioPage) =>{\n      return <tr><td>{portfolioPage.portfolioPageTitle}</td> <td><a href={'/portfolio/' +portfolioPage._id} onClick={this.edit.bind(this)}>\n        <i className=\"fa fa-pencil\"></i>Edit\n      </a></td><td><a href=\"#\" id={portfolioPage._id} onClick={this.delete.bind(this)}>\n        <i className=\"fa fa-trash-o\"></i> Delete\n      </a></td></tr>;\n      });\n  }\n  render(){\n    return(\n      <div>\n        {/* Content Wrapper. Contains page content */}\n        <div className=\"content-wrapper\">\n          {/* Content Header (Page header) */}\n          <section className=\"content-header\">\n            <h1>Dashboard\n              <small>Version 3.0</small>\n            </h1>\n            <ol className=\"breadcrumb\">\n              <li>\n                <a href=\"#\"><i className=\"fa fa-dashboard\" /> Home</a></li>\n              <li className=\"active\">Portfolio Page</li>\n            </ol>\n          </section>\n          {/* Main content */}\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"box\">\n                  <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">\n                      Portfolio Page\n                    </h3>\n                    <div className=\"box-tools pull-right\">\n                      <button type=\"button\" className=\"btn btn-box-tool btn-minus\" data-widget=\"collapse\">\n                        <i className=\"fa fa-minus\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\">\n                          <i className=\"fa fa-wrench\" /></button>\n                        <ul className=\"dropdown-menu\" role=\"menu\">\n                          <li>\n                            <a href=\"#\">Action</a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Another action </a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Something else here</a>\n                          </li>\n                          <li className=\"divider\" />\n                          <li>\n                            <a href=\"#\">\n                            Separated link\n                            </a>\n                          </li>\n                        </ul>\n                      </div>\n                      <button type=\"button\" className=\"btn btn-box-tool\" data-widget=\"remove\">\n                        <i className=\"fa fa-times\" />\n                      </button>\n                    </div>\n                  </div>\n                  {/* /.box-header */}\n                  <div className=\"box-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <div className=\"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t<h1 className=\"reportTitleName\">Portfolio PAGE</h1>\n                \t\t\t\t\t<hr/>\n                \t\t\t\t\t<div className=\"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t<form className=\"newTemplateForm\">    <div className=\"row inputrow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Case Title<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"portfolioPageTitle\" id=\"portfolioPageTitle\" name=\"portfolioPageTitle\" value={this.state.portfolioPageTitle}  onChange={this.handleChange} className=\"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Client Name<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"portfolioPageName\" id=\"portfolioPageName\" name=\"portfolioPageName\" value={this.state.portfolioPageName} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t<div className=\"row inputrow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Project Description<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t\t <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\">\n                \t\t\t\t\t\t\t\t\t \t<div id=\"messageContent\" name=\"portfolioPageBody\"\n                                                        ref = \"portfolioPageBody\"\n                                                            ></div>\n                \t\t\t\t\t\t\t\t\t </div>\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Video Link<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"text\" ref=\"portfolioVideoLink\" id=\"portfolioVideoLink\" name=\"portfolioVideoLink\" value={this.state.portfolioVideoLink} onChange={this.handleChange}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                \t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t\t<div className=\"form-group subjectDiv\">\n                \t\t\t\t\t\t\t\t\t <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Image Upload<span className=\"astrick\">*</span>:</label>\n                \t\t\t\t\t\t\t\t        <input type=\"file\" ref=\"blogImageFile\" id=\"s3file\" name=\"blogImageFile\"  onChange={this.handleUpload.bind(this)}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                          {this.state.isUploading?\n                                            <div><div className=\"progress-sm\">\n                                              <div className=\"progress-bar progress-bar-yellow\" role=\"progressbar\" data-width={this.state.progressValue} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.progressValue} } >\n                                                  <span className=\"sr-only\">{this.state.progressValue}% Complete\n                                                  </span>\n                                                </div>\n                                              </div>\n                                            </div>: <div></div>}\n\n                \t\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t\t\t</div>\n                              </div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"imageContainer\">\n                                  {this.renderImageData()}\n                                </div>\n                \t\t\t\t\t\t\t</div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                  <div className=\"form-group subjectDiv\">\n                                   <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Logo Image Upload<span className=\"astrick\">*</span>:</label>\n                                        <input type=\"file\" ref=\"blogImageFile\" id=\"s3fileLogo\" name=\"blogImageFile\"  onChange={this.handleLogoUpload.bind(this)}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                          {this.state.isLogoUploading?\n                                            <div><div className=\"progress-sm\">\n                                              <div className=\"progress-bar progress-bar-yellow\" role=\"progressbar\" data-width={this.state.logoProgressValue} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.logoProgressValue} } >\n                                                  <span className=\"sr-only\">{this.state.logoProgressValue}% Complete\n                                                  </span>\n                                                </div>\n                                              </div>\n                                            </div>: <div></div>}\n\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"imageContainer\">\n                                  {this.renderLogoImageData()}\n                                </div>\n                              </div>\n\n                \t\t\t\t\t\t\t<div className=\"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                \t\t\t\t\t\t\t\t<button onClick={this.handleSubmit.bind(this)} type=\"submit\" className=\"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\">Submit Page</button>\n                \t\t\t\t\t\t\t\t<button  onClick={this.handleUpdate.bind(this)} type=\"submit\" className=\"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\">Update Page</button>\n                \t\t\t\t\t\t\t</div>\n                \t\t\t\t\t\t</form>\n                \t\t\t\t\t</div>\n                          <div className=\"dataTable tableBasicPage\">\n                              <table className=\"heavyTable\"  className=\"display\" width=\"100%\" cellSpacing=\"0\">\n                                  <thead>\n                                      <tr>\n                                          <th>Case Title</th>\n                                          <th></th>\n                                          <th></th>\n                                      </tr>\n                                  </thead>\n                                  <tfoot>\n                                      <tr>\n                                        <th>Case Title</th>\n                                        <th></th>\n                                        <th></th>\n                                      </tr>\n                                  </tfoot>\n                                  <tbody>\n                                          {this.renderTableRow()}\n                                  </tbody>\n                              </table>\n                          </div>\n                \t\t\t\t</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          {/* /.content */}\n        </div>\n        {/* /.content-wrapper */}\n      </div>\n\n    );\n  }\n}\nEditPageContainer = createContainer( props => {\n\n    const postHandle = Meteor.subscribe('portfolios');\n\t  // var editPortfolios   = this.props.params.id;\n    // console.log(\"Param\" +editPortfolios);\n    const portfolios = Portfolios.find().fetch()|| {};\n    console.log(portfolios);\n    const loading = !postHandle.ready();\n\n    return {\n        loading,\n        portfolios,\n    };\n}, PortfolioPage);\n\nexport default EditPageContainer;\n"]},"hash":"9ecc49222580ebaa7b2683bce0527836ce84dd3a"}

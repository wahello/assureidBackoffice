{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]}],"exports":{"exported":["ResetPassword"],"specifiers":[{"kind":"local","local":"ResetPassword","exported":"default"}]}}},"options":{"filename":"imports/website/forms/ResetPassword.jsx","filenameRelative":"imports/website/forms/ResetPassword.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/website/forms/ResetPassword.jsx.map","sourceFileName":"imports/website/forms/ResetPassword.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ResetPassword"},"ignored":false,"code":"module.export({\n  default: () => ResetPassword\n});\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\n\nclass ResetPassword extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      \"subscription\": {\n        user: Meteor.subscribe(\"userfunction\")\n      }\n    };\n  }\n\n  componentWillMount() {}\n\n  componentWillUnmount() {}\n\n  componentDidMount() {\n    $(\"#resetPassword\").validate();\n  }\n\n  'changepassword'(event) {\n    event.preventDefault();\n    var password = this.refs.resetPassword.value;\n    var passwordConfirm = this.refs.resetPasswordConfirm.value;\n    var newID = Session.get('newID');\n\n    if (newID) {\n      var resetPassword = newID;\n    } else {\n      var username = $('input[name=\"forgotEmail\"]').val();\n      var userOtp = Meteor.users.findOne({\n        \"username\": username\n      });\n\n      if (userOtp) {\n        var resetPassword = userOtp._id;\n      }\n    } // console.log(resetPassword + password + passwordConfirm);\n    //Check password is at least 6 chars long\n\n\n    var isValidPassword = function (password, passwordConfirm) {\n      if (password === passwordConfirm) {\n        return password.length >= 6 ? true : swal({\n          title: \"Password should be at least 6 characters long\",\n          text: \"Please try again\",\n          timer: 1700,\n          showConfirmButton: false,\n          type: \"error\"\n        });\n      } else {\n        return swal({\n          title: \"Password doesn't match\",\n          text: 'Please try again',\n          showConfirmButton: true,\n          type: 'error'\n        }); //End of error swal\n      } //End of else\n\n    };\n\n    if (isValidPassword(password, passwordConfirm)) {\n      Meteor.call(\"resetPasswordUsingotp\", resetPassword, password, function (err) {\n        if (err) {\n          console.log('We are sorry but something went wrong.');\n        } else {\n          Meteor.logout(); // FlowRouter.go('/userlogin');\n\n          $('#ResetBlock').hide();\n          $('#outerLoginWrapper').show();\n          swal(\"Password has been changed successfully!!\");\n        }\n      });\n    }\n\n    return false;\n  }\n\n  inputEffect(event) {\n    event.preventDefault(); // alert('hi');\n\n    if ($(event.target).val() != \"\") {\n      $(event.target).addClass(\"has-content\");\n    } else {\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"\",\n        id: \"ResetBlock\"\n      },\n      React.createElement(\n        \"div\",\n        {\n          className: \"row\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\"\n          },\n          React.createElement(\"img\", {\n            src: \"../images/AssureIDlogo.png\",\n            className: \"loginPageLogo\",\n            alt: \"AssureID logo\"\n          }),\n          React.createElement(\n            \"h2\",\n            null,\n            \"Reset Password\"\n          )\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"FormWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n          },\n          React.createElement(\n            \"form\",\n            {\n              id: \"resetPassword\",\n              onSubmit: this.changepassword.bind(this)\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"input-effect input-group\"\n                },\n                React.createElement(\n                  \"span\",\n                  {\n                    className: \"input-group-addon addons\",\n                    id: \"basic-addon1\"\n                  },\n                  React.createElement(\"i\", {\n                    className: \"fa fa-lock\",\n                    \"aria-hidden\": \"true\"\n                  })\n                ),\n                React.createElement(\"input\", {\n                  type: \"password\",\n                  className: \"effect-21 form-control loginInputs\",\n                  ref: \"resetPassword\",\n                  onBlur: this.inputEffect.bind(this),\n                  name: \"resetPassword\",\n                  \"aria-label\": \"Password\",\n                  \"aria-describedby\": \"basic-addon1\",\n                  title: \"Password should be at least 6 characters long!\",\n                  pattern: \".{6,}\",\n                  required: true\n                }),\n                React.createElement(\n                  \"label\",\n                  null,\n                  \"Password\"\n                ),\n                React.createElement(\n                  \"span\",\n                  {\n                    className: \"focus-border\"\n                  },\n                  React.createElement(\"i\", null)\n                )\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"input-effect input-group\"\n                },\n                React.createElement(\n                  \"span\",\n                  {\n                    className: \"input-group-addon addons\",\n                    id: \"basic-addon1\"\n                  },\n                  React.createElement(\"i\", {\n                    className: \"fa fa-lock\",\n                    \"aria-hidden\": \"true\"\n                  })\n                ),\n                React.createElement(\"input\", {\n                  type: \"password\",\n                  className: \"effect-21 form-control loginInputs\",\n                  ref: \"resetPasswordConfirm\",\n                  onBlur: this.inputEffect.bind(this),\n                  name: \"resetPasswordConfirm\",\n                  \"aria-label\": \"Confirm Password\",\n                  \"aria-describedby\": \"basic-addon1\",\n                  title: \"Password should be at least 6 characters long!\",\n                  pattern: \".{6,}\",\n                  required: true\n                }),\n                React.createElement(\n                  \"label\",\n                  null,\n                  \"Confirm Password\"\n                ),\n                React.createElement(\n                  \"span\",\n                  {\n                    className: \"focus-border\"\n                  },\n                  React.createElement(\"i\", null)\n                )\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n              },\n              React.createElement(\n                \"button\",\n                {\n                  type: \"submit\",\n                  className: \"btn col-lg-12 col-md-12 col-sm-12 col-xs-12 submitBtn\"\n                },\n                \"Reset Password\"\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n}","map":{"version":3,"sources":["imports/website/forms/ResetPassword.jsx"],"names":["module","export","default","ResetPassword","React","watch","require","v","render","TrackerReact","Component","constructor","state","user","Meteor","subscribe","componentWillMount","componentWillUnmount","componentDidMount","$","validate","event","preventDefault","password","refs","resetPassword","value","passwordConfirm","resetPasswordConfirm","newID","Session","get","username","val","userOtp","users","findOne","_id","isValidPassword","length","swal","title","text","timer","showConfirmButton","type","call","err","console","log","logout","hide","show","inputEffect","target","addClass","removeClass","changepassword","bind"],"mappings":"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","file":"imports/website/forms/ResetPassword.jsx.map","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\n\nexport default class ResetPassword extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n      \"subscription\" : { \n        user             : Meteor.subscribe(\"userfunction\"),  \n      }\n    }\n  }\n  componentWillMount(){\n  }\n  componentWillUnmount(){\n  }\n  componentDidMount() {\n    $(\"#resetPassword\").validate();\n  }\n  'changepassword'(event) {\n    event.preventDefault();\n    var password        = this.refs.resetPassword.value;\n    var passwordConfirm = this.refs.resetPasswordConfirm.value;\n    var newID = Session.get('newID');\n    if(newID){\n      var resetPassword = newID;\n    }else{\n      var username = $('input[name=\"forgotEmail\"]').val();\n      var userOtp = Meteor.users.findOne({\"username\":username});\n      if(userOtp){\n        var resetPassword = userOtp._id;\n      }\n    }\n    // console.log(resetPassword + password + passwordConfirm);\n\n    //Check password is at least 6 chars long\n    var isValidPassword = function(password, passwordConfirm) {\n      if (password === passwordConfirm) {\n        return password.length >= 6 ? true : swal({\n          title: \"Password should be at least 6 characters long\",\n          text: \"Please try again\",\n          timer: 1700,\n          showConfirmButton: false,\n          type: \"error\"\n        });\n      }else{\n        return swal({\n          title: \"Password doesn't match\",\n          text: 'Please try again',\n          showConfirmButton: true,\n          type: 'error'\n        }); //End of error swal\n      } //End of else\n    }\n\n    if (isValidPassword(password, passwordConfirm)) { \n      Meteor.call(\"resetPasswordUsingotp\", resetPassword, password, function(err) {\n        if (err) {\n          console.log('We are sorry but something went wrong.');\n        }else {\n          Meteor.logout();\n          // FlowRouter.go('/userlogin');\n          $('#ResetBlock').hide();\n          $('#outerLoginWrapper').show();\n          swal(\"Password has been changed successfully!!\");\n        }\n      });\n    }\n    return false;\n  }\n\n  inputEffect(event){\n    event.preventDefault();\n    // alert('hi');\n    if($(event.target).val() != \"\"){\n      $(event.target).addClass(\"has-content\");\n    }else{\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"\" id=\"ResetBlock\">\n        <div className=\"row\">\n          <div className=\"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\">\n            <img src=\"../images/AssureIDlogo.png\" className=\"loginPageLogo\"  alt=\"AssureID logo\"/> \n            <h2>Reset Password</h2>\n          </div>\n          <div className=\"FormWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <form id=\"resetPassword\" onSubmit={this.changepassword.bind(this)}>\n              <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"input-effect input-group\">\n                  <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-lock\" aria-hidden=\"true\"></i></span>\n                  <input type=\"password\" className=\"effect-21 form-control loginInputs\" ref=\"resetPassword\" onBlur={this.inputEffect.bind(this)} name=\"resetPassword\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" title=\"Password should be at least 6 characters long!\" pattern=\".{6,}\" required/>\n                  <label>Password</label>\n                  <span className=\"focus-border\">\n                    <i></i>\n                  </span>\n                </div>\n              </div> \n              <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"input-effect input-group\">\n                  <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-lock\" aria-hidden=\"true\"></i></span>\n                  <input type=\"password\" className=\"effect-21 form-control loginInputs\" ref=\"resetPasswordConfirm\" onBlur={this.inputEffect.bind(this)} name=\"resetPasswordConfirm\" aria-label=\"Confirm Password\" aria-describedby=\"basic-addon1\" title=\"Password should be at least 6 characters long!\" pattern=\".{6,}\" required/>\n                  <label>Confirm Password</label>\n                  <span className=\"focus-border\">\n                    <i></i>\n                  </span>\n                </div>\n              </div> \n              <div className=\"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"> \n                <button type=\"submit\" className=\"btn col-lg-12 col-md-12 col-sm-12 col-xs-12 submitBtn\">Reset Password</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"hash":"524f88676610030362ef1d6bb7d7bd7412b24f08"}

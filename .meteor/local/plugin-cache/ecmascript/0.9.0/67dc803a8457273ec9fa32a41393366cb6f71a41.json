{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["QualificationLevel"],"specifiers":[{"kind":"local","local":"QualificationLevel","exported":"QualificationLevel"}]}}},"options":{"filename":"imports/dashboard/forms/api/QualificationLevel.js","filenameRelative":"imports/dashboard/forms/api/QualificationLevel.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/api/QualificationLevel.js.map","sourceFileName":"imports/dashboard/forms/api/QualificationLevel.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"QualificationLevel"},"ignored":false,"code":"module.export({\n  QualificationLevel: () => QualificationLevel\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst QualificationLevel = new Mongo.Collection(\"qualificationLevel\");\n\nif (Meteor.isServer) {\n  Meteor.publish('qualificationLevel', () => {\n    return QualificationLevel.find({});\n  });\n  Meteor.publish('singlequalificationLevel', id => {\n    return QualificationLevel.find({\n      \"_id\": id\n    });\n  });\n  Meteor.methods({\n    'createQualificationLevel': function (QualificationLevelTitle) {\n      QualificationLevel.insert({\n        'QualificationLevelTitle': QualificationLevelTitle,\n        'createdAt': new Date()\n      });\n    },\n    'updateQualificationLevel': function (id, QualificationTitle) {\n      QualificationLevel.update({\n        \"_id\": id\n      }, {\n        $set: {\n          'QualificationLevelTitle': QualificationTitle\n        }\n      });\n    },\n    'deleteQualificationLevel': function (id) {\n      QualificationLevel.remove({\n        \"_id\": id\n      });\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/forms/api/QualificationLevel.js"],"names":["module","export","QualificationLevel","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","id","methods","QualificationLevelTitle","insert","Date","QualificationTitle","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,sBAAmB,MAAIA;AAAxB,CAAd;AAA2D,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAGrI,MAAMJ,qBAAqB,IAAIC,MAAMK,UAAV,CAAqB,oBAArB,CAA3B;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AAChBF,SAAOG,OAAP,CAAe,oBAAf,EAAoC,MAAI;AACpC,WAAOR,mBAAmBS,IAAnB,CAAwB,EAAxB,CAAP;AACH,GAFD;AAGAJ,SAAOG,OAAP,CAAe,0BAAf,EAA2CE,EAAD,IAAM;AAC5C,WAAOV,mBAAmBS,IAAnB,CAAwB;AAAC,aAAMC;AAAP,KAAxB,CAAP;AACH,GAFD;AAIDL,SAAOM,OAAP,CAAe;AACZ,gCAA2B,UAASC,uBAAT,EAAiC;AAC3DZ,yBAAmBa,MAAnB,CAA0B;AACtB,mCAA6BD,uBADP;AAEtB,qBAAoB,IAAIE,IAAJ;AAFE,OAA1B;AAIC,KANU;AAOX,gCAA2B,UAASJ,EAAT,EAAYK,kBAAZ,EAA+B;AACxDf,yBAAmBgB,MAAnB,CAA0B;AAAC,eAAMN;AAAP,OAA1B,EAAqC;AAACO,cAAK;AAAC,qCAA6BF;AAA9B;AAAN,OAArC;AACD,KATU;AAUX,gCAA2B,UAASL,EAAT,EAAY;AACrCV,yBAAmBkB,MAAnB,CAA0B;AAAC,eAAMR;AAAP,OAA1B;AACD;AAZU,GAAf;AAeD","file":"imports/dashboard/forms/api/QualificationLevel.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const QualificationLevel = new Mongo.Collection(\"qualificationLevel\");\n\nif(Meteor.isServer){\n   Meteor.publish('qualificationLevel',()=>{\n       return QualificationLevel.find({});\n   });\n   Meteor.publish('singlequalificationLevel',(id)=>{\n       return QualificationLevel.find({\"_id\":id});\n   });   \n\n\t Meteor.methods({\n\t \t \t'createQualificationLevel':function(QualificationLevelTitle){\n    \t\tQualificationLevel.insert({\n          'QualificationLevelTitle'  : QualificationLevelTitle,\n          'createdAt'       : new Date(),\n    \t\t});  \n      },\n      'updateQualificationLevel':function(id,QualificationTitle){\n        QualificationLevel.update({\"_id\":id},{$set:{'QualificationLevelTitle'  : QualificationTitle}});\n      },\n      'deleteQualificationLevel':function(id){\n        QualificationLevel.remove({\"_id\":id});\n      }\n\t });\n\n}\n"]},"hash":"67dc803a8457273ec9fa32a41393366cb6f71a41"}

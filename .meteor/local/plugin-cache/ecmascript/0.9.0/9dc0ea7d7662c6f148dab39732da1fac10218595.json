{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"./ListOfColleges.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ListOfColleges"}]},{"source":"../api/College.js","imported":["College"],"specifiers":[{"kind":"named","imported":"College","local":"College"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/forms/college/AddEditCollege.jsx","filenameRelative":"imports/dashboard/forms/college/AddEditCollege.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/college/AddEditCollege.jsx.map","sourceFileName":"imports/dashboard/forms/college/AddEditCollege.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AddEditCollege"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n  browserHistory(v) {\n    browserHistory = v;\n  }\n\n}, 3);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 4);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n  Link(v) {\n    Link = v;\n  }\n\n}, 5);\nlet ListOfColleges;\nmodule.watch(require(\"./ListOfColleges.jsx\"), {\n  default(v) {\n    ListOfColleges = v;\n  }\n\n}, 6);\nlet College;\nmodule.watch(require(\"../api/College.js\"), {\n  College(v) {\n    College = v;\n  }\n\n}, 7);\n\nclass AddEditCollege extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collegeName: '',\n      universityName: '',\n      collegeStatus: '',\n      // button : 'ADD',\n      \"subscription\": {\n        \"college\": Meteor.subscribe(\"college\")\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      if (nextProps.college) {\n        this.setState({\n          collegeName: nextProps.college.collegeName,\n          universityName: nextProps.college.universityName,\n          collegeStatus: nextProps.college.collegeStatus,\n          id: nextProps.college._id,\n          button: nextProps.button\n        });\n      }\n    } else {\n      this.setState({\n        collegeName: '',\n        universityName: '',\n        collegeStatus: '',\n        id: '',\n        button: ''\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    $(\"html,body\").scrollTop(0);\n\n    if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      $(\"body\").append(adminLte);\n    }\n  }\n\n  componentWillMount() {// if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n    //   var dashboardCss = document.createElement(\"link\");\n    //   dashboardCss.type = \"text/css\"; \n    //   dashboardCss.rel = \"stylesheet\";\n    //   dashboardCss.href = \"/css/dashboard.css\"; \n    //   document.head.append(dashboardCss);\n    // }\n  }\n\n  componentWillUnmount() {\n    $(\"script[src='/js/adminLte.js']\").remove(); // $(\"link[href='/css/dashboard.css']\").remove(); \n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  uppercase(str) {\n    var array1 = str.split(' ');\n    var newarray1 = [];\n\n    for (var x = 0; x < array1.length; x++) {\n      newarray1.push(array1[x].charAt(0).toUpperCase() + array1[x].slice(1));\n    }\n\n    return newarray1.join(' ');\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var collegeName = this.uppercase(this.refs.collegeName.value);\n    var universityName = this.uppercase(this.refs.universityName.value);\n    var collegeStatus = this.refs.collegeStatus.value;\n    var id = this.props.params.id;\n\n    if (id) {\n      Meteor.call('updateCollegeData', id, collegeName, universityName, collegeStatus, (error, result) => {\n        if (error) {\n          console.log(error.reason);\n        } else {\n          swal(\"Done\", \"College Data has been Updated!.\", \"success\");\n          var path = \"/admin/College\";\n          browserHistory.replace(path);\n          $(\".collegeName\").val(\"\");\n          $(\".universityName\").val(\"\");\n          $(\".collegeStatus\").val(\"\");\n        }\n      });\n    } else {\n      Meteor.call('createCollegeData', collegeName, universityName, collegeStatus, (error, result) => {\n        if (error) {\n          console.log(error.reason);\n        } else {\n          swal(\"Done\", \"College Data has been Created!.\", \"success\");\n          $(\".collegeName\").val(\"\");\n          $(\".universityName\").val(\"\");\n          $(\".collegeStatus\").val(\"\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"content-wrapper\"\n      },\n      React.createElement(\n        \"section\",\n        {\n          className: \"content-header\"\n        },\n        React.createElement(\n          \"h1\",\n          null,\n          \" Master Data \"\n        ),\n        React.createElement(\n          \"ol\",\n          {\n            className: \"breadcrumb\"\n          },\n          React.createElement(\n            \"li\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: \"#\"\n              },\n              React.createElement(\"i\", {\n                className: \"fa fa-newspaper-o\"\n              }),\n              \"Master Data\"\n            )\n          ),\n          React.createElement(\n            \"li\",\n            {\n              className: \"active\"\n            },\n            \"Manage College\"\n          )\n        )\n      ),\n      React.createElement(\n        \"section\",\n        {\n          className: \"content\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"box box-primary\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box-header with-border\"\n                },\n                React.createElement(\n                  \"h2\",\n                  {\n                    className: \"box-title\"\n                  },\n                  \"Manage College\"\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box-body\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"col-lg-12 col-sm-12 col-xs-12 col-md-12\"\n                  },\n                  React.createElement(\n                    \"form\",\n                    {\n                      id: \"\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row inputrow\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"College Name\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"collegeName\",\n                            id: \"collegeName\",\n                            name: \"collegeName\",\n                            value: this.state.collegeName,\n                            onChange: this.handleChange,\n                            className: \"templateName collegeName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                          })\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row inputrow\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"University Name\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"universityName\",\n                            id: \"universityName\",\n                            name: \"universityName\",\n                            value: this.state.universityName,\n                            onChange: this.handleChange,\n                            className: \"templateName universityName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                          })\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row inputrow\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"Status\"\n                          ),\n                          React.createElement(\n                            \"select\",\n                            {\n                              className: \"form-control inputText collegeStatus\",\n                              ref: \"collegeStatus\",\n                              value: this.state.collegeStatus,\n                              onChange: this.handleChange,\n                              id: \"collegeStatus\",\n                              name: \"collegeStatus\",\n                              required: true\n                            },\n                            React.createElement(\n                              \"option\",\n                              {\n                                value: \"Functioning\"\n                              },\n                              \"Functioning\"\n                            ),\n                            React.createElement(\n                              \"option\",\n                              {\n                                value: \"Fake\"\n                              },\n                              \"Fake\"\n                            ),\n                            React.createElement(\n                              \"option\",\n                              {\n                                value: \"Disfunctioning\"\n                              },\n                              \"Disfunctioning\"\n                            )\n                          )\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12\"\n                      },\n                      React.createElement(\n                        \"button\",\n                        {\n                          className: \"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\",\n                          onClick: this.handleSubmit.bind(this),\n                          type: \"submit\",\n                          value: \"\"\n                        },\n                        this.state.button\n                      )\n                    )\n                  )\n                ),\n                React.createElement(ListOfColleges, null)\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditPageContainer = withTracker(({\n  params\n}) => {\n  var _id = params.id;\n  const postHandle = Meteor.subscribe('singlecollege', _id); // var editServices   = this.props.params.id;\n  // console.log(\"Param\" +editServices);\n\n  const college = College.findOne({\n    \"_id\": _id\n  }) || {};\n  const loading = !postHandle.ready();\n\n  if (_id) {\n    var button = \"UPDATE\";\n    return {\n      loading,\n      college,\n      button\n    };\n  } else {\n    var button = \"ADD\";\n    return {\n      loading,\n      college,\n      button\n    };\n  }\n})(AddEditCollege);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/forms/college/AddEditCollege.jsx"],"names":["React","Component","module","watch","require","default","v","render","TrackerReact","browserHistory","withTracker","Link","ListOfColleges","College","AddEditCollege","constructor","props","state","collegeName","universityName","collegeStatus","Meteor","subscribe","handleChange","bind","componentWillReceiveProps","nextProps","loading","college","setState","id","_id","button","componentDidMount","$","scrollTop","length","hasClass","adminLte","document","createElement","type","src","append","componentWillMount","componentWillUnmount","remove","event","target","name","value","uppercase","str","array1","split","newarray1","x","push","charAt","toUpperCase","slice","join","handleSubmit","preventDefault","refs","params","call","error","result","console","log","reason","swal","path","replace","val","EditPageContainer","postHandle","findOne","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/forms/college/AddEditCollege.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport {browserHistory} from 'react-router';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport { Link } from 'react-router';\nimport ListOfColleges from './ListOfColleges.jsx';\nimport { College } from '../api/College.js'; \n\nclass AddEditCollege extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);  \n    this.state = {\n      collegeName    : '',\n      universityName : '',\n      collegeStatus  : '',\n      // button : 'ADD',\n      \"subscription\"  : {\n        \"college\" : Meteor.subscribe(\"college\"),\n      }  \n    }; \n     this.handleChange = this.handleChange.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.college){\n         this.setState({\n             collegeName         : nextProps.college.collegeName,\n             universityName      : nextProps.college.universityName,\n             collegeStatus       : nextProps.college.collegeStatus,\n             id                  : nextProps.college._id,\n             button              : nextProps.button,\n         });\n      }\n    }else{\n      this.setState({\n             collegeName     : '',\n             universityName  : '',\n             collegeStatus   : '',\n             id              : '',\n             button          : '',\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\tcomponentDidMount() {\n    $(\"html,body\").scrollTop(0);\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n     var adminLte = document.createElement(\"script\");  \n     adminLte.type=\"text/javascript\";  \n     adminLte.src = \"/js/adminLte.js\";  \n     $(\"body\").append(adminLte);  \n    }\n  }\n  componentWillMount() {\n    // if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n    //   var dashboardCss = document.createElement(\"link\");\n    //   dashboardCss.type = \"text/css\"; \n    //   dashboardCss.rel = \"stylesheet\";\n    //   dashboardCss.href = \"/css/dashboard.css\"; \n    //   document.head.append(dashboardCss);\n    // }\n  }\n  componentWillUnmount(){  \n     $(\"script[src='/js/adminLte.js']\").remove(); \n     // $(\"link[href='/css/dashboard.css']\").remove(); \n   }\n  handleChange(event){\n     const target = event.target;\n     const name   = target.name;\n     this.setState({\n      [name]: event.target.value,\n     });\n   }\n  uppercase(str)\n  {\n    var array1 = str.split(' ');\n    var newarray1 = [];\n      \n    for(var x = 0; x < array1.length; x++){\n        newarray1.push(array1[x].charAt(0).toUpperCase()+array1[x].slice(1));\n    }\n    return newarray1.join(' ');\n  } \n   handleSubmit(event){\n    event.preventDefault();\n    var collegeName       = this.uppercase(this.refs.collegeName.value);\n    var universityName    = this.uppercase(this.refs.universityName.value);\n    var collegeStatus     = this.refs.collegeStatus.value;\n    var id = this.props.params.id;\n    if(id){\n      Meteor.call('updateCollegeData',id,collegeName,universityName,collegeStatus,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"College Data has been Updated!.\",\"success\"); \n          var path = \"/admin/College\";\n          browserHistory.replace(path);\n          $(\".collegeName\").val(\"\");\n          $(\".universityName\").val(\"\");\n          $(\".collegeStatus\").val(\"\"); \n        }            \n      });\n    }else{\n      Meteor.call('createCollegeData',collegeName,universityName,collegeStatus,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"College Data has been Created!.\",\"success\");  \n          $(\".collegeName\").val(\"\");\n          $(\".universityName\").val(\"\");\n          $(\".collegeStatus\").val(\"\");\n        }            \n      });  \n    }\n   }\n\trender() {\n   return (\n    <div className=\"content-wrapper\">\n      <section className=\"content-header\">\n        <h1> Master Data </h1>\n        <ol className=\"breadcrumb\">\n          <li>\n            <a href=\"#\"><i className=\"fa fa-newspaper-o\" />Master Data</a></li>\n          <li className=\"active\">Manage College</li>\n        </ol>\n      </section>\n      <section className=\"content\">\n         <div className=\"row\">\n           <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n             <div className=\"box box-primary\">\n                <div className=\"box-header with-border\">\n                 <h2 className=\"box-title\">Manage College</h2>  \n                </div>\n                <div className=\"box-body\">                      \n                  <div className=\"col-lg-12 col-sm-12 col-xs-12 col-md-12\">\n                    <form id=\"\">\n                       <div className=\"row inputrow\">\n                          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">College Name</label>\n                               <input type=\"text\" ref=\"collegeName\" id=\"collegeName\" name=\"collegeName\" value={this.state.collegeName} onChange={this.handleChange} className=\"templateName collegeName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                            </div>\n                           </div>      \n                       </div>\n                       <div className=\"row inputrow\">\n                          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">University Name</label>\n                               <input type=\"text\" ref=\"universityName\" id=\"universityName\" name=\"universityName\" value={this.state.universityName} onChange={this.handleChange} className=\"templateName universityName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                            </div>\n                           </div>\n                       </div>\n                       <div className=\"row inputrow\">\n                         <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Status</label>\n                              <select className=\"form-control inputText collegeStatus\" ref=\"collegeStatus\" value={this.state.collegeStatus} onChange={this.handleChange} id=\"collegeStatus\" name=\"collegeStatus\" required>\n                                <option value=\"Functioning\">Functioning</option>\n                                <option value=\"Fake\">Fake</option>\n                                <option value=\"Disfunctioning\">Disfunctioning</option>\n                              </select>                          \n                            </div>\n                          </div> \n                       </div>\n                        <div className=\"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                          <button className=\"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\" onClick={this.handleSubmit.bind(this)} type=\"submit\" value=\"\" >{this.state.button}</button>\n                        </div> \n                    </form>\n                  </div>\n                  <ListOfColleges />\n                </div>\n             </div>\n            </div>\n         </div>\n         </section>\n      </div>\n      );\n    } \n}\nEditPageContainer = withTracker(({params}) => {\n    var _id          = params.id;\n    const postHandle = Meteor.subscribe('singlecollege',_id);\n    // var editServices   = this.props.params.id;\n    // console.log(\"Param\" +editServices);\n    const college    = College.findOne({\"_id\":_id})|| {};\n    const loading    = !postHandle.ready();\n    \n    if(_id){\n      var button = \"UPDATE\";\n      return {\n          loading,\n          college,\n          button,\n      };\n    }else{\n       var button = \"ADD\";\n      return {\n          loading,\n          college,\n          button,\n      };\n    }\n})(AddEditCollege);\nexport default EditPageContainer;\n\n"]},"hash":"9dc0ea7d7662c6f148dab39732da1fac10218595"}

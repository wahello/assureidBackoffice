{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"../api/Blocks","imported":["Blocks"],"specifiers":[{"kind":"named","imported":"Blocks","local":"Blocks"}]},{"source":"../api/Blocks","imported":["TempBlockImages"],"specifiers":[{"kind":"named","imported":"TempBlockImages","local":"TempBlockImages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/reactCMS/components/BlocksPage.jsx","filenameRelative":"imports/dashboard/reactCMS/components/BlocksPage.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/components/BlocksPage.jsx.map","sourceFileName":"imports/dashboard/reactCMS/components/BlocksPage.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"BlocksPage"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar React = void 0,\n    Component = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 2);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n  render: function (v) {\n    render = v;\n  }\n}, 3);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  \"default\": function (v) {\n    TrackerReact = v;\n  }\n}, 4);\nvar createContainer = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer: function (v) {\n    createContainer = v;\n  }\n}, 5);\nvar Validation = void 0;\nmodule.watch(require(\"react-validation\"), {\n  \"default\": function (v) {\n    Validation = v;\n  }\n}, 6);\nvar validator = void 0;\nmodule.watch(require(\"validator\"), {\n  \"default\": function (v) {\n    validator = v;\n  }\n}, 7);\nvar Tracker = void 0;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 8);\nvar Blocks = void 0;\nmodule.watch(require(\"../api/Blocks\"), {\n  Blocks: function (v) {\n    Blocks = v;\n  }\n}, 9);\nvar TempBlockImages = void 0;\nmodule.watch(require(\"../api/Blocks\"), {\n  TempBlockImages: function (v) {\n    TempBlockImages = v;\n  }\n}, 10);\n\nvar BlocksPage = function (_TrackerReact) {\n  (0, _inherits3.default)(BlocksPage, _TrackerReact);\n\n  function BlocksPage(props) {\n    (0, _classCallCheck3.default)(this, BlocksPage);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _TrackerReact.call(this, props));\n\n    var metaContext = {\n      id: Meteor.userId(),\n      dir: \"images\",\n      name: \"blockImage\"\n    };\n    var uploader = new Slingshot.Upload(\"myFileUploads\", metaContext);\n    _this.state = {\n      blockName: _this.props.blocks,\n      blockBody: _this.props.blocks,\n      id: _this.props.blocks._id,\n      blocks: [],\n      upload: uploader,\n      isUploading: false,\n      progressValue: \"0%\",\n      tempBlockImages: [],\n      edit: false\n    };\n    _this.handleChange = _this.handleChange.bind(_this);\n    console.log(\"id \" + _this.state.id);\n    return _this;\n  }\n\n  BlocksPage.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (!nextProps.loading) {\n        if (nextProps.blocks) {\n          this.setState({\n            blockName: nextProps.blocks.blockName,\n            blockBody: nextProps.blocks.blockBody,\n            id: nextProps.blocks._id\n          });\n        }\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  BlocksPage.prototype.calculateProgress = function () {\n    function calculateProgress() {\n      var _this2 = this;\n\n      this.uploadComputation = Tracker.autorun(function () {\n        var uploadProgress = Math.round(_this2.state.upload.progress() * 100);\n        if (!isNaN(uploadProgress)) _this2.setState({\n          progressValue: uploadProgress + \"%\"\n        });\n      });\n    }\n\n    return calculateProgress;\n  }();\n\n  BlocksPage.prototype.handleChange = function () {\n    function handleChange(event) {\n      var _setState;\n\n      var target = event.target;\n      var name = target.name;\n      this.setState((_setState = {}, _setState[name] = event.target.value, _setState));\n    }\n\n    return handleChange;\n  }();\n\n  BlocksPage.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      var _this3 = this;\n\n      if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n        var dashboardCss = document.createElement(\"link\");\n        dashboardCss.type = \"text/css\";\n        dashboardCss.rel = \"stylesheet\";\n        dashboardCss.href = \"/css/dashboard.css\";\n        document.head.append(dashboardCss);\n      }\n\n      if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n        console.log(\"I am appended!\");\n        var adminLte = document.createElement(\"script\");\n        adminLte.type = \"text/javascript\";\n        adminLte.src = \"/js/adminLte.js\";\n        adminLte.setAttribute('id', 'adminLte');\n        $(\"body\").append(adminLte);\n      }\n\n      $('#messageContent').summernote({\n        height: 190,\n        maxHeight: 190,\n        minHeight: 175\n      });\n      this.blockTracker = Tracker.autorun(function () {\n        Meteor.subscribe(\"blocks\");\n        var blocks = Blocks.find().fetch();\n\n        _this3.setState({\n          blocks: blocks\n        });\n      });\n      this.tempBlockImageTracker = Tracker.autorun(function () {\n        Meteor.subscribe('tempBlockImages');\n        var tempBlockImages = TempBlockImages.find().fetch();\n\n        _this3.setState({\n          tempBlockImages: tempBlockImages\n        });\n      }); // $(\".image-box\").css({'background-image':'url('+  $(\".image-box\").attr('data-image')+')','background-size': 'cover'});\n    }\n\n    return componentDidMount;\n  }();\n\n  BlocksPage.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n      var tempBlockImages = TempBlockImages.find().fetch();\n\n      for (i = 0; i < tempBlockImages.length; i++) {\n        if (!tempBlockImages[i].submitted) Meteor.call('removeS3Data', tempBlockImages[i].amazonUrl);\n      }\n\n      Meteor.call('removeBlockUnsubmitImages', Meteor.userId());\n      console.log('unmounted');\n      if (this.blockTracker) this.blockTracker.stop();\n      if (this.tempBlockImageTracker) this.tempBlockImageTracker.stop();\n    }\n\n    return componentWillUnmount;\n  }();\n\n  BlocksPage.prototype.handleClose = function () {\n    function handleClose(e) {\n      e.preventDefault();\n      console.log('deleting ' + e.target.getAttribute('id'));\n\n      if (this.props.params.id && this.state.edit) {\n        Meteor.call('removeS3Data', e.target.getAttribute('id'));\n        Meteor.call('updateEditBlock', e.target.getAttribute('id'));\n      }\n\n      Meteor.call('removeBlockUrlImages', e.target.getAttribute('id'));\n      Meteor.call('removeS3Data', e.target.getAttribute('id'));\n    }\n\n    return handleClose;\n  }();\n\n  BlocksPage.prototype.renderImageData = function () {\n    function renderImageData() {\n      var _this4 = this;\n\n      if (this.props.params.id && this.state.edit) {\n        var blocks = Blocks.find({\n          '_id': this.props.params.id\n        }).fetch();\n        var imageArray = [];\n\n        for (i = 0; i < blocks.length; i++) {\n          for (j = 0; j < blocks[i].s3.length; j++) {\n            if (blocks[i].s3[j].amazonUrl != '') {\n              imageArray.push(React.createElement(\n                \"div\",\n                {\n                  key: j,\n                  \"data-image\": blocks[i].s3[j].amazonUrl,\n                  className: \"image-box\"\n                },\n                React.createElement(\"img\", {\n                  src: blocks[i].s3[j].amazonUrl,\n                  alt: \"\"\n                }),\n                React.createElement(\n                  \"button\",\n                  {\n                    id: blocks[i].s3[j].amazonUrl,\n                    className: \"close\",\n                    onClick: this.handleClose.bind(this)\n                  },\n                  React.createElement(\"i\", {\n                    className: \"ion ion-close-circled\"\n                  })\n                )\n              ));\n            }\n          }\n        }\n\n        var tempBlockImages = TempBlockImages.find().fetch();\n\n        for (k = 0; k < tempBlockImages.length; k++) {\n          if (tempBlockImages[k].amazonUrl != '' && !tempBlockImages[k].submitted) imageArray.push(React.createElement(\n            \"div\",\n            {\n              \"data-image\": tempBlockImages[k].amazonUrl,\n              className: \"image-box\"\n            },\n            React.createElement(\"img\", {\n              src: tempBlockImages[k].amazonUrl,\n              alt: \"\"\n            }),\n            React.createElement(\n              \"button\",\n              {\n                id: tempBlockImages[k].amazonUrl,\n                className: \"close\",\n                onClick: this.handleClose.bind(this)\n              },\n              React.createElement(\"i\", {\n                className: \"ion ion-close-circled\"\n              })\n            )\n          ));\n        }\n\n        return imageArray;\n      } else {\n        var _tempBlockImages = TempBlockImages.find().fetch();\n\n        return _tempBlockImages.map(function (tempBlockImage) {\n          if (tempBlockImage.amazonUrl != '' && !tempBlockImage.submitted) return React.createElement(\n            \"div\",\n            {\n              \"data-image\": tempBlockImage.amazonUrl,\n              className: \"image-box\"\n            },\n            React.createElement(\"img\", {\n              src: tempBlockImage.amazonUrl,\n              alt: \"\"\n            }),\n            React.createElement(\n              \"button\",\n              {\n                id: tempBlockImage.amazonUrl,\n                className: \"close\",\n                onClick: _this4.handleClose.bind(_this4)\n              },\n              React.createElement(\"i\", {\n                className: \"ion ion-close-circled\"\n              })\n            )\n          );\n        });\n      }\n    }\n\n    return renderImageData;\n  }();\n\n  BlocksPage.prototype.handleUpload = function () {\n    function handleUpload(e) {\n      var id = Meteor.userId();\n      e.preventDefault();\n      this.setState({\n        isUploading: true\n      });\n      this.calculateProgress();\n      var comp = this; // console.log(comp);\n\n      this.state.upload.send(document.getElementById('s3file').files[0], function (error, downloadUrl) {\n        if (error) {\n          // Log block detailed response.\n          console.error('Error uploading' + downloadUrl + error.reason);\n          console.error(error);\n        } else {\n          comp.setState({\n            progressValue: \"0%\"\n          });\n          comp.setState({\n            isUploading: false\n          });\n          comp.uploadComputation.stop();\n          console.log(\"Success file uploaded! \" + downloadUrl); // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n\n          Meteor.call('uploadTempBlockImages', id, downloadUrl, new Date(), function (error, result) {\n            if (error) {\n              console.log(error.reason);\n            } else if (result) {\n              Bert.alert(\"Successfully Inserted..!!\");\n            }\n          });\n        }\n      });\n    }\n\n    return handleUpload;\n  }();\n\n  BlocksPage.prototype.handleUpdate = function () {\n    function handleUpdate(e) {\n      e.preventDefault();\n      this.setState({\n        edit: true\n      });\n      var tempBlockImages = TempBlockImages.find().fetch();\n      var pageName = this.refs.blockName.value;\n      var pageBody = $('#messageContent').summernote('code');\n      var userId = Meteor.userId();\n      var lastModified = new Date();\n      var id = e.target.getAttribute('id');\n      var amazons3 = [];\n\n      for (i = 0; i < tempBlockImages.length; i++) {\n        if (!tempBlockImages[i].submitted) {\n          amazons3.push({\n            'amazonUrl': tempBlockImages[i].amazonUrl,\n            'uploadTime': tempBlockImages[i].uploadTime\n          });\n        }\n\n        Meteor.call('updateTempBlockImages', tempBlockImages[i]._id, true);\n      }\n\n      Meteor.call('updateBlock', id, pageName, pageBody, userId, lastModified, function (error, result) {\n        if (error) {\n          console.log(error.reason);\n        } else if (result) {\n          Bert.alert(\"Successfully Updated..!!\");\n        }\n      });\n\n      for (j = 0; j < tempBlockImages.length; j++) {\n        if (!tempBlockImages[j].submitted) {\n          Meteor.call('updateBlockAmazonUrl', tempBlockImages[j].amazonUrl, tempBlockImages[j].uploadTime, id, function (error, result) {\n            if (error) {\n              console.log(error.reason);\n            } else if (result) {\n              Bert.alert(\"Successfully Updated..!!\");\n            }\n          });\n        }\n      }\n\n      Meteor.call('removeTempBlockImages', Meteor.userId());\n      swal(\"Done\", \"Your page has been Updated!.\", \"success\");\n      $(\".newTemplateForm\").css({\n        display: 'none'\n      });\n    }\n\n    return handleUpdate;\n  }();\n\n  BlocksPage.prototype.handleSubmit = function () {\n    function handleSubmit(e) {\n      e.preventDefault();\n      var tempBlockImages = TempBlockImages.find().fetch();\n      var pageName = this.refs.blockName.value;\n      var pageBody = $('#messageContent').summernote('code');\n      var userId = Meteor.userId();\n      var lastModified = \"\";\n      var pageNameExist = Blocks.findOne({\n        'blockName': pageName\n      });\n      var amazons3 = [];\n      console.log(tempBlockImages.length);\n\n      for (i = 0; i < tempBlockImages.length; i++) {\n        if (!tempBlockImages[i].submitted) amazons3.push({\n          'amazonUrl': tempBlockImages[i].amazonUrl,\n          'uploadTime': tempBlockImages[i].uploadTime\n        });\n        Meteor.call('updateTempBlockImages', tempBlockImages[i]._id, true);\n      }\n\n      if (pageNameExist) {\n        swal(\"Oops...!\", \"This page name is already taken!\", \"error\");\n      } else {\n        Meteor.call('createBlock', pageName, pageBody, amazons3, userId, lastModified, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Inserted..!!\");\n          }\n        });\n      }\n\n      Meteor.call('removeTempBlockImages', Meteor.userId());\n      swal(\"Done\", \"Your page has been Created!.\", \"success\");\n      $(\".newTemplateForm\").css({\n        display: 'none'\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  BlocksPage.prototype.edit = function () {\n    function edit(e) {\n      e.preventDefault();\n      this.setState({\n        'edit': true\n      });\n      var blocks = Blocks.find({\n        _id: this.props.params.id\n      }).fetch();\n      blocks.map(function (block) {\n        $(\"#blockName\").val(block.blockName);\n        $('.note-editable').html(block.blockBody);\n        $('.updatebtn').attr(\"id\", block._id);\n      });\n      $(\".updatebtn\").css({\n        display: 'block'\n      });\n      $(\".sendtxtmsgbtn\").css({\n        display: 'none'\n      });\n      $(\".newTemplateForm\").css({\n        display: 'block'\n      });\n    }\n\n    return edit;\n  }();\n\n  BlocksPage.prototype.delete = function () {\n    function _delete(e) {\n      e.preventDefault(); // console.log(e.target.getAttribute('id'));\n\n      var id = e.target.getAttribute('id');\n      swal({\n        title: \"Are you sure?\",\n        text: \"You want to delete this page!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#DD6B55\",\n        confirmButtonText: \"Yes, delete it!\",\n        closeOnConfirm: false,\n        html: false\n      }, function () {\n        Meteor.call(\"deleteBlock\", id, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else if (result) {\n            Bert.alert(\"Successfully Deleted..!!\");\n          }\n        });\n        swal(\"Done\", \"Your page has been deleted!.\", \"success\");\n      });\n      $(\".newTemplateForm\").css({\n        display: 'none'\n      });\n    }\n\n    return _delete;\n  }();\n\n  BlocksPage.prototype.renderTableRow = function () {\n    function renderTableRow() {\n      var _this5 = this;\n\n      return this.state.blocks.map(function (block) {\n        return React.createElement(\n          \"tr\",\n          null,\n          React.createElement(\n            \"td\",\n            null,\n            \" \",\n            block.blockName,\n            \" \"\n          ),\n          React.createElement(\n            \"td\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: '/manageblock/' + block._id,\n                onClick: _this5.edit.bind(_this5)\n              },\n              React.createElement(\n                \"i\",\n                {\n                  className: \"fa fa-pencil\"\n                },\n                \" \"\n              ),\n              \"Edit\"\n            )\n          ),\n          React.createElement(\n            \"td\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: \"#\",\n                id: block._id,\n                onClick: _this5.delete.bind(_this5)\n              },\n              React.createElement(\"i\", {\n                className: \"fa fa-trash-o\"\n              }),\n              \"Delete\"\n            )\n          )\n        );\n      });\n    }\n\n    return renderTableRow;\n  }();\n\n  BlocksPage.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"div\",\n          {\n            className: \"content-wrapper\"\n          },\n          React.createElement(\n            \"section\",\n            {\n              className: \"content\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box box-primary\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"box-header with-border\"\n                    },\n                    React.createElement(\n                      \"h3\",\n                      {\n                        className: \"box-title\"\n                      },\n                      \"Manage Blocks\"\n                    )\n                  ),\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"box-body\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                          },\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                            },\n                            React.createElement(\n                              \"form\",\n                              {\n                                className: \"newTemplateForm\"\n                              },\n                              \"    \",\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Block Title\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"text\",\n                                      ref: \"blockName\",\n                                      id: \"blockName\",\n                                      name: \"blockName\",\n                                      value: this.state.blockName,\n                                      onChange: this.handleChange,\n                                      className: \"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    })\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Description\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\n                                      \"div\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\"\n                                      },\n                                      React.createElement(\"div\", {\n                                        id: \"messageContent\",\n                                        name: \"blockBody\",\n                                        ref: \"blockBody\"\n                                      })\n                                    )\n                                  )\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                  },\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"form-group subjectDiv\"\n                                    },\n                                    React.createElement(\n                                      \"label\",\n                                      {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                                      },\n                                      \"Image Upload\",\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"astrick\"\n                                        },\n                                        \"*\"\n                                      ),\n                                      \":\"\n                                    ),\n                                    React.createElement(\"input\", {\n                                      type: \"file\",\n                                      ref: \"blogImageFile\",\n                                      id: \"s3file\",\n                                      name: \"blogImageFile\",\n                                      onChange: this.handleUpload.bind(this),\n                                      className: \"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                                    })\n                                  )\n                                ),\n                                this.state.isUploading ? React.createElement(\n                                  \"div\",\n                                  null,\n                                  React.createElement(\n                                    \"div\",\n                                    {\n                                      className: \"progress-sm\"\n                                    },\n                                    React.createElement(\n                                      \"div\",\n                                      {\n                                        className: \"progress-bar progress-bar-yellow\",\n                                        role: \"progressbar\",\n                                        \"data-width\": this.state.progressValue,\n                                        \"aria-valuemin\": \"0\",\n                                        \"aria-valuemax\": \"100\",\n                                        style: {\n                                          width: this.state.progressValue\n                                        }\n                                      },\n                                      React.createElement(\n                                        \"span\",\n                                        {\n                                          className: \"sr-only\"\n                                        },\n                                        this.state.progressValue,\n                                        \"% Complete\"\n                                      )\n                                    )\n                                  )\n                                ) : React.createElement(\"div\", null)\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"row inputrow subjectRow\"\n                                },\n                                React.createElement(\n                                  \"div\",\n                                  {\n                                    className: \"imageContainer\"\n                                  },\n                                  this.renderImageData()\n                                )\n                              ),\n                              React.createElement(\n                                \"div\",\n                                {\n                                  className: \"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                },\n                                React.createElement(\n                                  \"button\",\n                                  {\n                                    onClick: this.handleSubmit.bind(this),\n                                    type: \"submit\",\n                                    className: \"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\"\n                                  },\n                                  \"Submit Page\"\n                                ),\n                                React.createElement(\n                                  \"button\",\n                                  {\n                                    onClick: this.handleUpdate.bind(this),\n                                    type: \"submit\",\n                                    className: \"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\"\n                                  },\n                                  \"Update Page\"\n                                )\n                              )\n                            )\n                          ),\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"dataTable tableBasicPage\"\n                            },\n                            React.createElement(\n                              \"table\",\n                              {\n                                className: \"heavyTable\",\n                                \"class\": \"display\",\n                                width: \"100%\",\n                                cellspacing: \"0\"\n                              },\n                              React.createElement(\n                                \"thead\",\n                                null,\n                                React.createElement(\n                                  \"tr\",\n                                  null,\n                                  React.createElement(\n                                    \"th\",\n                                    null,\n                                    \"Block Title\"\n                                  ),\n                                  React.createElement(\"th\", null),\n                                  React.createElement(\"th\", null)\n                                )\n                              ),\n                              React.createElement(\n                                \"tfoot\",\n                                null,\n                                React.createElement(\n                                  \"tr\",\n                                  null,\n                                  React.createElement(\n                                    \"th\",\n                                    null,\n                                    \"Block Title\"\n                                  ),\n                                  React.createElement(\"th\", null),\n                                  React.createElement(\"th\", null)\n                                )\n                              ),\n                              React.createElement(\n                                \"tbody\",\n                                null,\n                                this.renderTableRow()\n                              )\n                            )\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return BlocksPage;\n}(TrackerReact(Component));\n\nEditPageContainer = createContainer(function (props) {\n  var postHandle = Meteor.subscribe('blocks'); // var editBlocks   = this.props.params.id;\n  // console.log(\"Param\" +editBlocks);\n\n  var blocks = Blocks.find().fetch() || {};\n  console.log(blocks);\n  var loading = !postHandle.ready();\n  return {\n    loading: loading,\n    blocks: blocks\n  };\n}, BlocksPage);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/reactCMS/components/BlocksPage.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","render","TrackerReact","createContainer","Validation","validator","Tracker","Blocks","TempBlockImages","BlocksPage","props","metaContext","id","userId","dir","name","uploader","Slingshot","Upload","state","blockName","blocks","blockBody","_id","upload","isUploading","progressValue","tempBlockImages","edit","handleChange","bind","console","log","componentWillReceiveProps","nextProps","loading","setState","calculateProgress","uploadComputation","autorun","uploadProgress","Math","round","progress","isNaN","event","target","value","componentDidMount","$","length","dashboardCss","document","createElement","type","rel","href","head","append","hasClass","adminLte","src","setAttribute","summernote","height","maxHeight","minHeight","blockTracker","subscribe","find","fetch","tempBlockImageTracker","componentWillUnmount","remove","i","submitted","call","amazonUrl","stop","handleClose","e","preventDefault","getAttribute","params","renderImageData","imageArray","j","s3","push","k","map","tempBlockImage","handleUpload","comp","send","getElementById","files","error","downloadUrl","reason","Date","result","Bert","alert","handleUpdate","pageName","refs","pageBody","lastModified","amazons3","uploadTime","swal","css","display","handleSubmit","pageNameExist","findOne","block","val","html","attr","delete","title","text","showCancelButton","confirmButtonColor","confirmButtonText","closeOnConfirm","renderTableRow","width","EditPageContainer","postHandle","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/reactCMS/components/BlocksPage.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\n\nimport {Blocks} from '../api/Blocks';\nimport {TempBlockImages} from '../api/Blocks';\n\nclass BlocksPage extends TrackerReact (Component){\n  constructor(props) {\n    super(props);\n    var metaContext = {id: Meteor.userId(), dir: \"images\" , name: \"blockImage\"};\n    var uploader = new Slingshot.Upload(\"myFileUploads\" ,metaContext);\n    this.state = {\n      blockName       : this.props.blocks,\n      blockBody       : this.props.blocks,\n      id                : this.props.blocks._id,\n      blocks          : [],\n      upload            : uploader,\n      isUploading       : false,\n      progressValue     : \"0%\",\n      tempBlockImages : [],\n      edit              : false,\n    };\n  this.handleChange = this.handleChange.bind(this);\n  console.log(\"id \" + this.state.id);\n  }\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.blocks){\n         this.setState({\n             blockName     : nextProps.blocks.blockName,\n             blockBody     : nextProps.blocks.blockBody,\n             id               : nextProps.blocks._id,\n         });\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  calculateProgress(){\n    this.uploadComputation = Tracker.autorun(() => {\n         const uploadProgress = Math.round(this.state.upload.progress() * 100);\n         if (!isNaN(uploadProgress)) this.setState({progressValue: uploadProgress +\"%\" });\n    });\n  }\n  handleChange(event){\n   const target = event.target;\n   const name   = target.name;\n   this.setState({\n    [name]: event.target.value,\n   });\n  }\n  componentDidMount() {\n    if(!!!$(\"link[href='/css/dashboard.css']\").length > 0){\n      var dashboardCss = document.createElement(\"link\");\n      dashboardCss.type=\"text/css\";\n      dashboardCss.rel =\"stylesheet\";\n      dashboardCss.href=\"/css/dashboard.css\";\n      document.head.append(dashboardCss);\n    }\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n      console.log(\"I am appended!\");\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      adminLte.setAttribute('id','adminLte');\n      $(\"body\").append(adminLte);\n    }\n    $('#messageContent').summernote({\n        height: 190,\n        maxHeight:190,\n        minHeight:175,\n      });\n    this.blockTracker = Tracker.autorun( ()=> {\n      Meteor.subscribe(\"blocks\");\n      const blocks = Blocks.find().fetch();\n      this.setState({blocks: blocks});\n    });\n    this.tempBlockImageTracker = Tracker.autorun(()=>{\n      Meteor.subscribe('tempBlockImages');\n      const tempBlockImages = TempBlockImages.find().fetch();\n      this.setState({tempBlockImages});\n    });\n    // $(\".image-box\").css({'background-image':'url('+  $(\".image-box\").attr('data-image')+')','background-size': 'cover'});\n  }\n  componentWillUnmount() {\n    $(\"body\").find(\"script[src='/js/adminLte.js']\").remove();\n    const tempBlockImages = TempBlockImages.find().fetch();\n    for(i=0;i<tempBlockImages.length;i++){\n      if(!tempBlockImages[i].submitted)\n        Meteor.call('removeS3Data',tempBlockImages[i].amazonUrl);\n    }\n    Meteor.call('removeBlockUnsubmitImages',Meteor.userId());\n    console.log('unmounted');\n    if(this.blockTracker)\n      this.blockTracker.stop();\n    if(this.tempBlockImageTracker)\n      this.tempBlockImageTracker.stop();\n  }\n  handleClose(e){\n    e.preventDefault();\n    console.log('deleting ' + e.target.getAttribute('id'));\n    if(this.props.params.id && this.state.edit){\n      Meteor.call('removeS3Data',e.target.getAttribute('id'));\n      Meteor.call('updateEditBlock',e.target.getAttribute('id'));\n    }\n    Meteor.call('removeBlockUrlImages',e.target.getAttribute('id'));\n    Meteor.call('removeS3Data',e.target.getAttribute('id'));\n  }\n  renderImageData(){\n    if(this.props.params.id && this.state.edit){\n      const blocks = Blocks.find({'_id': this.props.params.id}).fetch();\n      var imageArray =[];\n      for(i=0;i<blocks.length;i++){\n        for(j=0;j<blocks[i].s3.length; j++){\n          if(blocks[i].s3[j].amazonUrl != ''){\n            imageArray.push(\n            <div key={j} data-image={blocks[i].s3[j].amazonUrl} className=\"image-box\">\n              <img src={blocks[i].s3[j].amazonUrl} alt=\"\"/><button id={blocks[i].s3[j].amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>);\n          }\n        }\n      }\n      const tempBlockImages = TempBlockImages.find().fetch();\n      for(k=0;k<tempBlockImages.length;k++){\n        if(tempBlockImages[k].amazonUrl != ''&& !tempBlockImages[k].submitted)\n          imageArray.push(\n            <div data-image={tempBlockImages[k].amazonUrl} className=\"image-box\">\n              <img src={tempBlockImages[k].amazonUrl} alt=\"\"/><button id={tempBlockImages[k].amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>\n          );\n      }\n      return imageArray;\n  }else{\n      const tempBlockImages = TempBlockImages.find().fetch();\n      return tempBlockImages.map((tempBlockImage)=>{\n        if(tempBlockImage.amazonUrl != ''&& !tempBlockImage.submitted)\n          return <div data-image={tempBlockImage.amazonUrl} className=\"image-box\">\n            <img src={tempBlockImage.amazonUrl} alt=\"\"/><button id={tempBlockImage.amazonUrl} className=\"close\" onClick={this.handleClose.bind(this)}><i className=\"ion ion-close-circled\"></i></button></div>;\n      });\n    }\n}\n  handleUpload(e) {\n      let id = Meteor.userId();\n      e.preventDefault();\n      this.setState({isUploading: true});\n      this.calculateProgress();\n      var comp = this;\n      // console.log(comp);\n      this.state.upload.send(document.getElementById('s3file').files[0], function (error, downloadUrl) {\n        if (error) {\n          // Log block detailed response.\n          console.error('Error uploading' + downloadUrl + error.reason);\n          console.error (error);\n        }\n        else {\n          comp.setState({progressValue:\"0%\"});\n          comp.setState({isUploading:false});\n          comp.uploadComputation.stop();\n          console.log(\"Success file uploaded! \" + downloadUrl);\n          // Meteor.users.update(Meteor.userId(), {$set: {\"profile.image\": downloadUrl}});\n          Meteor.call('uploadTempBlockImages',id,downloadUrl,new Date(), function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n        }\n      });\n    }\n  handleUpdate(e){\n    e.preventDefault();\n    this.setState({edit:true});\n    const tempBlockImages  = TempBlockImages.find().fetch();\n    let pageName      = this.refs.blockName.value;\n    let pageBody      = $('#messageContent').summernote('code');\n    let userId        = Meteor.userId();\n    let lastModified  = new Date();\n    let id            = e.target.getAttribute('id');\n    let amazons3      = [];\n    for(i=0;i<tempBlockImages.length;i++){\n      if(!tempBlockImages[i].submitted){\n        amazons3.push({\n          'amazonUrl': tempBlockImages[i].amazonUrl,\n          'uploadTime': tempBlockImages[i].uploadTime,\n        });\n      }\n      Meteor.call('updateTempBlockImages',tempBlockImages[i]._id,true);\n    }\n    Meteor.call('updateBlock',id,pageName,pageBody,userId,lastModified,function(error,result){\n        if(error){\n            console.log(error.reason);\n        }else if(result){\n            Bert.alert(\"Successfully Updated..!!\");\n        }\n    });\n    for(j=0;j<tempBlockImages.length;j++){\n      if(!tempBlockImages[j].submitted){\n        Meteor.call('updateBlockAmazonUrl',tempBlockImages[j].amazonUrl,tempBlockImages[j].uploadTime,id,function(error,result){\n            if(error){\n                console.log(error.reason);\n            }else if(result){\n                Bert.alert(\"Successfully Updated..!!\");\n            }\n        });\n      }\n    }\n\n    Meteor.call('removeTempBlockImages',Meteor.userId());\n    swal(\"Done\",\n    \"Your page has been Updated!.\",\n    \"success\");\n    $(\".newTemplateForm\").css({display:'none'});\n  }\n  handleSubmit(e){\n      e.preventDefault();\n      const tempBlockImages = TempBlockImages.find().fetch();\n      let pageName = this.refs.blockName.value;\n      let pageBody = $('#messageContent').summernote('code');\n      let userId = Meteor.userId();\n      let lastModified = \"\";\n      let pageNameExist = Blocks.findOne({'blockName': pageName});\n      let amazons3 = [];\n      console.log(tempBlockImages.length);\n      for(i=0;i<tempBlockImages.length;i++){\n        if(!tempBlockImages[i].submitted)\n          amazons3.push({\n            'amazonUrl': tempBlockImages[i].amazonUrl,\n            'uploadTime': tempBlockImages[i].uploadTime,\n          });\n        Meteor.call('updateTempBlockImages',tempBlockImages[i]._id,true);\n      }\n      if(pageNameExist){\n          swal(\"Oops...!\",\"This page name is already taken!\",\"error\");\n      }else{\n          Meteor.call('createBlock',pageName,pageBody,amazons3,userId,lastModified,function(error,result){\n              if(error){\n                  console.log(error.reason);\n              }else if(result){\n                  Bert.alert(\"Successfully Inserted..!!\");\n              }\n          });\n      }\n      Meteor.call('removeTempBlockImages',Meteor.userId());\n      swal(\"Done\",\n      \"Your page has been Created!.\",\n      \"success\");\n        $(\".newTemplateForm\").css({display:'none'});\n  }\n  edit(e){\n    e.preventDefault();\n    this.setState({'edit': true});\n    const blocks = Blocks.find({_id: this.props.params.id}).fetch();\n    blocks.map((block)=>{\n      $(\"#blockName\").val(block.blockName);\n      $('.note-editable').html(block.blockBody);\n      $('.updatebtn').attr(\"id\",block._id);\n    });\n    $(\".updatebtn\").css({display:'block'});\n    $(\".sendtxtmsgbtn\").css({display:'none'});\n    $(\".newTemplateForm\").css({display:'block'});\n\n  }\n  delete(e){\n    e.preventDefault();\n    // console.log(e.target.getAttribute('id'));\n    let id = e.target.getAttribute('id');\n    swal({\n      title: \"Are you sure?\",\n      text: \"You want to delete this page!\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      closeOnConfirm: false,\n      html: false\n    }, function(){\n      Meteor.call(\"deleteBlock\",id,function(error,result){\n          if(error){\n              console.log(error.reason);\n          }else if(result){\n              Bert.alert(\"Successfully Deleted..!!\");\n          }\n      });\n      swal(\"Done\",\n      \"Your page has been deleted!.\",\n      \"success\");\n    });\n      $(\".newTemplateForm\").css({display:'none'});\n  }\n\n  renderTableRow(){\n    return this.state.blocks.map((block) =>{\n      return <tr>\n              <td> {block.blockName} </td>\n              <td>\n                <a href={'/manageblock/' +block._id} onClick={this.edit.bind(this)}>\n                  <i className = \"fa fa-pencil\" > </i>\n                  Edit\n                </a>\n              </td>\n              <td>\n                <a href=\"#\" id={block._id} onClick={this.delete.bind(this)}>\n                  <i className=\"fa fa-trash-o\"></i>\n                  Delete\n                </a>\n              </td>\n            </tr>;\n      });\n  }\n  render(){\n    return(\n      <div>\n        {/* Content Wrapper. Contains page content */}\n        <div className=\"content-wrapper\">\n          {/* Content Header (Page header) */}\n          {/* Main content */}\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"box box-primary\">\n                  <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">\n                      Manage Blocks\n                    </h3>\n                    {/*<div className=\"box-tools pull-right\">\n                      <button type=\"button\" className=\"btn btn-box-tool btn-minus\" data-widget=\"collapse\">\n                        <i className=\"fa fa-minus\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\">\n                          <i className=\"fa fa-wrench\" /></button>\n                        <ul className=\"dropdown-menu\" role=\"menu\">\n                          <li>\n                            <a href=\"#\">Action</a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Another action </a>\n                          </li>\n                          <li>\n                            <a href=\"#\">Something else here</a>\n                          </li>\n                          <li className=\"divider\" />\n                          <li>\n                            <a href=\"#\">\n                            Separated link\n                            </a>\n                          </li>\n                        </ul>\n                      </div>\n                      <button type=\"button\" className=\"btn btn-box-tool\" data-widget=\"remove\">\n                        <i className=\"fa fa-times\" />\n                      </button>\n                    </div>*/}\n                  </div>\n                  {/* /.box-header */}\n                  <div className=\"box-body\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                        <div className=\"notifWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <div className=\"create-email-template-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <form className=\"newTemplateForm\">    <div className=\"row inputrow\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                  <div className=\"form-group\">\n                                   <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Block Title<span className=\"astrick\">*</span>:</label>\n                                        <input type=\"text\" ref=\"blockName\" id=\"blockName\" name=\"blockName\" value={this.state.blockName}  onChange={this.handleChange} className=\"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"row inputrow\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                  <div className=\"form-group\">\n                                   <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Description<span className=\"astrick\">*</span>:</label>\n                                   <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\">\n                                    <div id=\"messageContent\" name=\"blockBody\"\n                                                        ref = \"blockBody\"\n                                                            ></div>\n                                   </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                  <div className=\"form-group subjectDiv\">\n                                   <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Image Upload<span className=\"astrick\">*</span>:</label>\n                                        <input type=\"file\" ref=\"blogImageFile\" id=\"s3file\" name=\"blogImageFile\"  onChange={this.handleUpload.bind(this)}  className=\"subject col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                                  </div>\n                                </div>\n                                {this.state.isUploading?\n                                  <div><div className=\"progress-sm\">\n                                    <div className=\"progress-bar progress-bar-yellow\" role=\"progressbar\" data-width={this.state.progressValue} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.progressValue} } >\n                                        <span className=\"sr-only\">{this.state.progressValue}% Complete\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>: <div></div>}\n                              </div>\n                              <div className=\"row inputrow subjectRow\">\n                                <div className=\"imageContainer\">\n                                  {this.renderImageData()}\n                                </div>\n                              </div>\n\n                              <div className=\"savetemp col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <button onClick={this.handleSubmit.bind(this)} type=\"submit\" className=\"col-lg-2 col-md-3 col-sm-6 col-xs-12 btn btn-primary pull-right sendtxtmsgbtn\">Submit Page</button>\n                                <button  onClick={this.handleUpdate.bind(this)} type=\"submit\" className=\"btn btn-primary pull-right updatebtn col-lg-2 col-md-3 col-sm-6 col-xs-12\">Update Page</button>\n                              </div>\n                            </form>\n                          </div>\n                          <div className=\"dataTable tableBasicPage\">\n                              <table className=\"heavyTable\"  class=\"display\" width=\"100%\" cellspacing=\"0\">\n                                  <thead>\n                                      <tr>\n                                          <th>Block Title</th>\n                                          <th></th>\n                                          <th></th>\n                                      </tr>\n                                  </thead>\n                                  <tfoot>\n                                      <tr>\n                                        <th>Block Title</th>\n                                        <th></th>\n                                        <th></th>\n                                      </tr>\n                                  </tfoot>\n                                  <tbody>\n                                          {this.renderTableRow()}\n                                  </tbody>\n                              </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          {/* /.content */}\n        </div>\n        {/* /.content-wrapper */}\n      </div>\n\n    );\n  }\n}\nEditPageContainer = createContainer( props => {\n\n    const postHandle = Meteor.subscribe('blocks');\n    // var editBlocks   = this.props.params.id;\n    // console.log(\"Param\" +editBlocks);\n    const blocks = Blocks.find().fetch()|| {};\n    console.log(blocks);\n    const loading = !postHandle.ready();\n\n    return {\n        loading,\n        blocks,\n    };\n}, BlocksPage);\n\nexport default EditPageContainer;\n"]},"hash":"eb06b15c9005cf1f44bd66c50886a8af225f4e65"}

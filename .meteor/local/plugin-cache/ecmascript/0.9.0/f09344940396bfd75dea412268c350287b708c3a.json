{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["TempTicketImages","TempTicketVideo"],"specifiers":[{"kind":"local","local":"TempTicketImages","exported":"TempTicketImages"},{"kind":"local","local":"TempTicketVideo","exported":"TempTicketVideo"}]}}},"options":{"filename":"imports/dashboard/ticketManagement/api/TempUpload.js","filenameRelative":"imports/dashboard/ticketManagement/api/TempUpload.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/api/TempUpload.js.map","sourceFileName":"imports/dashboard/ticketManagement/api/TempUpload.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TempUpload"},"ignored":false,"code":"module.export({\n  TempTicketImages: () => TempTicketImages,\n  TempTicketVideo: () => TempTicketVideo\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst TempTicketImages = new Mongo.Collection(\"tempTicketImages\");\nconst TempTicketVideo = new Mongo.Collection(\"tempTicketVideo\");\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    \"addNewTemporaryTicketImages\": function (id) {\n      var data = ServiceImage.findOne({\n        \"_id\": id\n      });\n      var imageLink = data.link();\n      TicketImages.insert({\n        \"userId\": Meteor.userId(),\n        \"imageLink\": imageLink,\n        \"createdAt\": new Date()\n      }, (error, result) => {});\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/ticketManagement/api/TempUpload.js"],"names":["module","export","TempTicketImages","TempTicketVideo","Mongo","watch","require","v","Meteor","Collection","isServer","methods","id","data","ServiceImage","findOne","imageLink","link","TicketImages","insert","userId","Date","error","result"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,oBAAiB,MAAIA,gBAAtB;AAAuCC,mBAAgB,MAAIA;AAA3D,CAAd;AAA2F,IAAIC,KAAJ;AAAUJ,OAAOK,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWR,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAGrK,MAAML,mBAAmB,IAAIE,MAAMK,UAAV,CAAqB,kBAArB,CAAzB;AACA,MAAMN,kBAAkB,IAAIC,MAAMK,UAAV,CAAqB,iBAArB,CAAxB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AACjBF,SAAOG,OAAP,CAAe;AACd,mCAA+B,UAAUC,EAAV,EAAc;AACxC,UAAIC,OAAOC,aAAaC,OAAb,CAAqB;AAAC,eAAQH;AAAT,OAArB,CAAX;AACA,UAAII,YAAYH,KAAKI,IAAL,EAAhB;AACEC,mBAAaC,MAAb,CAAoB;AACpB,kBAAUX,OAAOY,MAAP,EADU;AAEpB,qBAAYJ,SAFQ;AAGpB,qBAAY,IAAIK,IAAJ;AAHQ,OAApB,EAIE,CAACC,KAAD,EAAQC,MAAR,KAAiB,CAEpB,CANC;AAOH;AAXU,GAAf;AAaD","file":"imports/dashboard/ticketManagement/api/TempUpload.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const TempTicketImages = new Mongo.Collection(\"tempTicketImages\");\nexport const TempTicketVideo = new Mongo.Collection(\"tempTicketVideo\");\n\nif(Meteor.isServer){\n\t Meteor.methods({\n\t\t \"addNewTemporaryTicketImages\": function (id) {\n        var data = ServiceImage.findOne({\"_id\" : id});\n        var imageLink = data.link();\n          TicketImages.insert({\n          \"userId\": Meteor.userId(),\n          \"imageLink\":imageLink,\n          \"createdAt\":new Date(),\n          },(error, result)=>{\n\n        });\n      }, \n   });\n}"]},"hash":"f09344940396bfd75dea412268c350287b708c3a"}

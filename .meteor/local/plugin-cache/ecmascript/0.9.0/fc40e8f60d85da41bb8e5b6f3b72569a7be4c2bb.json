{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"eventemitter3","imported":["EventEmitter"],"specifiers":[{"kind":"named","imported":"EventEmitter","local":"EventEmitter"}]},{"source":"./lib.js","imported":["formatFleURL"],"specifiers":[{"kind":"named","imported":"formatFleURL","local":"formatFleURL"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"./cursor.js","imported":["FilesCursor","FileCursor"],"specifiers":[{"kind":"named","imported":"FilesCursor","local":"FilesCursor"},{"kind":"named","imported":"FileCursor","local":"FileCursor"}]}],"exports":{"exported":["FilesCollectionCore"],"specifiers":[{"kind":"local","local":"FilesCollectionCore","exported":"default"}]}}},"options":{"filename":"packages/ostrio:files/core.js","filenameRelative":"packages/ostrio:files/core.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ostrio:files/core.js.map","sourceFileName":"packages/ostrio:files/core.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"core"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return FilesCollectionCore;\n  }\n});\n\nvar _ = void 0;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _: function (v) {\n    _ = v;\n  }\n}, 0);\nvar EventEmitter = void 0;\nmodule.watch(require(\"eventemitter3\"), {\n  EventEmitter: function (v) {\n    EventEmitter = v;\n  }\n}, 1);\nvar formatFleURL = void 0;\nmodule.watch(require(\"./lib.js\"), {\n  formatFleURL: function (v) {\n    formatFleURL = v;\n  }\n}, 2);\nvar check = void 0,\n    Match = void 0;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 3);\nvar FilesCursor = void 0,\n    FileCursor = void 0;\nmodule.watch(require(\"./cursor.js\"), {\n  FilesCursor: function (v) {\n    FilesCursor = v;\n  },\n  FileCursor: function (v) {\n    FileCursor = v;\n  }\n}, 4);\n\nvar FilesCollectionCore = function (_EventEmitter) {\n  (0, _inherits3.default)(FilesCollectionCore, _EventEmitter);\n\n  function FilesCollectionCore() {\n    (0, _classCallCheck3.default)(this, FilesCollectionCore);\n    return (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _debug\n   * @summary Print logs in debug mode\n   * @returns {void}\n   */FilesCollectionCore.prototype._debug = function () {\n    function _debug() {\n      if (this.debug) {\n        (console.info || console.log || function () {}).apply(undefined, arguments);\n      }\n    }\n\n    return _debug;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name _getFileName\n        * @param {Object} fileData - File Object\n        * @summary Returns file's name\n        * @returns {String}\n        */\n\n  FilesCollectionCore.prototype._getFileName = function () {\n    function _getFileName(fileData) {\n      var fileName = fileData.name || fileData.fileName;\n\n      if (_.isString(fileName) && fileName.length > 0) {\n        return (fileData.name || fileData.fileName).replace(/\\.\\./g, '').replace(/\\//g, '');\n      }\n\n      return '';\n    }\n\n    return _getFileName;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name _getExt\n        * @param {String} FileName - File name\n        * @summary Get extension from FileName\n        * @returns {Object}\n        */\n\n  FilesCollectionCore.prototype._getExt = function () {\n    function _getExt(fileName) {\n      if (!!~fileName.indexOf('.')) {\n        var extension = (fileName.split('.').pop().split('?')[0] || '').toLowerCase();\n        return {\n          ext: extension,\n          extension: extension,\n          extensionWithDot: \".\" + extension\n        };\n      }\n\n      return {\n        ext: '',\n        extension: '',\n        extensionWithDot: ''\n      };\n    }\n\n    return _getExt;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name _updateFileTypes\n        * @param {Object} data - File data\n        * @summary Internal method. Classify file based on 'type' field\n        */\n\n  FilesCollectionCore.prototype._updateFileTypes = function () {\n    function _updateFileTypes(data) {\n      data.isVideo = /^video\\//i.test(data.type);\n      data.isAudio = /^audio\\//i.test(data.type);\n      data.isImage = /^image\\//i.test(data.type);\n      data.isText = /^text\\//i.test(data.type);\n      data.isJSON = /^application\\/json$/i.test(data.type);\n      data.isPDF = /^application\\/(x-)?pdf$/i.test(data.type);\n    }\n\n    return _updateFileTypes;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name _dataToSchema\n        * @param {Object} data - File data\n        * @summary Internal method. Build object in accordance with default schema from File data\n        * @returns {Object}\n        */\n\n  FilesCollectionCore.prototype._dataToSchema = function () {\n    function _dataToSchema(data) {\n      var ds = {\n        name: data.name,\n        extension: data.extension,\n        path: data.path,\n        meta: data.meta,\n        type: data.type,\n        size: data.size,\n        userId: data.userId || null,\n        versions: {\n          original: {\n            path: data.path,\n            size: data.size,\n            type: data.type,\n            extension: data.extension\n          }\n        },\n        _downloadRoute: data._downloadRoute || this.downloadRoute,\n        _collectionName: data._collectionName || this.collectionName\n      }; //Optional fileId\n\n      if (data.fileId) {\n        ds._id = data.fileId;\n      }\n\n      this._updateFileTypes(ds);\n\n      ds._storagePath = data._storagePath || this.storagePath(_.extend(data, ds));\n      return ds;\n    }\n\n    return _dataToSchema;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name findOne\n        * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n        * @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n        * @summary Find and return Cursor for matching document Object\n        * @returns {FileCursor} Instance\n        */\n\n  FilesCollectionCore.prototype.findOne = function () {\n    function findOne() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments[1];\n\n      this._debug(\"[FilesCollection] [findOne(\" + JSON.stringify(selector) + \", \" + JSON.stringify(options) + \")]\");\n\n      check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n      check(options, Match.Optional(Object));\n      var doc = this.collection.findOne(selector, options);\n\n      if (doc) {\n        return new FileCursor(doc, this);\n      }\n\n      return doc;\n    }\n\n    return findOne;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name find\n        * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n        * @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n        * @summary Find and return Cursor for matching documents\n        * @returns {FilesCursor} Instance\n        */\n\n  FilesCollectionCore.prototype.find = function () {\n    function find() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments[1];\n\n      this._debug(\"[FilesCollection] [find(\" + JSON.stringify(selector) + \", \" + JSON.stringify(options) + \")]\");\n\n      check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n      check(options, Match.Optional(Object));\n      return new FilesCursor(selector, options, this);\n    }\n\n    return find;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name update\n        * @see http://docs.meteor.com/#/full/update\n        * @summary link Mongo.Collection update method\n        * @returns {Mongo.Collection} Instance\n        */\n\n  FilesCollectionCore.prototype.update = function () {\n    function update() {\n      this.collection.update.apply(this.collection, arguments);\n      return this.collection;\n    }\n\n    return update;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCollectionCore\n        * @name link\n        * @param {Object} fileRef - File reference object\n        * @param {String} version - Version of file you would like to request\n        * @summary Returns downloadable URL\n        * @returns {String} Empty string returned in case if file not found in DB\n        */\n\n  FilesCollectionCore.prototype.link = function () {\n    function link(fileRef) {\n      var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'original';\n\n      this._debug(\"[FilesCollection] [link(\" + (_.isObject(fileRef) ? fileRef._id : undefined) + \", \" + version + \")]\");\n\n      check(fileRef, Object);\n      check(version, String);\n\n      if (!fileRef) {\n        return '';\n      }\n\n      return formatFleURL(fileRef, version);\n    }\n\n    return link;\n  }();\n\n  return FilesCollectionCore;\n}(EventEmitter);\n\nFilesCollectionCore.schema = {\n  size: {\n    type: Number\n  },\n  name: {\n    type: String\n  },\n  type: {\n    type: String\n  },\n  path: {\n    type: String\n  },\n  isVideo: {\n    type: Boolean\n  },\n  isAudio: {\n    type: Boolean\n  },\n  isImage: {\n    type: Boolean\n  },\n  isText: {\n    type: Boolean\n  },\n  isJSON: {\n    type: Boolean\n  },\n  isPDF: {\n    type: Boolean\n  },\n  extension: {\n    type: String,\n    optional: true\n  },\n  _storagePath: {\n    type: String\n  },\n  _downloadRoute: {\n    type: String\n  },\n  _collectionName: {\n    type: String\n  },\n  \"public\": {\n    type: Boolean,\n    optional: true\n  },\n  meta: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  },\n  userId: {\n    type: String,\n    optional: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  versions: {\n    type: Object,\n    blackbox: true\n  }\n};","map":{"version":3,"sources":["packages/ostrio:files/core.js"],"names":["module","export","FilesCollectionCore","_","watch","require","v","EventEmitter","formatFleURL","check","Match","FilesCursor","FileCursor","_debug","debug","console","info","log","apply","undefined","arguments","_getFileName","fileData","fileName","name","isString","length","replace","_getExt","indexOf","extension","split","pop","toLowerCase","ext","extensionWithDot","_updateFileTypes","data","isVideo","test","type","isAudio","isImage","isText","isJSON","isPDF","_dataToSchema","ds","path","meta","size","userId","versions","original","_downloadRoute","downloadRoute","_collectionName","collectionName","fileId","_id","_storagePath","storagePath","extend","findOne","selector","options","JSON","stringify","Optional","OneOf","Object","String","Boolean","Number","doc","collection","find","update","link","fileRef","version","isObject","schema","optional","blackbox","updatedAt","Date"],"mappings":"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","file":"packages/ostrio:files/core.js.map","sourcesContent":["import { _ }                       from 'meteor/underscore';\nimport { EventEmitter }            from 'eventemitter3';\nimport { formatFleURL }            from './lib.js';\nimport { check, Match }            from 'meteor/check';\nimport { FilesCursor, FileCursor } from './cursor.js';\n\nexport default class FilesCollectionCore extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  static schema = {\n    size: {\n      type: Number\n    },\n    name: {\n      type: String\n    },\n    type: {\n      type: String\n    },\n    path: {\n      type: String\n    },\n    isVideo: {\n      type: Boolean\n    },\n    isAudio: {\n      type: Boolean\n    },\n    isImage: {\n      type: Boolean\n    },\n    isText: {\n      type: Boolean\n    },\n    isJSON: {\n      type: Boolean\n    },\n    isPDF: {\n      type: Boolean\n    },\n    extension: {\n      type: String,\n      optional: true\n    },\n    _storagePath: {\n      type: String\n    },\n    _downloadRoute: {\n      type: String\n    },\n    _collectionName: {\n      type: String\n    },\n    public: {\n      type: Boolean,\n      optional: true\n    },\n    meta: {\n      type: Object,\n      blackbox: true,\n      optional: true\n    },\n    userId: {\n      type: String,\n      optional: true\n    },\n    updatedAt: {\n      type: Date,\n      optional: true\n    },\n    versions: {\n      type: Object,\n      blackbox: true\n    }\n  };\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _debug\n   * @summary Print logs in debug mode\n   * @returns {void}\n   */\n  _debug() {\n    if (this.debug) {\n      (console.info || console.log || function () { }).apply(undefined, arguments);\n    }\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _getFileName\n   * @param {Object} fileData - File Object\n   * @summary Returns file's name\n   * @returns {String}\n   */\n  _getFileName(fileData) {\n    const fileName = fileData.name || fileData.fileName;\n    if (_.isString(fileName) && (fileName.length > 0)) {\n      return (fileData.name || fileData.fileName).replace(/\\.\\./g, '').replace(/\\//g, '');\n    }\n    return '';\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _getExt\n   * @param {String} FileName - File name\n   * @summary Get extension from FileName\n   * @returns {Object}\n   */\n  _getExt(fileName) {\n    if (!!~fileName.indexOf('.')) {\n      const extension = (fileName.split('.').pop().split('?')[0] || '').toLowerCase();\n      return { ext: extension, extension, extensionWithDot: `.${extension}` };\n    }\n    return { ext: '', extension: '', extensionWithDot: '' };\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _updateFileTypes\n   * @param {Object} data - File data\n   * @summary Internal method. Classify file based on 'type' field\n   */\n  _updateFileTypes(data) {\n    data.isVideo  = /^video\\//i.test(data.type);\n    data.isAudio  = /^audio\\//i.test(data.type);\n    data.isImage  = /^image\\//i.test(data.type);\n    data.isText   = /^text\\//i.test(data.type);\n    data.isJSON   = /^application\\/json$/i.test(data.type);\n    data.isPDF    = /^application\\/(x-)?pdf$/i.test(data.type);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _dataToSchema\n   * @param {Object} data - File data\n   * @summary Internal method. Build object in accordance with default schema from File data\n   * @returns {Object}\n   */\n  _dataToSchema(data) {\n    const ds = {\n      name: data.name,\n      extension: data.extension,\n      path: data.path,\n      meta: data.meta,\n      type: data.type,\n      size: data.size,\n      userId: data.userId || null,\n      versions: {\n        original: {\n          path: data.path,\n          size: data.size,\n          type: data.type,\n          extension: data.extension\n        }\n      },\n      _downloadRoute: data._downloadRoute || this.downloadRoute,\n      _collectionName: data._collectionName || this.collectionName\n    };\n\n    //Optional fileId\n    if (data.fileId) {\n      ds._id = data.fileId;\n    }\n\n    this._updateFileTypes(ds);\n    ds._storagePath = data._storagePath || this.storagePath(_.extend(data, ds));\n    return ds;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name findOne\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n   * @summary Find and return Cursor for matching document Object\n   * @returns {FileCursor} Instance\n   */\n  findOne(selector = {}, options) {\n    this._debug(`[FilesCollection] [findOne(${JSON.stringify(selector)}, ${JSON.stringify(options)})]`);\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n\n    const doc = this.collection.findOne(selector, options);\n    if (doc) {\n      return new FileCursor(doc, this);\n    }\n    return doc;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name find\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n   * @summary Find and return Cursor for matching documents\n   * @returns {FilesCursor} Instance\n   */\n  find(selector = {}, options) {\n    this._debug(`[FilesCollection] [find(${JSON.stringify(selector)}, ${JSON.stringify(options)})]`);\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n\n    return new FilesCursor(selector, options, this);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name update\n   * @see http://docs.meteor.com/#/full/update\n   * @summary link Mongo.Collection update method\n   * @returns {Mongo.Collection} Instance\n   */\n  update() {\n    this.collection.update.apply(this.collection, arguments);\n    return this.collection;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name link\n   * @param {Object} fileRef - File reference object\n   * @param {String} version - Version of file you would like to request\n   * @summary Returns downloadable URL\n   * @returns {String} Empty string returned in case if file not found in DB\n   */\n  link(fileRef, version = 'original') {\n    this._debug(`[FilesCollection] [link(${(_.isObject(fileRef) ? fileRef._id : undefined)}, ${version})]`);\n    check(fileRef, Object);\n    check(version, String);\n\n    if (!fileRef) {\n      return '';\n    }\n    return formatFleURL(fileRef, version);\n  }\n}\n"]},"hash":"fc40e8f60d85da41bb8e5b6f3b72569a7be4c2bb"}

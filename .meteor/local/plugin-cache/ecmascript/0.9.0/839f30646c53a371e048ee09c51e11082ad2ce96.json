{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"../api/CompanySettingMaster.js","imported":["CompanySettings"],"specifiers":[{"kind":"named","imported":"CompanySettings","local":"CompanySettings"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"./CompanyTaxList.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CompanyTaxList"}]},{"source":"./companySettingIndicators.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CompanySettingIndicators"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/companySetting/components/CompanyTaxDetails.jsx","filenameRelative":"imports/dashboard/companySetting/components/CompanyTaxDetails.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/companySetting/components/CompanyTaxDetails.jsx.map","sourceFileName":"imports/dashboard/companySetting/components/CompanyTaxDetails.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"CompanyTaxDetails"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n  default(v) {\n    Validation = v;\n  }\n\n}, 3);\nlet validator;\nmodule.watch(require(\"validator\"), {\n  default(v) {\n    validator = v;\n  }\n\n}, 4);\nlet CompanySettings;\nmodule.watch(require(\"../api/CompanySettingMaster.js\"), {\n  CompanySettings(v) {\n    CompanySettings = v;\n  }\n\n}, 5);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 6);\nlet CompanyTaxList;\nmodule.watch(require(\"./CompanyTaxList.jsx\"), {\n  default(v) {\n    CompanyTaxList = v;\n  }\n\n}, 7);\nlet CompanySettingIndicators;\nmodule.watch(require(\"./companySettingIndicators.jsx\"), {\n  default(v) {\n    CompanySettingIndicators = v;\n  }\n\n}, 8);\n\nclass CompanyTaxDetails extends TrackerReact(Component) {\n  componentDidMount() {\n    $('.companyTaxDetails').addClass('divActive');\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taxType: this.props.taxType,\n      applicableTax: this.props.applicableTax,\n      effectiveFrom: this.props.effectiveFrom,\n      subscription: {\n        \"companyData\": Meteor.subscribe('companyData')\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      taxType: nextProps.post.taxType,\n      applicableTax: nextProps.post.applicableTax,\n      effectiveFrom: nextProps.post.effectiveFrom\n    });\n    this.handleChange = this.handleChange.bind(this); // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  companyTaxData() {\n    var companyData = CompanySettings.findOne({\n      \"companyId\": 1\n    });\n    var companyarray = [];\n\n    if (companyData) {\n      if (companyData.taxSettings) {\n        for (i = 0; i < companyData.taxSettings.length; i++) {\n          companyarray.push({\n            'taxType': companyData.taxSettings[i].taxType,\n            'applicableTax': companyData.taxSettings[i].applicableTax,\n            'effectiveFrom': companyData.taxSettings[i].effectiveFrom,\n            'effectiveTo': companyData.taxSettings[i].effectiveTo,\n            'index': i,\n            '_id': companyData._id\n          });\n        } //i\n\n      }\n    } //companyData\n\n\n    return companyarray;\n  }\n\n  submitCompanyTax(event) {\n    event.preventDefault();\n    var sessionVar = Session.get('taxType');\n    var targetedID = Session.get('targetedID');\n    var taxSettingsFormValue = {\n      taxType: $(\".taxType\").val(),\n      applicableTax: $(\".applicableTax\").val(),\n      effectiveFrom: $(\".effectiveFrom\").val() //close array\n\n    };\n\n    if (sessionVar) {\n      Meteor.call('updatetaxSettings', taxSettingsFormValue, targetedID, function (error, result) {\n        if (error) {\n          console.log(error);\n        } else {\n          swal('Tax Detail Updated!');\n          $(\".taxType\").val('');\n          $(\".applicableTax\").val('');\n          $(\".effectiveFrom\").val('');\n        }\n      });\n    } else {\n      Meteor.call('insertTaxSettings', taxSettingsFormValue, function (error, result) {\n        if (error) {\n          console.log(error);\n        } else {\n          swal('Tax Detail Added!');\n          $(\".taxType\").val('');\n          $(\".applicableTax\").val('');\n          $(\".effectiveFrom\").val('');\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\n      \"section\",\n      {\n        className: \"NotificationContent\"\n      },\n      React.createElement(\n        \"div\",\n        {\n          className: \"row\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-12 col-xs-12 \"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"box box-default\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"box-header with-border\"\n              },\n              React.createElement(\n                \"h3\",\n                {\n                  className: \"box-title\"\n                },\n                \"TAX DETAILS\"\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"box-body\"\n              },\n              React.createElement(\n                \"form\",\n                {\n                  id: \"companyTaxForm\",\n                  className: \"companyTaxForm\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-usd\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.taxType,\n                      onChange: this.handleChange,\n                      type: \"text\",\n                      placeholder: \"Enter Tax Type\",\n                      name: \"taxType\",\n                      className: \"form-control taxType inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-money\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.applicableTax,\n                      onChange: this.handleChange,\n                      type: \"number\",\n                      placeholder: \"Enter Tax Rate(%)\",\n                      name: \"applicableTax\",\n                      className: \"form-control applicableTax inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-calendar\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.effectiveFrom,\n                      onChange: this.handleChange,\n                      type: \"date\",\n                      name: \"effectiveFrom\",\n                      className: \"form-control effectiveFrom inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"button\",\n                    {\n                      className: \"col-lg-3 col-md-4 col-sm-6 col-xs-12  btn btn-primary pull-right companyTaxSubmit marginBottomDiv\",\n                      onClick: this.submitCompanyTax.bind(this)\n                    },\n                    \"Submit\"\n                  )\n                )\n              )\n            )\n          )\n        )\n      ),\n      React.createElement(\n        \"div\",\n        {\n          className: \"table-responsive\"\n        },\n        React.createElement(\n          \"table\",\n          {\n            className: \"table table-bordered table-striped table-hover\"\n          },\n          React.createElement(\n            \"thead\",\n            null,\n            React.createElement(\n              \"tr\",\n              {\n                className: \"tableHeader\"\n              },\n              React.createElement(\n                \"th\",\n                null,\n                \" Tax Type \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Applicable Tax \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Effective From \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Effective To \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Action \"\n              )\n            )\n          ),\n          React.createElement(\n            \"tbody\",\n            null,\n            this.companyTaxData().map(taxData => {\n              return React.createElement(CompanyTaxList, {\n                key: taxData.index,\n                companyTaxDataVales: taxData\n              });\n            })\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditCompanyTaxDetails = createContainer(props => {\n  const postHandle = Meteor.subscribe('companyData');\n  const post = CompanySettings.findOne({}) || {};\n  const loading = !postHandle.ready();\n  return {\n    loading,\n    post\n  };\n}, CompanyTaxDetails);\nmodule.exportDefault(EditCompanyTaxDetails);","map":{"version":3,"sources":["imports/dashboard/companySetting/components/CompanyTaxDetails.jsx"],"names":["React","Component","module","watch","require","default","v","render","TrackerReact","Validation","validator","CompanySettings","createContainer","CompanyTaxList","CompanySettingIndicators","CompanyTaxDetails","componentDidMount","$","addClass","handleChange","event","target","name","setState","value","constructor","props","state","taxType","applicableTax","effectiveFrom","subscription","Meteor","subscribe","bind","componentWillReceiveProps","nextProps","post","companyTaxData","companyData","findOne","companyarray","taxSettings","i","length","push","effectiveTo","_id","submitCompanyTax","preventDefault","sessionVar","Session","get","targetedID","taxSettingsFormValue","val","call","error","result","console","log","swal","map","taxData","index","EditCompanyTaxDetails","postHandle","loading","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/companySetting/components/CompanyTaxDetails.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport { CompanySettings } from '../api/CompanySettingMaster.js';\nimport {createContainer} from 'meteor/react-meteor-data';\n\nimport CompanyTaxList from './CompanyTaxList.jsx';\nimport CompanySettingIndicators from './companySettingIndicators.jsx';\n\nclass CompanyTaxDetails extends TrackerReact(Component){\n\n  componentDidMount(){\n    $('.companyTaxDetails').addClass('divActive');\n  }\n\n  handleChange(event){\n\t  const target = event.target;\n\t  const name   = target.name;\n\t  this.setState({\n\t  \t[name]: event.target.value,\n\t  });\n\t}\n\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t    taxType        : this.props.taxType,\n\t    applicableTax  : this.props.applicableTax,\n\t    effectiveFrom  : this.props.effectiveFrom,\n\n\t    subscription : {\n\t        \"companyData\" : Meteor.subscribe('companyData'),\n\t      }\n\n\t  };\n\n\t    this.handleChange = this.handleChange.bind(this);\n\t}\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n        taxType       : nextProps.post.taxType,\n        applicableTax : nextProps.post.applicableTax,\n        effectiveFrom : nextProps.post.effectiveFrom,\n    })\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n  companyTaxData(){\n  \tvar companyData = CompanySettings.findOne({\"companyId\" : 1});\n  \tvar companyarray = [];\n  \tif(companyData){\n  \t\tif(companyData.taxSettings){\n  \t\t\tfor(i=0;i<companyData.taxSettings.length;i++){\n  \t\t\t\tcompanyarray.push({\n  \t\t\t\t\t'taxType'        : companyData.taxSettings[i].taxType,\n  \t\t\t\t\t'applicableTax'  : companyData.taxSettings[i].applicableTax,\n            'effectiveFrom'  : companyData.taxSettings[i].effectiveFrom,\n  \t\t\t\t\t'effectiveTo'    : companyData.taxSettings[i].effectiveTo,\n  \t\t\t\t\t'index'\t\t\t     : i,\n  \t\t\t\t\t'_id'\t\t\t       : companyData._id,\n  \t\t\t\t})\n  \t\t\t}//i\n  \t\t}\n  \t}//companyData\n  \treturn companyarray;\n  }\n\n  submitCompanyTax(event){\n    event.preventDefault();\n    var sessionVar = Session.get('taxType');\n    var targetedID = Session.get('targetedID');\n\n    var taxSettingsFormValue ={\n\n    \ttaxType       : $(\".taxType\").val(),\n      applicableTax : $(\".applicableTax\").val(),\n      effectiveFrom : $(\".effectiveFrom\").val(),\n\n     }//close array\n\n     if(sessionVar){\n        Meteor.call('updatetaxSettings', taxSettingsFormValue,targetedID,\n              function(error, result){\n                if(error){\n                  console.log(error);\n                }else{\n\n                  swal('Tax Detail Updated!');\n                  $(\".taxType\").val('');\n                  $(\".applicableTax\").val('');\n                  $(\".effectiveFrom\").val('');\n                }\n              }\n        );\n     }else{\n\t    Meteor.call('insertTaxSettings', taxSettingsFormValue,\n\t            function(error, result){\n\t              if(error){\n\t                console.log(error);\n\t              }else{\n\n\t                swal('Tax Detail Added!');\n\t                $(\".taxType\").val('');\n                  $(\".applicableTax\").val('');\n                  $(\".effectiveFrom\").val('');\n\t              }\n\t            }\n\t    );\n     }\n  }\n\n  render(){\n\n  \treturn(\n\n  \t\t<section className=\"NotificationContent\">\n        <div className=\"row\">\n          <div className=\"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-12 col-xs-12 \">\n            <div className=\"box box-default\">\n            <div className=\"box-header with-border\">\n            <h3 className=\"box-title\">TAX DETAILS</h3>\n            </div>\n\n            <div className=\"box-body\">\n            <form id=\"companyTaxForm\" className=\"companyTaxForm\">\n              <div className=\"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\">\n                <div className=\"input-group\">\n                 <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-usd\" aria-hidden=\"true\"></i></span>\n                 <input value={this.state.taxType} onChange={this.handleChange} type=\"text\" placeholder=\"Enter Tax Type\" name=\"taxType\" className=\"form-control taxType inputValid\" required/>\n                </div>\n              </div>\n\n              <div className=\"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\">\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-money\" aria-hidden=\"true\"></i></span>\n                  <input value={this.state.applicableTax} onChange={this.handleChange} type=\"number\" placeholder=\"Enter Tax Rate(%)\" name=\"applicableTax\" className=\"form-control applicableTax inputValid\" required />\n                </div>\n              </div>\n\n               <div className=\"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\">\n                <div className=\"input-group\">\n    \t             <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i></span>\n                   <input value={this.state.effectiveFrom} onChange={this.handleChange} type=\"date\"  name=\"effectiveFrom\" className=\"form-control effectiveFrom inputValid\" required/>\n                </div>\n              </div>\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <button className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12  btn btn-primary pull-right companyTaxSubmit marginBottomDiv\" onClick={this.submitCompanyTax.bind(this)}>Submit</button>\n              </div>\n            </form>\n            </div>\n            </div>\n          </div>\n  \t\t  </div>\n\n  \t\t  <div className=\"table-responsive\">\n    \t\t\t<table className=\"table table-bordered table-striped table-hover\">\n    \t\t\t\t<thead>\n    \t\t\t\t\t<tr className=\"tableHeader\">\n    \t\t\t\t\t\t<th> Tax Type </th>\n    \t\t\t\t\t\t<th> Applicable Tax </th>\n                <th> Effective From </th>\n    \t\t\t\t\t\t<th> Effective To </th>\n    \t\t\t\t\t\t<th> Action </th>\n    \t\t\t\t\t</tr>\n    \t\t\t\t</thead>\n    \t\t\t\t<tbody>\n    \t\t\t\t\t{ this.companyTaxData().map( (taxData)=>{\n    \t\t\t\t\t\treturn <CompanyTaxList key={taxData.index} companyTaxDataVales={taxData}/>\n    \t\t\t\t\t  })\n    \t\t\t\t\t}\n    \t\t\t\t</tbody>\n    \t\t\t</table>\n    \t\t</div>\n\n\n\n\t\t    {/*<div className=\"emptyDiv\"></div>*/}\n      </section>\n\n  \t\t);\n  }\n\n }\n\n EditCompanyTaxDetails = createContainer((props)=>{\n\n    const postHandle = Meteor.subscribe('companyData');\n    const post       = CompanySettings.findOne({})||{};\n    const loading    = !postHandle.ready();\n\n    return {\n        loading,\n        post,\n    };\n}, CompanyTaxDetails);\n\nexport default EditCompanyTaxDetails;\n"]},"hash":"839f30646c53a371e048ee09c51e11082ad2ce96"}

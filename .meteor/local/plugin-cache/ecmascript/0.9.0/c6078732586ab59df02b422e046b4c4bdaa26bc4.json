{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"../api/ManageLocation.js","imported":["Location"],"specifiers":[{"kind":"named","imported":"Location","local":"Location"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"./ListOfLocations.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ListOfLocations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/forms/manageLocation/ManageLocation.jsx","filenameRelative":"imports/dashboard/forms/manageLocation/ManageLocation.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/manageLocation/ManageLocation.jsx.map","sourceFileName":"imports/dashboard/forms/manageLocation/ManageLocation.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ManageLocation"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet Location;\nmodule.watch(require(\"../api/ManageLocation.js\"), {\n  Location(v) {\n    Location = v;\n  }\n\n}, 3);\nlet browserHistory;\nmodule.watch(require(\"react-router\"), {\n  browserHistory(v) {\n    browserHistory = v;\n  }\n\n}, 4);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n  Link(v) {\n    Link = v;\n  }\n\n}, 5);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 6);\nlet ListOfLocations;\nmodule.watch(require(\"./ListOfLocations.jsx\"), {\n  default(v) {\n    ListOfLocations = v;\n  }\n\n}, 7);\n\nclass ManageLocation extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: '',\n      state: '',\n      city: '',\n      area: '',\n      pinCode: '',\n      button: '',\n      \"subscription\": {\n        \"singleLocation\": Meteor.subscribe(\"singleLocation\")\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      if (nextProps.location) {\n        this.setState({\n          country: nextProps.location.country,\n          state: nextProps.location.state,\n          city: nextProps.location.city,\n          area: nextProps.location.area,\n          pinCode: nextProps.location.pinCode,\n          id: nextProps.location._id,\n          button: nextProps.button\n        });\n      }\n    } else {\n      this.setState({\n        country: '',\n        state: '',\n        city: '',\n        area: '',\n        pinCode: '',\n        id: '',\n        button: ''\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    $(\"html,body\").scrollTop(0);\n\n    if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n      var adminLte = document.createElement(\"script\");\n      adminLte.type = \"text/javascript\";\n      adminLte.src = \"/js/adminLte.js\";\n      $(\"body\").append(adminLte);\n    }\n  }\n\n  componentWillMount() {// if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n    //   var dashboardCss = document.createElement(\"link\");\n    //   dashboardCss.type = \"text/css\"; \n    //   dashboardCss.rel = \"stylesheet\";\n    //   dashboardCss.href = \"/css/dashboard.css\"; \n    //   document.head.append(dashboardCss);\n    // }\n  }\n\n  componentWillUnmount() {\n    $(\"script[src='/js/adminLte.js']\").remove(); // $(\"link[href='/css/dashboard.css']\").remove(); \n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var country = this.refs.country.value.charAt(0).toUpperCase() + this.refs.country.value.slice(1);\n    var state = this.refs.state.value.charAt(0).toUpperCase() + this.refs.state.value.slice(1);\n    var city = this.refs.city.value.charAt(0).toUpperCase() + this.refs.city.value.slice(1);\n    var area = this.refs.area.value.charAt(0).toUpperCase() + this.refs.area.value.slice(1);\n    var pinCode = this.refs.pinCode.value;\n    var id = this.props.params.id;\n\n    if (id) {\n      Meteor.call('updateLocation', id, country, state, city, area, pinCode, (error, result) => {\n        if (error) {\n          console.log(error.reason);\n        } else {\n          swal(\"Done\", \"Location has been Updated!.\", \"success\");\n          var path = \"/admin/ManageLocation\";\n          browserHistory.replace(path);\n        }\n      });\n    } else {\n      Meteor.call('addLocation', country, state, city, area, pinCode, (error, result) => {\n        if (error) {\n          console.log(error.reason);\n        } else {\n          swal(\"Done\", \"Location has been Inserted!.\", \"success\");\n          $(\".country\").val(\"\");\n          $(\".state\").val(\"\");\n          $(\".city\").val(\"\");\n          $(\".area\").val(\"\");\n          $(\".pinCode\").val(\"\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"content-wrapper\"\n      },\n      React.createElement(\n        \"section\",\n        {\n          className: \"content-header\"\n        },\n        React.createElement(\n          \"h1\",\n          null,\n          \" Master Data \"\n        ),\n        React.createElement(\n          \"ol\",\n          {\n            className: \"breadcrumb\"\n          },\n          React.createElement(\n            \"li\",\n            null,\n            React.createElement(\n              \"a\",\n              {\n                href: \"#\"\n              },\n              React.createElement(\"i\", {\n                className: \"fa fa-newspaper-o\"\n              }),\n              \"Master Data\"\n            )\n          ),\n          React.createElement(\n            \"li\",\n            {\n              className: \"active\"\n            },\n            \"Manage Location\"\n          )\n        )\n      ),\n      React.createElement(\n        \"section\",\n        {\n          className: \"content\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"box box-primary\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box-header with-border\"\n                },\n                React.createElement(\n                  \"h2\",\n                  {\n                    className: \"box-title\"\n                  },\n                  \"Manage Location\"\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box-body\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"col-lg-12 col-sm-12 col-xs-12 col-md-12\"\n                  },\n                  React.createElement(\n                    \"form\",\n                    {\n                      id: \"add-book\"\n                    },\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row inputrow\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"Country\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"country\",\n                            id: \"country\",\n                            name: \"country\",\n                            value: this.state.country,\n                            className: \"templateName country col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid required\",\n                            onChange: this.handleChange\n                          })\n                        )\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"State\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"state\",\n                            id: \"state\",\n                            name: \"state\",\n                            value: this.state.state,\n                            className: \"templateName state col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\",\n                            onChange: this.handleChange\n                          })\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row inputrow\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"City\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"city\",\n                            id: \"city\",\n                            name: \"city\",\n                            value: this.state.city,\n                            className: \"templateName city col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid required\",\n                            onChange: this.handleChange\n                          })\n                        )\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"Area\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"area\",\n                            id: \"area\",\n                            name: \"area\",\n                            value: this.state.area,\n                            className: \"templateName area col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\",\n                            onChange: this.handleChange\n                          })\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"row inputrow\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"form-group\"\n                          },\n                          React.createElement(\n                            \"label\",\n                            {\n                              className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                            },\n                            \"Pin Code\"\n                          ),\n                          React.createElement(\"input\", {\n                            type: \"text\",\n                            ref: \"pinCode\",\n                            id: \"pinCode\",\n                            name: \"pinCode\",\n                            value: this.state.pinCode,\n                            className: \"templateName pinCode col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid required\",\n                            onChange: this.handleChange\n                          })\n                        )\n                      )\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12\"\n                      },\n                      React.createElement(\n                        \"button\",\n                        {\n                          className: \"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\",\n                          onClick: this.handleSubmit.bind(this),\n                          type: \"submit\",\n                          value: \"\"\n                        },\n                        this.state.button\n                      )\n                    )\n                  )\n                ),\n                React.createElement(ListOfLocations, null)\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditPageContainer = withTracker(({\n  params\n}) => {\n  var _id = params.id;\n  const postHandle = Meteor.subscribe('singleLocation', _id); // var editServices   = this.props.params.id;\n  // console.log(\"Param\" +editServices);\n\n  const location = Location.findOne({\n    \"_id\": _id\n  }) || {};\n  const loading = !postHandle.ready();\n\n  if (_id) {\n    var button = \"UPDATE\";\n    return {\n      loading,\n      location,\n      button\n    };\n  } else {\n    var button = \"ADD\";\n    return {\n      loading,\n      location,\n      button\n    };\n  }\n})(ManageLocation);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/forms/manageLocation/ManageLocation.jsx"],"names":["React","Component","module","watch","require","default","v","render","TrackerReact","Location","browserHistory","Link","withTracker","ListOfLocations","ManageLocation","constructor","props","state","country","city","area","pinCode","button","Meteor","subscribe","handleChange","bind","componentWillReceiveProps","nextProps","loading","location","setState","id","_id","componentDidMount","$","scrollTop","length","hasClass","adminLte","document","createElement","type","src","append","componentWillMount","componentWillUnmount","remove","event","target","name","value","handleSubmit","preventDefault","refs","charAt","toUpperCase","slice","params","call","error","result","console","log","reason","swal","path","replace","val","EditPageContainer","postHandle","findOne","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/forms/manageLocation/ManageLocation.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { Location } from '../api/ManageLocation.js';\nimport {browserHistory} from 'react-router';\nimport { Link } from 'react-router';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport ListOfLocations from './ListOfLocations.jsx';\n\nclass ManageLocation extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);  \n    this.state = {\n      country  : '',\n      state    : '',\n      city     : '',\n      area     : '',\n      pinCode  : '',\n      button   : '',\n      \"subscription\"  : {\n        \"singleLocation\" : Meteor.subscribe(\"singleLocation\"),\n      }\n    }; \n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.location){\n         this.setState({\n             country  : nextProps.location.country,\n             state    : nextProps.location.state,\n             city     : nextProps.location.city,\n             area     : nextProps.location.area,\n             pinCode  : nextProps.location.pinCode,\n             id       : nextProps.location._id,\n             button   : nextProps.button,\n         });\n      }\n    }else{\n      this.setState({\n             country  : '',\n             state    : '',\n             city     : '',\n             area     : '',\n             pinCode  : '',\n             id       : '',\n             button   : '',\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() { \n    $(\"html,body\").scrollTop(0);\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n     var adminLte = document.createElement(\"script\");  \n     adminLte.type=\"text/javascript\";  \n     adminLte.src = \"/js/adminLte.js\";  \n     $(\"body\").append(adminLte);  \n    }\n  }\n  componentWillMount() {\n    // if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n    //   var dashboardCss = document.createElement(\"link\");\n    //   dashboardCss.type = \"text/css\"; \n    //   dashboardCss.rel = \"stylesheet\";\n    //   dashboardCss.href = \"/css/dashboard.css\"; \n    //   document.head.append(dashboardCss);\n    // }\n  }\n componentWillUnmount(){  \n   $(\"script[src='/js/adminLte.js']\").remove(); \n   // $(\"link[href='/css/dashboard.css']\").remove(); \n }\n handleChange(event){\n     const target = event.target;\n     const name   = target.name;\n     this.setState({\n      [name]: event.target.value,\n     });\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    var country   = this.refs.country.value.charAt(0).toUpperCase() + this.refs.country.value.slice(1);\n    var state     = this.refs.state.value.charAt(0).toUpperCase() + this.refs.state.value.slice(1);\n    var city      = this.refs.city.value.charAt(0).toUpperCase() + this.refs.city.value.slice(1);\n    var area      = this.refs.area.value.charAt(0).toUpperCase() + this.refs.area.value.slice(1);\n    var pinCode   = this.refs.pinCode.value;\n    var id        = this.props.params.id;\n    if(id){\n       Meteor.call('updateLocation',id,country,state,city,area,pinCode,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"Location has been Updated!.\",\"success\");  \n          var path = \"/admin/ManageLocation\";\n          browserHistory.replace(path);\n        }            \n      });\n\n    }else{\n      Meteor.call('addLocation',country,state,city,area,pinCode,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"Location has been Inserted!.\",\"success\");  \n          $(\".country\").val(\"\");\n          $(\".state\").val(\"\");\n          $(\".city\").val(\"\");\n          $(\".area\").val(\"\");\n          $(\".pinCode\").val(\"\");\n\n        }            \n      });\n    }\n  }\n\trender() {\n   return (\n    <div className=\"content-wrapper\">\n      <section className=\"content-header\">\n        <h1> Master Data </h1>\n        <ol className=\"breadcrumb\">\n          <li>\n            <a href=\"#\"><i className=\"fa fa-newspaper-o\" />Master Data</a></li>\n          <li className=\"active\">Manage Location</li>\n        </ol>\n      </section>\n      <section className=\"content\">\n         <div className=\"row\">\n           <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n             <div className=\"box box-primary\">\n                <div className=\"box-header with-border\">\n                 <h2 className=\"box-title\">Manage Location</h2>  \n                </div>\n                <div className=\"box-body\">                      \n                  <div className=\"col-lg-12 col-sm-12 col-xs-12 col-md-12\"> \n                    <form id=\"add-book\">\n                       <div className=\"row inputrow\">\n                          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Country</label>\n                               <input type=\"text\" ref=\"country\" id=\"country\" name=\"country\" value={this.state.country} className=\"templateName country col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid required\" onChange={this.handleChange} />\n                            </div>\n                           </div>\n                           <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                              <div className=\"form-group\">\n                               <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">State</label>\n                                 <input type=\"text\" ref=\"state\" id=\"state\" name=\"state\" value={this.state.state} className=\"templateName state col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" onChange={this.handleChange} />\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"row inputrow\">\n                          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">City</label>\n                               <input type=\"text\" ref=\"city\" id=\"city\" name=\"city\" value={this.state.city} className=\"templateName city col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid required\" onChange={this.handleChange} />\n                            </div>\n                           </div>\n                           <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                              <div className=\"form-group\">\n                               <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Area</label>\n                                 <input type=\"text\" ref=\"area\" id=\"area\" name=\"area\" value={this.state.area} className=\"templateName area col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" onChange={this.handleChange} />\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"row inputrow\">\n                          <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Pin Code</label>\n                               <input type=\"text\" ref=\"pinCode\" id=\"pinCode\" name=\"pinCode\" value={this.state.pinCode} className=\"templateName pinCode col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid required\" onChange={this.handleChange} />\n                            </div>\n                           </div>\n                        </div>\n                        <div className=\"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                          <button className=\"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\" onClick={this.handleSubmit.bind(this)} type=\"submit\" value=\"\" >{this.state.button}</button>\n                        </div> \n                    </form>\n                  </div>\n                  <ListOfLocations />\n                </div>\n             </div>\n            </div>\n         </div>\n       </section>\n    </div>\n    );\n  } \n}\n\nEditPageContainer = withTracker(({params}) => {\n    var _id          = params.id;\n    const postHandle = Meteor.subscribe('singleLocation',_id);\n    // var editServices   = this.props.params.id;\n    // console.log(\"Param\" +editServices);\n    const location  = Location.findOne({\"_id\":_id})|| {};\n    const loading   = !postHandle.ready();\n    \n    if(_id){\n      var button = \"UPDATE\";\n      return {\n          loading,\n          location,\n          button,\n      };\n    }else{\n       var button = \"ADD\";\n      return {\n          loading,\n          location,\n          button\n      };\n    }\n})(ManageLocation);\n\nexport default EditPageContainer;\n"]},"hash":"c6078732586ab59df02b422e046b4c4bdaa26bc4"}

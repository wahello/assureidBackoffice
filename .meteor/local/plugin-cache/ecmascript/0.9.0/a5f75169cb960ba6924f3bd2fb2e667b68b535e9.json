{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["FAQS"],"specifiers":[{"kind":"local","local":"FAQS","exported":"FAQS"}]}}},"options":{"filename":"imports/dashboard/reactCMS/api/FAQS.js","filenameRelative":"imports/dashboard/reactCMS/api/FAQS.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/reactCMS/api/FAQS.js.map","sourceFileName":"imports/dashboard/reactCMS/api/FAQS.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FAQS"},"ignored":false,"code":"module.export({\n    FAQS: function () {\n        return FAQS;\n    }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo: function (v) {\n        Mongo = v;\n    }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 1);\nvar FAQS = new Mongo.Collection(\"faqs\");\n\nif (Meteor.isServer) {\n    Meteor.publish('faqs', function () {\n        return FAQS.find({});\n    });\n    Meteor.methods({\n        'createFAQ': function (FAQQuestion, FAQAnswer, userId, updateTimestamp) {\n            FAQS.insert({\n                'FAQQuestion': FAQQuestion,\n                'FAQAnswer': FAQAnswer,\n                'createdAt': new Date(),\n                'authorUserId': userId,\n                'lastModified': updateTimestamp\n            });\n        },\n        'updateFAQ': function (id, FAQQuestion, FAQAnswer, userId, updateTimestamp) {\n            FAQS.update({\n                '_id': id\n            }, {\n                $set: {\n                    'FAQQuestion': FAQQuestion,\n                    'FAQAnswer': FAQAnswer,\n                    'authorUserId': userId,\n                    'lastModified': updateTimestamp //End of set\n\n                }\n            });\n        },\n        'deleteFAQ': function (id) {\n            FAQS.remove({\n                '_id': id\n            });\n        }\n    });\n}","map":{"version":3,"sources":["imports/dashboard/reactCMS/api/FAQS.js"],"names":["module","export","FAQS","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","methods","FAQQuestion","FAQAnswer","userId","updateTimestamp","insert","Date","id","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,UAAK;AAAA,eAAIA,IAAJ;AAAA;AAAN,CAAd;AAA+B,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,SAAD,YAAOG,CAAP,EAAS;AAACH,gBAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,UAAD,YAAQD,CAAR,EAAU;AAACC,iBAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAGzG,IAAMJ,OAAO,IAAIC,MAAMK,UAAV,CAAqB,MAArB,CAAb;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AACfF,WAAOG,OAAP,CAAe,MAAf,EAAsB,YAAI;AACtB,eAAOR,KAAKS,IAAL,CAAU,EAAV,CAAP;AACH,KAFD;AAIAJ,WAAOK,OAAP,CAAe;AACd,qBAAY,UAASC,WAAT,EAAqBC,SAArB,EAA+BC,MAA/B,EAAsCC,eAAtC,EAAsD;AAEjEd,iBAAKe,MAAL,CAAY;AACX,+BAAmBJ,WADR;AAEX,6BAAmBC,SAFR;AAGX,6BAAmB,IAAII,IAAJ,EAHR;AAIR,gCAAmBH,MAJX;AAKR,gCAAmBC;AALX,aAAZ;AAOA,SAVa;AAWb,qBAAY,UAASG,EAAT,EAAYN,WAAZ,EAAwBC,SAAxB,EAAkCC,MAAlC,EAAyCC,eAAzC,EAAyD;AACrEd,iBAAKkB,MAAL,CACC;AAAE,uBAAOD;AAAT,aADD,EAEO;AACEE,sBAAK;AACF,mCAAmBR,WADjB;AAEF,iCAAmBC,SAFjB;AAGF,oCAAmBC,MAHjB;AAIF,oCAAmBC,eAJjB,CAKL;;AALK;AADP,aAFP;AAWA,SAvBa;AAwBb,qBAAY,UAASG,EAAT,EAAY;AACtBjB,iBAAKoB,MAAL,CAAY;AAAC,uBAAOH;AAAR,aAAZ;AAEF;AA3Ba,KAAf;AA6BH","file":"imports/dashboard/reactCMS/api/FAQS.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const FAQS = new Mongo.Collection(\"faqs\");\n\nif(Meteor.isServer){\n    Meteor.publish('faqs',()=>{\n        return FAQS.find({});\n    });\n\n    Meteor.methods({\n    \t'createFAQ':function(FAQQuestion,FAQAnswer,userId,updateTimestamp){\n\n    \t\tFAQS.insert({\n    \t\t\t'FAQQuestion'    : FAQQuestion,\n    \t\t\t'FAQAnswer'      : FAQAnswer,\n    \t\t\t'createdAt'      : new Date(),\n          'authorUserId'   : userId,\n          'lastModified'   : updateTimestamp,\n    \t\t});\n    \t},\n      'updateFAQ':function(id,FAQQuestion,FAQAnswer,userId,updateTimestamp){\n    \t\tFAQS.update(\n    \t\t\t{ '_id': id },\n    \t        {\n    \t          $set:{\n                  'FAQQuestion'    : FAQQuestion,                \n                  'FAQAnswer'      : FAQAnswer,\n                  'authorUserId'   : userId,\n                  'lastModified'   : updateTimestamp,\n    \t        } //End of set\n    \t      }\n    \t\t);\n    \t},\n      'deleteFAQ':function(id){\n     \t\t FAQS.remove({'_id': id});\n\n    \t},\n    });\n}\n"]},"hash":"a5f75169cb960ba6924f3bd2fb2e667b68b535e9"}

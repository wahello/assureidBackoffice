{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]}],"exports":{"exported":["ResetPassword"],"specifiers":[{"kind":"local","local":"ResetPassword","exported":"default"}]}}},"options":{"filename":"imports/website/forms/ResetPassword.jsx","filenameRelative":"imports/website/forms/ResetPassword.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/website/forms/ResetPassword.jsx.map","sourceFileName":"imports/website/forms/ResetPassword.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ResetPassword"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return ResetPassword;\n  }\n});\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n  render: function (v) {\n    render = v;\n  }\n}, 1);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  \"default\": function (v) {\n    TrackerReact = v;\n  }\n}, 2);\n\nvar ResetPassword = function (_React$Component) {\n  (0, _inherits3.default)(ResetPassword, _React$Component);\n\n  function ResetPassword() {\n    (0, _classCallCheck3.default)(this, ResetPassword);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this));\n\n    _this.state = {\n      \"subscription\": {\n        user: Meteor.subscribe(\"userfunction\")\n      }\n    };\n    return _this;\n  }\n\n  ResetPassword.prototype.componentWillMount = function () {\n    function componentWillMount() {}\n\n    return componentWillMount;\n  }();\n\n  ResetPassword.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {}\n\n    return componentWillUnmount;\n  }();\n\n  ResetPassword.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      $(\"#resetPassword\").validate();\n    }\n\n    return componentDidMount;\n  }();\n\n  ResetPassword.prototype['changepassword'] = function () {\n    function changepassword(event) {\n      event.preventDefault();\n      var password = this.refs.resetPassword.value;\n      var passwordConfirm = this.refs.resetPasswordConfirm.value;\n      var newID = Session.get('newID');\n\n      if (newID) {\n        var resetPassword = newID;\n      } else {\n        var username = $('input[name=\"forgotEmail\"]').val();\n        var userOtp = Meteor.users.findOne({\n          \"username\": username\n        });\n\n        if (userOtp) {\n          var resetPassword = userOtp._id;\n        }\n      } // console.log(resetPassword + password + passwordConfirm);\n      //Check password is at least 6 chars long\n\n\n      var isValidPassword = function (password, passwordConfirm) {\n        if (password === passwordConfirm) {\n          return password.length >= 6 ? true : swal({\n            title: \"Password should be at least 6 characters long\",\n            text: \"Please try again\",\n            timer: 1700,\n            showConfirmButton: false,\n            type: \"error\"\n          });\n        } else {\n          return swal({\n            title: \"Password doesn't match\",\n            text: 'Please try again',\n            showConfirmButton: true,\n            type: 'error'\n          }); //End of error swal\n        } //End of else\n\n      };\n\n      if (isValidPassword(password, passwordConfirm)) {\n        Meteor.call(\"resetPasswordUsingotp\", resetPassword, password, function (err) {\n          if (err) {\n            console.log('We are sorry but something went wrong.');\n          } else {\n            Meteor.logout(); // FlowRouter.go('/userlogin');\n\n            $('#ResetBlock').hide();\n            $('#outerLoginWrapper').show();\n            swal(\"Password has been changed successfully!!\");\n          }\n        });\n      }\n\n      return false;\n    }\n\n    return changepassword;\n  }();\n\n  ResetPassword.prototype.inputEffect = function () {\n    function inputEffect(event) {\n      event.preventDefault(); // alert('hi');\n\n      if ($(event.target).val() != \"\") {\n        $(event.target).addClass(\"has-content\");\n      } else {\n        $(event.target).removeClass(\"has-content\");\n      }\n    }\n\n    return inputEffect;\n  }();\n\n  ResetPassword.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        {\n          className: \"\",\n          id: \"ResetBlock\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\"\n            },\n            React.createElement(\"img\", {\n              src: \"../images/AssureIDlogo.png\",\n              className: \"loginPageLogo\",\n              alt: \"AssureID logo\"\n            }),\n            React.createElement(\n              \"h2\",\n              null,\n              \"Reset Password\"\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"FormWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n            },\n            React.createElement(\n              \"form\",\n              {\n                id: \"resetPassword\",\n                onSubmit: this.changepassword.bind(this)\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"input-effect input-group\"\n                  },\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"input-group-addon addons\",\n                      id: \"basic-addon1\"\n                    },\n                    React.createElement(\"i\", {\n                      className: \"fa fa-lock\",\n                      \"aria-hidden\": \"true\"\n                    })\n                  ),\n                  React.createElement(\"input\", {\n                    type: \"password\",\n                    className: \"effect-21 form-control loginInputs\",\n                    ref: \"resetPassword\",\n                    onBlur: this.inputEffect.bind(this),\n                    name: \"resetPassword\",\n                    \"aria-label\": \"Password\",\n                    \"aria-describedby\": \"basic-addon1\",\n                    title: \"Password should be at least 6 characters long!\",\n                    pattern: \".{6,}\",\n                    required: true\n                  }),\n                  React.createElement(\n                    \"label\",\n                    null,\n                    \"Password\"\n                  ),\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"focus-border\"\n                    },\n                    React.createElement(\"i\", null)\n                  )\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"input-effect input-group\"\n                  },\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"input-group-addon addons\",\n                      id: \"basic-addon1\"\n                    },\n                    React.createElement(\"i\", {\n                      className: \"fa fa-lock\",\n                      \"aria-hidden\": \"true\"\n                    })\n                  ),\n                  React.createElement(\"input\", {\n                    type: \"password\",\n                    className: \"effect-21 form-control loginInputs\",\n                    ref: \"resetPasswordConfirm\",\n                    onBlur: this.inputEffect.bind(this),\n                    name: \"resetPasswordConfirm\",\n                    \"aria-label\": \"Confirm Password\",\n                    \"aria-describedby\": \"basic-addon1\",\n                    title: \"Password should be at least 6 characters long!\",\n                    pattern: \".{6,}\",\n                    required: true\n                  }),\n                  React.createElement(\n                    \"label\",\n                    null,\n                    \"Confirm Password\"\n                  ),\n                  React.createElement(\n                    \"span\",\n                    {\n                      className: \"focus-border\"\n                    },\n                    React.createElement(\"i\", null)\n                  )\n                )\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                },\n                React.createElement(\n                  \"button\",\n                  {\n                    type: \"submit\",\n                    className: \"btn col-lg-12 col-md-12 col-sm-12 col-xs-12 submitBtn\"\n                  },\n                  \"Reset Password\"\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return ResetPassword;\n}(React.Component);","map":{"version":3,"sources":["imports/website/forms/ResetPassword.jsx"],"names":["module","export","ResetPassword","React","watch","require","v","render","TrackerReact","state","user","Meteor","subscribe","componentWillMount","componentWillUnmount","componentDidMount","$","validate","event","preventDefault","password","refs","resetPassword","value","passwordConfirm","resetPasswordConfirm","newID","Session","get","username","val","userOtp","users","findOne","_id","isValidPassword","length","swal","title","text","timer","showConfirmButton","type","call","err","console","log","logout","hide","show","inputEffect","target","addClass","removeClass","changepassword","bind","Component"],"mappings":"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","file":"imports/website/forms/ResetPassword.jsx.map","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\n\nexport default class ResetPassword extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n      \"subscription\" : { \n        user             : Meteor.subscribe(\"userfunction\"),  \n      }\n    }\n  }\n  componentWillMount(){\n  }\n  componentWillUnmount(){\n  }\n  componentDidMount() {\n    $(\"#resetPassword\").validate();\n  }\n  'changepassword'(event) {\n    event.preventDefault();\n    var password        = this.refs.resetPassword.value;\n    var passwordConfirm = this.refs.resetPasswordConfirm.value;\n    var newID = Session.get('newID');\n    if(newID){\n      var resetPassword = newID;\n    }else{\n      var username = $('input[name=\"forgotEmail\"]').val();\n      var userOtp = Meteor.users.findOne({\"username\":username});\n      if(userOtp){\n        var resetPassword = userOtp._id;\n      }\n    }\n    // console.log(resetPassword + password + passwordConfirm);\n\n    //Check password is at least 6 chars long\n    var isValidPassword = function(password, passwordConfirm) {\n      if (password === passwordConfirm) {\n        return password.length >= 6 ? true : swal({\n          title: \"Password should be at least 6 characters long\",\n          text: \"Please try again\",\n          timer: 1700,\n          showConfirmButton: false,\n          type: \"error\"\n        });\n      }else{\n        return swal({\n          title: \"Password doesn't match\",\n          text: 'Please try again',\n          showConfirmButton: true,\n          type: 'error'\n        }); //End of error swal\n      } //End of else\n    }\n\n    if (isValidPassword(password, passwordConfirm)) { \n      Meteor.call(\"resetPasswordUsingotp\", resetPassword, password, function(err) {\n        if (err) {\n          console.log('We are sorry but something went wrong.');\n        }else {\n          Meteor.logout();\n          // FlowRouter.go('/userlogin');\n          $('#ResetBlock').hide();\n          $('#outerLoginWrapper').show();\n          swal(\"Password has been changed successfully!!\");\n        }\n      });\n    }\n    return false;\n  }\n\n  inputEffect(event){\n    event.preventDefault();\n    // alert('hi');\n    if($(event.target).val() != \"\"){\n      $(event.target).addClass(\"has-content\");\n    }else{\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"\" id=\"ResetBlock\">\n        <div className=\"row\">\n          <div className=\"logoWrapper col-lg-6 col-lg-offset-3 col-md-12 col-md-offset-4 col-sm-12 col-sm-offset-4 col-xs-4 col-xs-offset-4\">\n            <img src=\"../images/AssureIDlogo.png\" className=\"loginPageLogo\"  alt=\"AssureID logo\"/> \n            <h2>Reset Password</h2>\n          </div>\n          <div className=\"FormWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n            <form id=\"resetPassword\" onSubmit={this.changepassword.bind(this)}>\n              <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"input-effect input-group\">\n                  <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-lock\" aria-hidden=\"true\"></i></span>\n                  <input type=\"password\" className=\"effect-21 form-control loginInputs\" ref=\"resetPassword\" onBlur={this.inputEffect.bind(this)} name=\"resetPassword\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" title=\"Password should be at least 6 characters long!\" pattern=\".{6,}\" required/>\n                  <label>Password</label>\n                  <span className=\"focus-border\">\n                    <i></i>\n                  </span>\n                </div>\n              </div> \n              <div className=\"form-group col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"input-effect input-group\">\n                  <span className=\"input-group-addon addons\" id=\"basic-addon1\"><i className=\"fa fa-lock\" aria-hidden=\"true\"></i></span>\n                  <input type=\"password\" className=\"effect-21 form-control loginInputs\" ref=\"resetPasswordConfirm\" onBlur={this.inputEffect.bind(this)} name=\"resetPasswordConfirm\" aria-label=\"Confirm Password\" aria-describedby=\"basic-addon1\" title=\"Password should be at least 6 characters long!\" pattern=\".{6,}\" required/>\n                  <label>Confirm Password</label>\n                  <span className=\"focus-border\">\n                    <i></i>\n                  </span>\n                </div>\n              </div> \n              <div className=\"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12\"> \n                <button type=\"submit\" className=\"btn col-lg-12 col-md-12 col-sm-12 col-xs-12 submitBtn\">Reset Password</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"hash":"c0898d3d5bcb431d0387750bf0663a44f94ba45d"}

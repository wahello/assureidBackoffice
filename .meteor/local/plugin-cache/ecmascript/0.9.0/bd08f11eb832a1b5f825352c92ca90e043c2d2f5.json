{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]}],"exports":{"exported":["NotificationTemplate"],"specifiers":[{"kind":"local","local":"NotificationTemplate","exported":"NotificationTemplate"}]}}},"options":{"filename":"imports/dashboard/notification/api/NotificationTemplate.js","filenameRelative":"imports/dashboard/notification/api/NotificationTemplate.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/notification/api/NotificationTemplate.js.map","sourceFileName":"imports/dashboard/notification/api/NotificationTemplate.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NotificationTemplate"},"ignored":false,"code":"module.export({\n\tNotificationTemplate: function () {\n\t\treturn NotificationTemplate;\n\t}\n});\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n\tMeteor: function (v) {\n\t\tMeteor = v;\n\t}\n}, 0);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n\tMongo: function (v) {\n\t\tMongo = v;\n\t}\n}, 1);\nvar NotificationTemplate = new Mongo.Collection('notificationTemplate');\n\nif (Meteor.isServer) {\n\tMeteor.startup(function () {\n\t\tNotificationTemplate._ensureIndex({\n\t\t\t\"templateCategory\": 1\n\t\t});\n\t});\n\tMeteor.publish('notificationTemplate', function () {\n\t\treturn NotificationTemplate.find({});\n\t});\n}\n\nMeteor.methods({\n\t'insertNewTemplate': function (templateType, templateName, subject, emailContent) {\n\t\tNotificationTemplate.insert({\n\t\t\t'templateType': templateType,\n\t\t\t'templateName': templateName,\n\t\t\t'subject': subject,\n\t\t\t'content': emailContent,\n\t\t\t'createdAt': new Date()\n\t\t});\n\t},\n\t'updateTemplate': function (id, templateName, emailContent) {\n\t\tconsole.log(\"id\", id);\n\t\tconsole.log(\"in updateTemplate\");\n\t\tNotificationTemplate.update({\n\t\t\t'_id': id\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t\"templateName\": templateName,\n\t\t\t\t\"content\": emailContent //End of set\n\n\t\t\t}\n\t\t});\n\t},\n\t'updateNewTemplate': function (id, templateName, subject, emailContent) {\n\t\tNotificationTemplate.update({\n\t\t\t'_id': id\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t\"templateName\": templateName,\n\t\t\t\t\"subject\": subject,\n\t\t\t\t\"content\": emailContent //End of set\n\n\t\t\t}\n\t\t});\n\t},\n\t'insertTemplate': function (templateType, templateName, emailContent) {\n\t\tNotificationTemplate.insert({\n\t\t\t'templateType': templateType,\n\t\t\t'templateName': templateName,\n\t\t\t'content': emailContent,\n\t\t\t'createdAt': new Date()\n\t\t});\n\t},\n\t'removeTemplate': function (id) {\n\t\tNotificationTemplate.remove({\n\t\t\t'_id': id\n\t\t});\n\t}\n});","map":{"version":3,"sources":["imports/dashboard/notification/api/NotificationTemplate.js"],"names":["module","export","NotificationTemplate","Meteor","watch","require","v","Mongo","Collection","isServer","startup","_ensureIndex","publish","find","methods","templateType","templateName","subject","emailContent","insert","Date","id","console","log","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,uBAAqB;AAAA,SAAIA,oBAAJ;AAAA;AAAtB,CAAd;AAA+D,IAAIC,eAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,OAAD,YAAQG,CAAR,EAAU;AAACH,WAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,cAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,MAAD,YAAOD,CAAP,EAAS;AAACC,UAAMD,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAI5I,IAAMJ,uBAAuB,IAAIK,MAAMC,UAAV,CAAqB,sBAArB,CAA7B;;AAEP,IAAGL,OAAOM,QAAV,EAAmB;AAElBN,QAAOO,OAAP,CAAe,YAAM;AACpBR,uBAAqBS,YAArB,CAAkC;AAAE,uBAAoB;AAAtB,GAAlC;AACA,EAFD;AAIAR,QAAOS,OAAP,CAAe,sBAAf,EAAsC,YAAU;AAC5C,SAAOV,qBAAqBW,IAArB,CAA0B,EAA1B,CAAP;AACH,EAFD;AAIA;;AAEDV,OAAOW,OAAP,CAAe;AACd,sBAAoB,UAASC,YAAT,EAAsBC,YAAtB,EAAmCC,OAAnC,EAA2CC,YAA3C,EAAwD;AAE3EhB,uBAAqBiB,MAArB,CAA4B;AAE3B,mBAAkBJ,YAFS;AAG3B,mBAAkBC,YAHS;AAI3B,cAAkBC,OAJS;AAK3B,cAAkBC,YALS;AAM3B,gBAAkB,IAAIE,IAAJ;AANS,GAA5B;AAQA,EAXa;AAad,mBAAiB,UAASC,EAAT,EAAYL,YAAZ,EAAyBE,YAAzB,EAAsC;AACtDI,UAAQC,GAAR,CAAY,IAAZ,EAAiBF,EAAjB;AACAC,UAAQC,GAAR,CAAY,mBAAZ;AACArB,uBAAqBsB,MAArB,CACC;AAAE,UAAOH;AAAT,GADD,EAEO;AACEI,SAAK;AACD,oBAAmBT,YADlB;AAED,eAAmBE,YAFlB,CAGL;;AAHK;AADP,GAFP;AASA,EAzBa;AA2Bd,sBAAoB,UAASG,EAAT,EAAYL,YAAZ,EAAyBC,OAAzB,EAAiCC,YAAjC,EAA8C;AAEjEhB,uBAAqBsB,MAArB,CACC;AAAE,UAAOH;AAAT,GADD,EAEO;AACEI,SAAK;AACD,oBAAmBT,YADlB;AAED,eAAmBC,OAFlB;AAGD,eAAmBC,YAHlB,CAIL;;AAJK;AADP,GAFP;AAUA,EAvCa;AAyCd,mBAAiB,UAASH,YAAT,EAAsBC,YAAtB,EAAmCE,YAAnC,EAAgD;AAEhEhB,uBAAqBiB,MAArB,CAA4B;AAE3B,mBAAkBJ,YAFS;AAG3B,mBAAkBC,YAHS;AAI3B,cAAkBE,YAJS;AAK3B,gBAAkB,IAAIE,IAAJ;AALS,GAA5B;AAOA,EAlDa;AAoDd,mBAAiB,UAASC,EAAT,EAAY;AAC1BnB,uBAAqBwB,MAArB,CAA4B;AAAC,UAAOL;AAAR,GAA5B;AAEF;AAvDa,CAAf","file":"imports/dashboard/notification/api/NotificationTemplate.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n// import { Email } from 'meteor/email';\n\nexport const NotificationTemplate = new Mongo.Collection('notificationTemplate');\n\nif(Meteor.isServer){\n\n\tMeteor.startup(() => {\n\t\tNotificationTemplate._ensureIndex({ \"templateCategory\": 1});\n\t});\n\t\n\tMeteor.publish('notificationTemplate',function(){\n\t    return NotificationTemplate.find({});\n\t});\n\t\n} \n\nMeteor.methods({\n\t'insertNewTemplate':function(templateType,templateName,subject,emailContent){\n\t\t\n\t\tNotificationTemplate.insert({\t\t\t\n\n\t\t\t'templateType'  : templateType,\t\n\t\t\t'templateName'  : templateName,\n\t\t\t'subject'       : subject,\n\t\t\t'content'       : emailContent,\t\n\t\t\t'createdAt'     : new Date(),\n\t\t});\n\t},\n\n\t'updateTemplate':function(id,templateName,emailContent){\n\t\tconsole.log(\"id\",id);\n\t\tconsole.log(\"in updateTemplate\");\n\t\tNotificationTemplate.update(\n\t\t\t{ '_id': id },\n\t        {\n\t          $set:{\n\t              \"templateName\"   : templateName,\n\t              \"content\"        : emailContent,\n\t        } //End of set\n\t      }\n\t\t)\n\t},\n\n\t'updateNewTemplate':function(id,templateName,subject,emailContent){\n\n\t\tNotificationTemplate.update(\n\t\t\t{ '_id': id },\n\t        {\n\t          $set:{\n\t              \"templateName\"   : templateName,\n\t              \"subject\"        : subject,\n\t              \"content\"        : emailContent,\n\t        } //End of set\n\t      }\n\t\t)\n\t},\n\n\t'insertTemplate':function(templateType,templateName,emailContent){\n\t\t\n\t\tNotificationTemplate.insert({\t\t\t\n\n\t\t\t'templateType'  : templateType,\t\n\t\t\t'templateName'  : templateName,\n\t\t\t'content'       : emailContent,\t\n\t\t\t'createdAt'     : new Date(),\n\t\t});\n\t},\n\n\t'removeTemplate':function(id){\n \t\t NotificationTemplate.remove({'_id': id});\n  \n\t},\n\t\n});\n"]},"hash":"bd08f11eb832a1b5f825352c92ca90e043c2d2f5"}

{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["College"],"specifiers":[{"kind":"local","local":"College","exported":"College"}]}}},"options":{"filename":"imports/dashboard/forms/api/College.js","filenameRelative":"imports/dashboard/forms/api/College.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/api/College.js.map","sourceFileName":"imports/dashboard/forms/api/College.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"College"},"ignored":false,"code":"module.export({\n  College: () => College\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst College = new Mongo.Collection(\"college\");\n\nif (Meteor.isServer) {\n  Meteor.publish('college', () => {\n    return College.find({});\n  });\n  Meteor.publish('singlecollege', id => {\n    return College.find({\n      \"_id\": id\n    });\n  });\n  Meteor.methods({\n    'createCollegeData': function (collegeName, universityName, collegeStatus) {\n      College.insert({\n        'collegeName': collegeName,\n        'universityName': universityName,\n        'collegeStatus': collegeStatus,\n        'createdAt': new Date()\n      });\n    },\n    'updateCollegeData': function (id, collegeName, universityName, collegeStatus) {\n      College.update({\n        \"_id\": id\n      }, {\n        $set: {\n          'collegeName': collegeName,\n          'universityName': universityName,\n          'collegeStatus': collegeStatus\n        }\n      });\n    },\n    'deleteCollege': function (id) {\n      College.remove({\n        \"_id\": id\n      });\n    }\n  });\n}","map":{"version":3,"sources":["imports/dashboard/forms/api/College.js"],"names":["module","export","College","Mongo","watch","require","v","Meteor","Collection","isServer","publish","find","id","methods","collegeName","universityName","collegeStatus","insert","Date","update","$set","remove"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAG/G,MAAMJ,UAAU,IAAIC,MAAMK,UAAV,CAAqB,SAArB,CAAhB;;AAEP,IAAGD,OAAOE,QAAV,EAAmB;AAChBF,SAAOG,OAAP,CAAe,SAAf,EAAyB,MAAI;AACzB,WAAOR,QAAQS,IAAR,CAAa,EAAb,CAAP;AACH,GAFD;AAGAJ,SAAOG,OAAP,CAAe,eAAf,EAAgCE,EAAD,IAAM;AACjC,WAAOV,QAAQS,IAAR,CAAa;AAAC,aAAMC;AAAP,KAAb,CAAP;AACH,GAFD;AAIDL,SAAOM,OAAP,CAAe;AACZ,yBAAoB,UAASC,WAAT,EAAqBC,cAArB,EAAoCC,aAApC,EAAkD;AACrEd,cAAQe,MAAR,CAAe;AACX,uBAAmBH,WADR;AAEX,0BAAmBC,cAFR;AAGX,yBAAmBC,aAHR;AAIX,qBAAmB,IAAIE,IAAJ;AAJR,OAAf;AAMC,KARU;AASX,yBAAoB,UAASN,EAAT,EAAYE,WAAZ,EAAwBC,cAAxB,EAAuCC,aAAvC,EAAqD;AACvEd,cAAQiB,MAAR,CAAe;AAAC,eAAMP;AAAP,OAAf,EACE;AAACQ,cAAK;AACJ,yBAAoBN,WADhB;AAEJ,4BAAoBC,cAFhB;AAGJ,2BAAoBC;AAHhB;AAAN,OADF;AAMD,KAhBU;AAiBX,qBAAgB,UAASJ,EAAT,EAAY;AAC1BV,cAAQmB,MAAR,CAAe;AAAC,eAAMT;AAAP,OAAf;AACD;AAnBU,GAAf;AAsBD","file":"imports/dashboard/forms/api/College.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {Meteor} from 'meteor/meteor';\n\nexport const College = new Mongo.Collection(\"college\");\n\nif(Meteor.isServer){\n   Meteor.publish('college',()=>{\n       return College.find({});\n   });\n   Meteor.publish('singlecollege',(id)=>{\n       return College.find({\"_id\":id});\n   });   \n\n\t Meteor.methods({\n\t \t \t'createCollegeData':function(collegeName,universityName,collegeStatus){\n    \t\tCollege.insert({\n          'collegeName'    : collegeName,\n          'universityName' : universityName,\n          'collegeStatus'  : collegeStatus,\n          'createdAt'      : new Date(),\n    \t\t}); \n      },\n      'updateCollegeData':function(id,collegeName,universityName,collegeStatus){\n        College.update({\"_id\":id},\n          {$set:{\n            'collegeName'     : collegeName,\n            'universityName'  : universityName,\n            'collegeStatus'   : collegeStatus,\n          }});\n      },\n      'deleteCollege':function(id){\n        College.remove({\"_id\":id});\n      }\n\t });\n\n}\n"]},"hash":"1882984c39faed08739395d51d778c420ae3a506"}

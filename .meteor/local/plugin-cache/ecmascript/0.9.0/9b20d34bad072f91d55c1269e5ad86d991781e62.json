{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["FileCursor","FilesCursor"],"specifiers":[{"kind":"local","local":"FileCursor","exported":"FileCursor"},{"kind":"local","local":"FilesCursor","exported":"FilesCursor"}]}}},"options":{"filename":"packages/ostrio:files/cursor.js","filenameRelative":"packages/ostrio:files/cursor.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ostrio:files/cursor.js.map","sourceFileName":"packages/ostrio:files/cursor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cursor"},"ignored":false,"code":"module.export({\n  FileCursor: () => FileCursor,\n  FilesCursor: () => FilesCursor\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\n\nclass FileCursor {\n  constructor(_fileRef, _collection) {\n    this._fileRef = _fileRef;\n    this._collection = _collection;\n\n    _.extend(this, _fileRef);\n  } /*\n     * @locus Anywhere\n     * @memberOf FileCursor\n     * @name remove\n     * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n     * @summary Remove document\n     * @returns {FileCursor}\n     */\n\n  remove(callback) {\n    this._collection._debug('[FilesCollection] [FileCursor] [remove()]');\n\n    if (this._fileRef) {\n      this._collection.remove(this._fileRef._id, callback);\n    } else {\n      callback && callback(new Meteor.Error(404, 'No such file'));\n    }\n\n    return this;\n  } /*\n     * @locus Anywhere\n     * @memberOf FileCursor\n     * @name link\n     * @param version {String} - Name of file's subversion\n     * @summary Returns downloadable URL to File\n     * @returns {String}\n     */\n\n  link(version = 'original') {\n    this._collection._debug(`[FilesCollection] [FileCursor] [link(${version})]`);\n\n    if (this._fileRef) {\n      return this._collection.link(this._fileRef, version);\n    }\n\n    return '';\n  } /*\n     * @locus Anywhere\n     * @memberOf FileCursor\n     * @name get\n     * @param property {String} - Name of sub-object property\n     * @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n     * @returns {Object|mix}\n     */\n\n  get(property) {\n    this._collection._debug(`[FilesCollection] [FileCursor] [get(${property})]`);\n\n    if (property) {\n      return this._fileRef[property];\n    }\n\n    return this._fileRef;\n  } /*\n     * @locus Anywhere\n     * @memberOf FileCursor\n     * @name fetch\n     * @summary Returns document as plain Object in Array\n     * @returns {[Object]}\n     */\n\n  fetch() {\n    this._collection._debug('[FilesCollection] [FileCursor] [fetch()]');\n\n    return [this._fileRef];\n  } /*\n     * @locus Anywhere\n     * @memberOf FileCursor\n     * @name with\n     * @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n     * @returns {[Object]}\n     */\n\n  with() {\n    this._collection._debug('[FilesCollection] [FileCursor] [with()]');\n\n    return _.extend(this, this._collection.collection.findOne(this._fileRef._id));\n  }\n\n}\n\nclass FilesCursor {\n  constructor(_selector = {}, options, _collection) {\n    this._collection = _collection;\n    this._selector = _selector;\n    this._current = -1;\n    this.cursor = this._collection.collection.find(this._selector, options);\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name get\n     * @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n     * @returns {[Object]}\n     */\n\n  get() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [get()]');\n\n    return this.cursor.fetch();\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name hasNext\n     * @summary Returns `true` if there is next item available on Cursor\n     * @returns {Boolean}\n     */\n\n  hasNext() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasNext()]');\n\n    return this._current < this.cursor.count() - 1;\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name next\n     * @summary Returns next item on Cursor, if available\n     * @returns {Object|undefined}\n     */\n\n  next() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [next()]');\n\n    this.cursor.fetch()[++this._current];\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name hasPrevious\n     * @summary Returns `true` if there is previous item available on Cursor\n     * @returns {Boolean}\n     */\n\n  hasPrevious() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasPrevious()]');\n\n    return this._current !== -1;\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name previous\n     * @summary Returns previous item on Cursor, if available\n     * @returns {Object|undefined}\n     */\n\n  previous() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [previous()]');\n\n    this.cursor.fetch()[--this._current];\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name fetch\n     * @summary Returns all matching document(s) as an Array.\n     * @returns {[Object]}\n     */\n\n  fetch() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [fetch()]');\n\n    return this.cursor.fetch() || [];\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name first\n     * @summary Returns first item on Cursor, if available\n     * @returns {Object|undefined}\n     */\n\n  first() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [first()]');\n\n    this._current = 0;\n    return this.fetch()[this._current];\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name last\n     * @summary Returns last item on Cursor, if available\n     * @returns {Object|undefined}\n     */\n\n  last() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [last()]');\n\n    this._current = this.count() - 1;\n    return this.fetch()[this._current];\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name count\n     * @summary Returns the number of documents that match a query\n     * @returns {Number}\n     */\n\n  count() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [count()]');\n\n    return this.cursor.count();\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name remove\n     * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n     * @summary Removes all documents that match a query\n     * @returns {FilesCursor}\n     */\n\n  remove(callback) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [remove()]');\n\n    this._collection.remove(this._selector, callback);\n\n    return this;\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name forEach\n     * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n     * @param context {Object} - An object which will be the value of `this` inside `callback`\n     * @summary Call `callback` once for each matching document, sequentially and synchronously.\n     * @returns {undefined}\n     */\n\n  forEach(callback, context = {}) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [forEach()]');\n\n    this.cursor.forEach(callback, context);\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name each\n     * @summary Returns an Array of FileCursor made for each document on current cursor\n     *          Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n     * @returns {[FileCursor]}\n     */\n\n  each() {\n    return this.map(file => {\n      return new FileCursor(file, this._collection);\n    });\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name map\n     * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n     * @param context {Object} - An object which will be the value of `this` inside `callback`\n     * @summary Map `callback` over all matching documents. Returns an Array.\n     * @returns {Array}\n     */\n\n  map(callback, context = {}) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [map()]');\n\n    return this.cursor.map(callback, context);\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name current\n     * @summary Returns current item on Cursor, if available\n     * @returns {Object|undefined}\n     */\n\n  current() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [current()]');\n\n    if (this._current < 0) {\n      this._current = 0;\n    }\n\n    return this.fetch()[this._current];\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name observe\n     * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n     * @summary Watch a query. Receive callbacks as the result set changes.\n     * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n     * @returns {Object} - live query handle\n     */\n\n  observe(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observe()]');\n\n    return this.cursor.observe(callbacks);\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name observeChanges\n     * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n     * @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n     * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n     * @returns {Object} - live query handle\n     */\n\n  observeChanges(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observeChanges()]');\n\n    return this.cursor.observeChanges(callbacks);\n  }\n\n}","map":{"version":3,"sources":["packages/ostrio:files/cursor.js"],"names":["module","export","FileCursor","FilesCursor","_","watch","require","v","Meteor","constructor","_fileRef","_collection","extend","remove","callback","_debug","_id","Error","link","version","get","property","fetch","with","collection","findOne","_selector","options","_current","cursor","find","hasNext","count","next","hasPrevious","previous","first","last","forEach","context","each","map","file","current","observe","callbacks","observeChanges"],"mappings":"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","file":"packages/ostrio:files/cursor.js.map","sourcesContent":["import { _ }      from 'meteor/underscore';\nimport { Meteor } from 'meteor/meteor';\n\n/*\n * @private\n * @locus Anywhere\n * @class FileCursor\n * @param _fileRef    {Object} - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n * @param _collection {FilesCollection} - FilesCollection Instance\n * @summary Internal class, represents each record in `FilesCursor.each()` or document returned from `.findOne()` method\n */\nexport class FileCursor {\n  constructor(_fileRef, _collection) {\n    this._fileRef    = _fileRef;\n    this._collection = _collection;\n    _.extend(this, _fileRef);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name remove\n   * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n   * @summary Remove document\n   * @returns {FileCursor}\n   */\n  remove(callback) {\n    this._collection._debug('[FilesCollection] [FileCursor] [remove()]');\n    if (this._fileRef) {\n      this._collection.remove(this._fileRef._id, callback);\n    } else {\n      callback && callback(new Meteor.Error(404, 'No such file'));\n    }\n    return this;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name link\n   * @param version {String} - Name of file's subversion\n   * @summary Returns downloadable URL to File\n   * @returns {String}\n   */\n  link(version = 'original') {\n    this._collection._debug(`[FilesCollection] [FileCursor] [link(${version})]`);\n    if (this._fileRef) {\n      return this._collection.link(this._fileRef, version);\n    }\n    return '';\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name get\n   * @param property {String} - Name of sub-object property\n   * @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n   * @returns {Object|mix}\n   */\n  get(property) {\n    this._collection._debug(`[FilesCollection] [FileCursor] [get(${property})]`);\n    if (property) {\n      return this._fileRef[property];\n    }\n    return this._fileRef;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name fetch\n   * @summary Returns document as plain Object in Array\n   * @returns {[Object]}\n   */\n  fetch() {\n    this._collection._debug('[FilesCollection] [FileCursor] [fetch()]');\n    return [this._fileRef];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name with\n   * @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n   * @returns {[Object]}\n   */\n  with() {\n    this._collection._debug('[FilesCollection] [FileCursor] [with()]');\n    return _.extend(this, this._collection.collection.findOne(this._fileRef._id));\n  }\n}\n\n/*\n * @private\n * @locus Anywhere\n * @class FilesCursor\n * @param _selector   {String|Object}   - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n * @param options     {Object}          - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#selectors)\n * @param _collection {FilesCollection} - FilesCollection Instance\n * @summary Implementation of Cursor for FilesCollection\n */\nexport class FilesCursor {\n  constructor(_selector = {}, options, _collection) {\n    this._collection = _collection;\n    this._selector   = _selector;\n    this._current    = -1;\n    this.cursor      = this._collection.collection.find(this._selector, options);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name get\n   * @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n   * @returns {[Object]}\n   */\n  get() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [get()]');\n    return this.cursor.fetch();\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name hasNext\n   * @summary Returns `true` if there is next item available on Cursor\n   * @returns {Boolean}\n   */\n  hasNext() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasNext()]');\n    return this._current < (this.cursor.count() - 1);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name next\n   * @summary Returns next item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  next() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [next()]');\n    this.cursor.fetch()[++this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name hasPrevious\n   * @summary Returns `true` if there is previous item available on Cursor\n   * @returns {Boolean}\n   */\n  hasPrevious() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasPrevious()]');\n    return this._current !== -1;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name previous\n   * @summary Returns previous item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  previous() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [previous()]');\n    this.cursor.fetch()[--this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name fetch\n   * @summary Returns all matching document(s) as an Array.\n   * @returns {[Object]}\n   */\n  fetch() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [fetch()]');\n    return this.cursor.fetch() || [];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name first\n   * @summary Returns first item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  first() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [first()]');\n    this._current = 0;\n    return this.fetch()[this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name last\n   * @summary Returns last item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  last() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [last()]');\n    this._current = this.count() - 1;\n    return this.fetch()[this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name count\n   * @summary Returns the number of documents that match a query\n   * @returns {Number}\n   */\n  count() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [count()]');\n    return this.cursor.count();\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name remove\n   * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n   * @summary Removes all documents that match a query\n   * @returns {FilesCursor}\n   */\n  remove(callback) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [remove()]');\n    this._collection.remove(this._selector, callback);\n    return this;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name forEach\n   * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n   * @param context {Object} - An object which will be the value of `this` inside `callback`\n   * @summary Call `callback` once for each matching document, sequentially and synchronously.\n   * @returns {undefined}\n   */\n  forEach(callback, context = {}) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [forEach()]');\n    this.cursor.forEach(callback, context);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name each\n   * @summary Returns an Array of FileCursor made for each document on current cursor\n   *          Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n   * @returns {[FileCursor]}\n   */\n  each() {\n    return this.map((file) => {\n      return new FileCursor(file, this._collection);\n    });\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name map\n   * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n   * @param context {Object} - An object which will be the value of `this` inside `callback`\n   * @summary Map `callback` over all matching documents. Returns an Array.\n   * @returns {Array}\n   */\n  map(callback, context = {}) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [map()]');\n    return this.cursor.map(callback, context);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name current\n   * @summary Returns current item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  current() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [current()]');\n    if (this._current < 0) {\n      this._current = 0;\n    }\n    return this.fetch()[this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name observe\n   * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n   * @summary Watch a query. Receive callbacks as the result set changes.\n   * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n   * @returns {Object} - live query handle\n   */\n  observe(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observe()]');\n    return this.cursor.observe(callbacks);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name observeChanges\n   * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n   * @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n   * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n   * @returns {Object} - live query handle\n   */\n  observeChanges(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observeChanges()]');\n    return this.cursor.observeChanges(callbacks);\n  }\n}\n"]},"hash":"9b20d34bad072f91d55c1269e5ad86d991781e62"}

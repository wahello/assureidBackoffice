{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":["FileCursor","FilesCursor"],"specifiers":[{"kind":"local","local":"FileCursor","exported":"FileCursor"},{"kind":"local","local":"FilesCursor","exported":"FilesCursor"}]}}},"options":{"filename":"packages/ostrio:files/cursor.js","filenameRelative":"packages/ostrio:files/cursor.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/ostrio:files/cursor.js.map","sourceFileName":"packages/ostrio:files/cursor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cursor"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  FileCursor: function () {\n    return FileCursor;\n  },\n  FilesCursor: function () {\n    return FilesCursor;\n  }\n});\n\nvar _ = void 0;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _: function (v) {\n    _ = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\n\nvar FileCursor = function () {\n  function FileCursor(_fileRef, _collection) {\n    (0, _classCallCheck3.default)(this, FileCursor);\n    this._fileRef = _fileRef;\n    this._collection = _collection;\n\n    _.extend(this, _fileRef);\n  } /*\n     * @locus Anywhere\n     * @memberOf FileCursor\n     * @name remove\n     * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n     * @summary Remove document\n     * @returns {FileCursor}\n     */\n\n  FileCursor.prototype.remove = function () {\n    function remove(callback) {\n      this._collection._debug('[FilesCollection] [FileCursor] [remove()]');\n\n      if (this._fileRef) {\n        this._collection.remove(this._fileRef._id, callback);\n      } else {\n        callback && callback(new Meteor.Error(404, 'No such file'));\n      }\n\n      return this;\n    }\n\n    return remove;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FileCursor\n        * @name link\n        * @param version {String} - Name of file's subversion\n        * @summary Returns downloadable URL to File\n        * @returns {String}\n        */\n\n  FileCursor.prototype.link = function () {\n    function link() {\n      var version = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'original';\n\n      this._collection._debug(\"[FilesCollection] [FileCursor] [link(\" + version + \")]\");\n\n      if (this._fileRef) {\n        return this._collection.link(this._fileRef, version);\n      }\n\n      return '';\n    }\n\n    return link;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FileCursor\n        * @name get\n        * @param property {String} - Name of sub-object property\n        * @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n        * @returns {Object|mix}\n        */\n\n  FileCursor.prototype.get = function () {\n    function get(property) {\n      this._collection._debug(\"[FilesCollection] [FileCursor] [get(\" + property + \")]\");\n\n      if (property) {\n        return this._fileRef[property];\n      }\n\n      return this._fileRef;\n    }\n\n    return get;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FileCursor\n        * @name fetch\n        * @summary Returns document as plain Object in Array\n        * @returns {[Object]}\n        */\n\n  FileCursor.prototype.fetch = function () {\n    function fetch() {\n      this._collection._debug('[FilesCollection] [FileCursor] [fetch()]');\n\n      return [this._fileRef];\n    }\n\n    return fetch;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FileCursor\n        * @name with\n        * @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n        * @returns {[Object]}\n        */\n\n  FileCursor.prototype.with = function () {\n    function _with() {\n      this._collection._debug('[FilesCollection] [FileCursor] [with()]');\n\n      return _.extend(this, this._collection.collection.findOne(this._fileRef._id));\n    }\n\n    return _with;\n  }();\n\n  return FileCursor;\n}();\n\nvar FilesCursor = function () {\n  function FilesCursor() {\n    var _selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var options = arguments[1];\n    var _collection = arguments[2];\n    (0, _classCallCheck3.default)(this, FilesCursor);\n    this._collection = _collection;\n    this._selector = _selector;\n    this._current = -1;\n    this.cursor = this._collection.collection.find(this._selector, options);\n  } /*\n     * @locus Anywhere\n     * @memberOf FilesCursor\n     * @name get\n     * @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n     * @returns {[Object]}\n     */\n\n  FilesCursor.prototype.get = function () {\n    function get() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [get()]');\n\n      return this.cursor.fetch();\n    }\n\n    return get;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name hasNext\n        * @summary Returns `true` if there is next item available on Cursor\n        * @returns {Boolean}\n        */\n\n  FilesCursor.prototype.hasNext = function () {\n    function hasNext() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [hasNext()]');\n\n      return this._current < this.cursor.count() - 1;\n    }\n\n    return hasNext;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name next\n        * @summary Returns next item on Cursor, if available\n        * @returns {Object|undefined}\n        */\n\n  FilesCursor.prototype.next = function () {\n    function next() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [next()]');\n\n      this.cursor.fetch()[++this._current];\n    }\n\n    return next;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name hasPrevious\n        * @summary Returns `true` if there is previous item available on Cursor\n        * @returns {Boolean}\n        */\n\n  FilesCursor.prototype.hasPrevious = function () {\n    function hasPrevious() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [hasPrevious()]');\n\n      return this._current !== -1;\n    }\n\n    return hasPrevious;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name previous\n        * @summary Returns previous item on Cursor, if available\n        * @returns {Object|undefined}\n        */\n\n  FilesCursor.prototype.previous = function () {\n    function previous() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [previous()]');\n\n      this.cursor.fetch()[--this._current];\n    }\n\n    return previous;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name fetch\n        * @summary Returns all matching document(s) as an Array.\n        * @returns {[Object]}\n        */\n\n  FilesCursor.prototype.fetch = function () {\n    function fetch() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [fetch()]');\n\n      return this.cursor.fetch() || [];\n    }\n\n    return fetch;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name first\n        * @summary Returns first item on Cursor, if available\n        * @returns {Object|undefined}\n        */\n\n  FilesCursor.prototype.first = function () {\n    function first() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [first()]');\n\n      this._current = 0;\n      return this.fetch()[this._current];\n    }\n\n    return first;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name last\n        * @summary Returns last item on Cursor, if available\n        * @returns {Object|undefined}\n        */\n\n  FilesCursor.prototype.last = function () {\n    function last() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [last()]');\n\n      this._current = this.count() - 1;\n      return this.fetch()[this._current];\n    }\n\n    return last;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name count\n        * @summary Returns the number of documents that match a query\n        * @returns {Number}\n        */\n\n  FilesCursor.prototype.count = function () {\n    function count() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [count()]');\n\n      return this.cursor.count();\n    }\n\n    return count;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name remove\n        * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n        * @summary Removes all documents that match a query\n        * @returns {FilesCursor}\n        */\n\n  FilesCursor.prototype.remove = function () {\n    function remove(callback) {\n      this._collection._debug('[FilesCollection] [FilesCursor] [remove()]');\n\n      this._collection.remove(this._selector, callback);\n\n      return this;\n    }\n\n    return remove;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name forEach\n        * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n        * @param context {Object} - An object which will be the value of `this` inside `callback`\n        * @summary Call `callback` once for each matching document, sequentially and synchronously.\n        * @returns {undefined}\n        */\n\n  FilesCursor.prototype.forEach = function () {\n    function forEach(callback) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._collection._debug('[FilesCollection] [FilesCursor] [forEach()]');\n\n      this.cursor.forEach(callback, context);\n    }\n\n    return forEach;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name each\n        * @summary Returns an Array of FileCursor made for each document on current cursor\n        *          Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n        * @returns {[FileCursor]}\n        */\n\n  FilesCursor.prototype.each = function () {\n    function each() {\n      var _this = this;\n\n      return this.map(function (file) {\n        return new FileCursor(file, _this._collection);\n      });\n    }\n\n    return each;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name map\n        * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n        * @param context {Object} - An object which will be the value of `this` inside `callback`\n        * @summary Map `callback` over all matching documents. Returns an Array.\n        * @returns {Array}\n        */\n\n  FilesCursor.prototype.map = function () {\n    function map(callback) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._collection._debug('[FilesCollection] [FilesCursor] [map()]');\n\n      return this.cursor.map(callback, context);\n    }\n\n    return map;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name current\n        * @summary Returns current item on Cursor, if available\n        * @returns {Object|undefined}\n        */\n\n  FilesCursor.prototype.current = function () {\n    function current() {\n      this._collection._debug('[FilesCollection] [FilesCursor] [current()]');\n\n      if (this._current < 0) {\n        this._current = 0;\n      }\n\n      return this.fetch()[this._current];\n    }\n\n    return current;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name observe\n        * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n        * @summary Watch a query. Receive callbacks as the result set changes.\n        * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n        * @returns {Object} - live query handle\n        */\n\n  FilesCursor.prototype.observe = function () {\n    function observe(callbacks) {\n      this._collection._debug('[FilesCollection] [FilesCursor] [observe()]');\n\n      return this.cursor.observe(callbacks);\n    }\n\n    return observe;\n  }(); /*\n        * @locus Anywhere\n        * @memberOf FilesCursor\n        * @name observeChanges\n        * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n        * @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n        * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n        * @returns {Object} - live query handle\n        */\n\n  FilesCursor.prototype.observeChanges = function () {\n    function observeChanges(callbacks) {\n      this._collection._debug('[FilesCollection] [FilesCursor] [observeChanges()]');\n\n      return this.cursor.observeChanges(callbacks);\n    }\n\n    return observeChanges;\n  }();\n\n  return FilesCursor;\n}();","map":{"version":3,"sources":["packages/ostrio:files/cursor.js"],"names":["module","export","FileCursor","FilesCursor","_","watch","require","v","Meteor","_fileRef","_collection","extend","remove","callback","_debug","_id","Error","link","version","get","property","fetch","with","collection","findOne","_selector","options","_current","cursor","find","hasNext","count","next","hasPrevious","previous","first","last","forEach","context","each","map","file","current","observe","callbacks","observeChanges"],"mappings":"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","file":"packages/ostrio:files/cursor.js.map","sourcesContent":["import { _ }      from 'meteor/underscore';\nimport { Meteor } from 'meteor/meteor';\n\n/*\n * @private\n * @locus Anywhere\n * @class FileCursor\n * @param _fileRef    {Object} - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n * @param _collection {FilesCollection} - FilesCollection Instance\n * @summary Internal class, represents each record in `FilesCursor.each()` or document returned from `.findOne()` method\n */\nexport class FileCursor {\n  constructor(_fileRef, _collection) {\n    this._fileRef    = _fileRef;\n    this._collection = _collection;\n    _.extend(this, _fileRef);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name remove\n   * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n   * @summary Remove document\n   * @returns {FileCursor}\n   */\n  remove(callback) {\n    this._collection._debug('[FilesCollection] [FileCursor] [remove()]');\n    if (this._fileRef) {\n      this._collection.remove(this._fileRef._id, callback);\n    } else {\n      callback && callback(new Meteor.Error(404, 'No such file'));\n    }\n    return this;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name link\n   * @param version {String} - Name of file's subversion\n   * @summary Returns downloadable URL to File\n   * @returns {String}\n   */\n  link(version = 'original') {\n    this._collection._debug(`[FilesCollection] [FileCursor] [link(${version})]`);\n    if (this._fileRef) {\n      return this._collection.link(this._fileRef, version);\n    }\n    return '';\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name get\n   * @param property {String} - Name of sub-object property\n   * @summary Returns current document as a plain Object, if `property` is specified - returns value of sub-object property\n   * @returns {Object|mix}\n   */\n  get(property) {\n    this._collection._debug(`[FilesCollection] [FileCursor] [get(${property})]`);\n    if (property) {\n      return this._fileRef[property];\n    }\n    return this._fileRef;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name fetch\n   * @summary Returns document as plain Object in Array\n   * @returns {[Object]}\n   */\n  fetch() {\n    this._collection._debug('[FilesCollection] [FileCursor] [fetch()]');\n    return [this._fileRef];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FileCursor\n   * @name with\n   * @summary Returns reactive version of current FileCursor, useful to use with `{{#with}}...{{/with}}` block template helper\n   * @returns {[Object]}\n   */\n  with() {\n    this._collection._debug('[FilesCollection] [FileCursor] [with()]');\n    return _.extend(this, this._collection.collection.findOne(this._fileRef._id));\n  }\n}\n\n/*\n * @private\n * @locus Anywhere\n * @class FilesCursor\n * @param _selector   {String|Object}   - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n * @param options     {Object}          - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#selectors)\n * @param _collection {FilesCollection} - FilesCollection Instance\n * @summary Implementation of Cursor for FilesCollection\n */\nexport class FilesCursor {\n  constructor(_selector = {}, options, _collection) {\n    this._collection = _collection;\n    this._selector   = _selector;\n    this._current    = -1;\n    this.cursor      = this._collection.collection.find(this._selector, options);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name get\n   * @summary Returns all matching document(s) as an Array. Alias of `.fetch()`\n   * @returns {[Object]}\n   */\n  get() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [get()]');\n    return this.cursor.fetch();\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name hasNext\n   * @summary Returns `true` if there is next item available on Cursor\n   * @returns {Boolean}\n   */\n  hasNext() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasNext()]');\n    return this._current < (this.cursor.count() - 1);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name next\n   * @summary Returns next item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  next() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [next()]');\n    this.cursor.fetch()[++this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name hasPrevious\n   * @summary Returns `true` if there is previous item available on Cursor\n   * @returns {Boolean}\n   */\n  hasPrevious() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [hasPrevious()]');\n    return this._current !== -1;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name previous\n   * @summary Returns previous item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  previous() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [previous()]');\n    this.cursor.fetch()[--this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name fetch\n   * @summary Returns all matching document(s) as an Array.\n   * @returns {[Object]}\n   */\n  fetch() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [fetch()]');\n    return this.cursor.fetch() || [];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name first\n   * @summary Returns first item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  first() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [first()]');\n    this._current = 0;\n    return this.fetch()[this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name last\n   * @summary Returns last item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  last() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [last()]');\n    this._current = this.count() - 1;\n    return this.fetch()[this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name count\n   * @summary Returns the number of documents that match a query\n   * @returns {Number}\n   */\n  count() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [count()]');\n    return this.cursor.count();\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name remove\n   * @param callback {Function} - Triggered asynchronously after item is removed or failed to be removed\n   * @summary Removes all documents that match a query\n   * @returns {FilesCursor}\n   */\n  remove(callback) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [remove()]');\n    this._collection.remove(this._selector, callback);\n    return this;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name forEach\n   * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n   * @param context {Object} - An object which will be the value of `this` inside `callback`\n   * @summary Call `callback` once for each matching document, sequentially and synchronously.\n   * @returns {undefined}\n   */\n  forEach(callback, context = {}) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [forEach()]');\n    this.cursor.forEach(callback, context);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name each\n   * @summary Returns an Array of FileCursor made for each document on current cursor\n   *          Useful when using in {{#each FilesCursor#each}}...{{/each}} block template helper\n   * @returns {[FileCursor]}\n   */\n  each() {\n    return this.map((file) => {\n      return new FileCursor(file, this._collection);\n    });\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name map\n   * @param callback {Function} - Function to call. It will be called with three arguments: the `file`, a 0-based index, and cursor itself\n   * @param context {Object} - An object which will be the value of `this` inside `callback`\n   * @summary Map `callback` over all matching documents. Returns an Array.\n   * @returns {Array}\n   */\n  map(callback, context = {}) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [map()]');\n    return this.cursor.map(callback, context);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name current\n   * @summary Returns current item on Cursor, if available\n   * @returns {Object|undefined}\n   */\n  current() {\n    this._collection._debug('[FilesCollection] [FilesCursor] [current()]');\n    if (this._current < 0) {\n      this._current = 0;\n    }\n    return this.fetch()[this._current];\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name observe\n   * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n   * @summary Watch a query. Receive callbacks as the result set changes.\n   * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observe\n   * @returns {Object} - live query handle\n   */\n  observe(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observe()]');\n    return this.cursor.observe(callbacks);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCursor\n   * @name observeChanges\n   * @param callbacks {Object} - Functions to call to deliver the result set as it changes\n   * @summary Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.\n   * @url http://docs.meteor.com/api/collections.html#Mongo-Cursor-observeChanges\n   * @returns {Object} - live query handle\n   */\n  observeChanges(callbacks) {\n    this._collection._debug('[FilesCollection] [FilesCursor] [observeChanges()]');\n    return this.cursor.observeChanges(callbacks);\n  }\n}\n"]},"hash":"28a81d8bc316c1d8a5714f9db36cd2e65f7a2ce5"}

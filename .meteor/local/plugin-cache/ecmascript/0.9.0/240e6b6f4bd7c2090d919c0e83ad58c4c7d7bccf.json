{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"../api/CompanySettingMaster.js","imported":["CompanySettings"],"specifiers":[{"kind":"named","imported":"CompanySettings","local":"CompanySettings"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"./CompanyInfoList.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CompanyInfoList"}]},{"source":"./companySettingIndicators.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CompanySettingIndicators"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/companySetting/components/CompanyLocation.jsx","filenameRelative":"imports/dashboard/companySetting/components/CompanyLocation.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/companySetting/components/CompanyLocation.jsx.map","sourceFileName":"imports/dashboard/companySetting/components/CompanyLocation.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"CompanyLocation"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet render;\nmodule.watch(require(\"react-dom\"), {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet TrackerReact;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  default(v) {\n    TrackerReact = v;\n  }\n\n}, 2);\nlet Validation;\nmodule.watch(require(\"react-validation\"), {\n  default(v) {\n    Validation = v;\n  }\n\n}, 3);\nlet validator;\nmodule.watch(require(\"validator\"), {\n  default(v) {\n    validator = v;\n  }\n\n}, 4);\nlet CompanySettings;\nmodule.watch(require(\"../api/CompanySettingMaster.js\"), {\n  CompanySettings(v) {\n    CompanySettings = v;\n  }\n\n}, 5);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 6);\nlet CompanyInfoList;\nmodule.watch(require(\"./CompanyInfoList.jsx\"), {\n  default(v) {\n    CompanyInfoList = v;\n  }\n\n}, 7);\nlet CompanySettingIndicators;\nmodule.watch(require(\"./companySettingIndicators.jsx\"), {\n  default(v) {\n    CompanySettingIndicators = v;\n  }\n\n}, 8);\n\nclass CompanyLocation extends TrackerReact(Component) {\n  componentDidMount() {\n    $('.CLcompanyAddress').prop('disabled', false);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      companyLocation: this.props.companyLocation,\n      companyAddress: this.props.companyAddress,\n      companyPincode: this.props.companyPincode,\n      companyCity: this.props.companyCity,\n      companyState: this.props.companyState,\n      companyCountry: this.props.companyCountry,\n      subscription: {\n        \"companyData\": Meteor.subscribe('companyData')\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      companyLocation: nextProps.post.companyLocation,\n      companyAddress: nextProps.post.companyAddress,\n      companyPincode: nextProps.post.companyPincode,\n      companyCity: nextProps.post.companyCity,\n      companyState: nextProps.post.companyState,\n      companyCountry: nextProps.post.companyCountry\n    });\n    this.handleChange = this.handleChange.bind(this); // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  companyListData() {\n    var companyData = CompanySettings.findOne({\n      \"companyId\": 1\n    });\n    var companyarray = [];\n\n    if (companyData) {\n      if (companyData.companyLocationsInfo) {\n        for (i = 1; i < companyData.companyLocationsInfo.length; i++) {\n          companyarray.push({\n            'companyLocation': companyData.companyLocationsInfo[i].companyLocation,\n            'companyAddress': companyData.companyLocationsInfo[i].companyAddress,\n            'companyPincode': companyData.companyLocationsInfo[i].companyPincode,\n            'companyCity': companyData.companyLocationsInfo[i].companyCity,\n            'companyState': companyData.companyLocationsInfo[i].companyState,\n            'companyCountry': companyData.companyLocationsInfo[i].companyCountry,\n            'index': i,\n            '_id': companyData._id\n          });\n        } //i\n\n      }\n    } //companyData\n\n\n    return companyarray;\n  }\n\n  submitCompanyLocation(event) {\n    event.preventDefault();\n    var sessionVar = Session.get('location');\n    var companyLocationFormValue = {\n      companyLocation: $(\".CLcompanyLocation\").val(),\n      companyAddress: $(\".CLcompanyAddress\").val(),\n      companyPincode: $(\".CLcompanyPincode\").val(),\n      companyCity: $(\".CLcompanyCity\").val(),\n      companyState: $(\".CLcompanyState\").val(),\n      companyCountry: $(\".CLcompanyCountry\").val() //close array\n\n    };\n\n    if (sessionVar) {\n      $(\".compLocationBtn\").prop('disabled', false);\n      Meteor.call('updateCompanyLocations', companyLocationFormValue, function (error, result) {\n        if (error) {\n          console.log(error);\n        } else {\n          swal('Company Address Updated Successfully!');\n          $(\".CLcompanyLocation\").val('');\n          $(\".CLcompanyAddress\").val('');\n          $(\".CLcompanyPincode\").val('');\n          $(\".CLcompanyCity\").val('');\n          $(\".CLcompanyState\").val('');\n          $(\".CLcompanyCountry\").val('');\n        }\n      });\n    } else {\n      Meteor.call('insertCompanyLocations', companyLocationFormValue, function (error, result) {\n        if (error) {\n          console.log(error);\n        } else {\n          swal('Company Address Added Successfully!');\n          $(\".CLcompanyLocation\").val('');\n          $(\".CLcompanyAddress\").val('');\n          $(\".CLcompanyPincode\").val('');\n          $(\".CLcompanyCity\").val('');\n          $(\".CLcompanyState\").val('');\n          $(\".CLcompanyCountry\").val('');\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\n      \"section\",\n      {\n        className: \"Content\"\n      },\n      React.createElement(\n        \"div\",\n        {\n          className: \"row\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-12 col-xs-12 \"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"box box-default\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"box-header with-border\"\n              },\n              React.createElement(\n                \"h3\",\n                {\n                  className: \"box-title\"\n                },\n                \"COMPANY LOCATION\"\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"box-body\"\n              },\n              React.createElement(\n                \"form\",\n                {\n                  id: \"companyLocationForm\",\n                  className: \"companyLocationForm\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-map-marker\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.companyLocation,\n                      onChange: this.handleChange,\n                      type: \"text\",\n                      placeholder: \"Company Location\",\n                      name: \"CLcompanyLocation\",\n                      className: \"form-control CLcompanyLocation inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-map-marker\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.companyAddress,\n                      onChange: this.handleChange,\n                      type: \"text\",\n                      placeholder: \"Company Address\",\n                      name: \"CLcompanyAddress\",\n                      className: \"form-control CLcompanyAddress inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-address-card-o\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.companyPincode,\n                      onChange: this.handleChange,\n                      type: \"number\",\n                      placeholder: \"Pincode\",\n                      name: \"CLpincode\",\n                      className: \"form-control CLcompanyPincode inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-globe\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.companyCity,\n                      onChange: this.handleChange,\n                      type: \"text\",\n                      placeholder: \"City\",\n                      name: \"CLcity\",\n                      className: \"form-control CLcompanyCity inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-globe\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.companyState,\n                      onChange: this.handleChange,\n                      type: \"text\",\n                      placeholder: \"State\",\n                      name: \"CLstate\",\n                      className: \"form-control CLcompanyState inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"input-group\"\n                    },\n                    React.createElement(\n                      \"span\",\n                      {\n                        className: \"input-group-addon ipAddons\"\n                      },\n                      React.createElement(\"i\", {\n                        className: \"fa fa-globe\",\n                        \"aria-hidden\": \"true\"\n                      })\n                    ),\n                    React.createElement(\"input\", {\n                      value: this.state.companyCountry,\n                      onChange: this.handleChange,\n                      type: \"text\",\n                      placeholder: \"Country\",\n                      name: \"CLcountry\",\n                      className: \"form-control CLcompanyCountry inputValid\",\n                      required: true\n                    })\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                  },\n                  React.createElement(\n                    \"button\",\n                    {\n                      className: \"col-lg-3 col-md-4 col-sm-6 col-xs-12  btn btn-primary pull-right compLocation compLocationBtn marginBottomDiv\",\n                      onClick: this.submitCompanyLocation.bind(this)\n                    },\n                    \"Submit\"\n                  )\n                )\n              )\n            )\n          )\n        )\n      ),\n      React.createElement(\n        \"div\",\n        {\n          className: \"table-responsive\"\n        },\n        React.createElement(\n          \"table\",\n          {\n            className: \"table table-bordered table-striped table-hover\"\n          },\n          React.createElement(\n            \"thead\",\n            null,\n            React.createElement(\n              \"tr\",\n              {\n                className: \"tableHeader\"\n              },\n              React.createElement(\n                \"th\",\n                null,\n                \" Company Location \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Company Address \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Pincode \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" City \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" State \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Country \"\n              ),\n              React.createElement(\n                \"th\",\n                null,\n                \" Action \"\n              )\n            )\n          ),\n          React.createElement(\n            \"tbody\",\n            null,\n            this.companyListData().map(locationData => {\n              return React.createElement(CompanyInfoList, {\n                key: locationData.index,\n                companyLocationDataVales: locationData\n              });\n            })\n          )\n        )\n      )\n    );\n  }\n\n}\n\nEditCompanyLocation = createContainer(props => {\n  const postHandle = Meteor.subscribe('companyData');\n  const post = CompanySettings.findOne({}) || {};\n  const loading = !postHandle.ready();\n  return {\n    loading,\n    post\n  };\n}, CompanyLocation);\nmodule.exportDefault(EditCompanyLocation);","map":{"version":3,"sources":["imports/dashboard/companySetting/components/CompanyLocation.jsx"],"names":["React","Component","module","watch","require","default","v","render","TrackerReact","Validation","validator","CompanySettings","createContainer","CompanyInfoList","CompanySettingIndicators","CompanyLocation","componentDidMount","$","prop","handleChange","event","target","name","setState","value","constructor","props","state","companyLocation","companyAddress","companyPincode","companyCity","companyState","companyCountry","subscription","Meteor","subscribe","bind","componentWillReceiveProps","nextProps","post","companyListData","companyData","findOne","companyarray","companyLocationsInfo","i","length","push","_id","submitCompanyLocation","preventDefault","sessionVar","Session","get","companyLocationFormValue","val","call","error","result","console","log","swal","map","locationData","index","EditCompanyLocation","postHandle","loading","ready","exportDefault"],"mappings":"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","file":"imports/dashboard/companySetting/components/CompanyLocation.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport { CompanySettings } from '../api/CompanySettingMaster.js';\nimport {createContainer} from 'meteor/react-meteor-data';\n\nimport CompanyInfoList from './CompanyInfoList.jsx';\nimport CompanySettingIndicators from './companySettingIndicators.jsx';\n\n\nclass CompanyLocation extends TrackerReact(Component){\n\n  componentDidMount(){\n    $('.CLcompanyAddress').prop('disabled', false);\n  }\n\n  handleChange(event){\n\t  const target = event.target;\n\t  const name   = target.name;\n\t  this.setState({\n\t  \t[name]: event.target.value,\n\t  });\n\t}\n\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t    companyLocation      : this.props.companyLocation,\n\t    companyAddress       : this.props.companyAddress,\n\t    companyPincode       : this.props.companyPincode,\n\t    companyCity          : this.props.companyCity,\n\t    companyState         : this.props.companyState,\n\t    companyCountry       : this.props.companyCountry,\n\n\t    subscription : {\n\t        \"companyData\" : Meteor.subscribe('companyData'),\n\t      }\n\n\t  };\n\n\t    this.handleChange = this.handleChange.bind(this);\n\t}\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n        companyLocation     : nextProps.post.companyLocation,\n        companyAddress   \t  : nextProps.post.companyAddress,\n        companyPincode   \t  : nextProps.post.companyPincode,\n        companyCity     \t  : nextProps.post.companyCity,\n        companyState     \t  : nextProps.post.companyState,\n        companyCountry     \t: nextProps.post.companyCountry,\n\n    })\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n  companyListData(){\n  \tvar companyData = CompanySettings.findOne({\"companyId\" : 1});\n  \tvar companyarray = [];\n  \tif(companyData){\n  \t\tif(companyData.companyLocationsInfo){\n  \t\t\tfor(i=1;i<companyData.companyLocationsInfo.length;i++){\n  \t\t\t\tcompanyarray.push({\n  \t\t\t\t\t'companyLocation' : companyData.companyLocationsInfo[i].companyLocation,\n  \t\t\t\t\t'companyAddress'  : companyData.companyLocationsInfo[i].companyAddress,\n  \t\t\t\t\t'companyPincode'  : companyData.companyLocationsInfo[i].companyPincode,\n  \t\t\t\t\t'companyCity'\t    : companyData.companyLocationsInfo[i].companyCity,\n  \t\t\t\t\t'companyState'    : companyData.companyLocationsInfo[i].companyState,\n  \t\t\t\t\t'companyCountry'  : companyData.companyLocationsInfo[i].companyCountry,\n  \t\t\t\t\t'index'\t\t\t      : i,\n  \t\t\t\t\t'_id'\t\t\t        : companyData._id,\n  \t\t\t\t})\n  \t\t\t}//i\n  \t\t}\n  \t}//companyData\n  \treturn companyarray;\n  }\n\n  submitCompanyLocation(event){\n    event.preventDefault();\n    var sessionVar = Session.get('location');\n\n    var companyLocationFormValue ={\n\n    \tcompanyLocation      : $(\".CLcompanyLocation\").val(),\n      companyAddress       : $(\".CLcompanyAddress\").val(),\n      companyPincode       : $(\".CLcompanyPincode\").val(),\n      companyCity          : $(\".CLcompanyCity\").val(),\n      companyState         : $(\".CLcompanyState\").val(),\n      companyCountry       : $(\".CLcompanyCountry\").val(),\n\n     }//close array\n\n    if(sessionVar){\n      $(\".compLocationBtn\").prop('disabled', false);\n    \tMeteor.call('updateCompanyLocations', companyLocationFormValue,\n\t            function(error, result){\n\t              if(error){\n\t                console.log(error);\n\t              }else{\n\n\t                swal('Company Address Updated Successfully!');\n\t                $(\".CLcompanyLocation\").val('');\n\t        \t\t    $(\".CLcompanyAddress\").val('');\n\t        \t\t    $(\".CLcompanyPincode\").val('');\n\t        \t\t    $(\".CLcompanyCity\").val('');\n\t         \t\t    $(\".CLcompanyState\").val('');\n\t        \t\t    $(\".CLcompanyCountry\").val('');\n\t              }\n\t            }\n\t    );\n\n    }else{\n\t    Meteor.call('insertCompanyLocations', companyLocationFormValue,\n\t            function(error, result){\n\t              if(error){\n\t                console.log(error);\n\t              }else{\n\n\t                swal('Company Address Added Successfully!');\n\t                $(\".CLcompanyLocation\").val('');\n\t        \t\t    $(\".CLcompanyAddress\").val('');\n\t        \t\t    $(\".CLcompanyPincode\").val('');\n\t        \t\t    $(\".CLcompanyCity\").val('');\n\t         \t\t    $(\".CLcompanyState\").val('');\n\t        \t\t    $(\".CLcompanyCountry\").val('');\n\t              }\n\t            }\n\t    );\n\t}\n  }\n\n  render(){\n  \treturn(\n\n      <section className=\"Content\">\n        <div className=\"row\">\n          <div className=\"col-lg-10 col-lg-offset-1 col-md-10 col-md-offset-1 col-sm-12 col-xs-12 \">\n            <div className=\"box box-default\">\n            <div className=\"box-header with-border\">\n            <h3 className=\"box-title\">COMPANY LOCATION</h3>\n            </div>\n\n            <div className=\"box-body\">\n            <form id=\"companyLocationForm\" className=\"companyLocationForm\">\n              <div className=\"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\">\n                <div className=\"input-group\">\n                 <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i></span>\n                 <input value={this.state.companyLocation} onChange={this.handleChange} type=\"text\" placeholder=\"Company Location\" name=\"CLcompanyLocation\" className=\"form-control CLcompanyLocation inputValid\" required/>\n                </div>\n              </div>\n\n              <div className=\"form-group col-lg-6 col-md-4 col-sm-12 col-xs-12\">\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i></span>\n                  <input value={this.state.companyAddress} onChange={this.handleChange} type=\"text\" placeholder=\"Company Address\" name=\"CLcompanyAddress\" className=\"form-control CLcompanyAddress inputValid\" required />\n                </div>\n              </div>\n\n               <div className=\"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\">\n                <div className=\"input-group\">\n    \t             <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-address-card-o\" aria-hidden=\"true\"></i></span>\n                   <input value={this.state.companyPincode} onChange={this.handleChange} type=\"number\" placeholder=\"Pincode\" name=\"CLpincode\" className=\"form-control CLcompanyPincode inputValid\" required/>\n                </div>\n              </div>\n               <div className=\"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\">\n                 <div className=\"input-group\">\n    \t             <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-globe\" aria-hidden=\"true\"></i></span>\n                   <input value={this.state.companyCity} onChange={this.handleChange} type=\"text\" placeholder=\"City\" name=\"CLcity\" className=\"form-control CLcompanyCity inputValid\" required/>\n                </div>\n              </div>\n               <div className=\"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\">\n                 <div className=\"input-group\">\n    \t             <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-globe\" aria-hidden=\"true\"></i></span>\n                   <input value={this.state.companyState} onChange={this.handleChange} type=\"text\" placeholder=\"State\" name=\"CLstate\" className=\"form-control CLcompanyState inputValid\" required/>\n                 </div>\n              </div>\n              <div className=\"form-group col-lg-6 col-md-4 col-sm-6 col-xs-6\">\n                 <div className=\"input-group\">\n    \t             <span className=\"input-group-addon ipAddons\"><i className=\"fa fa-globe\" aria-hidden=\"true\"></i></span>\n                   <input value={this.state.companyCountry} onChange={this.handleChange} type=\"text\" placeholder=\"Country\" name=\"CLcountry\" className=\"form-control CLcompanyCountry inputValid\" required/>\n                  </div>\n              </div>\n\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <button className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12  btn btn-primary pull-right compLocation compLocationBtn marginBottomDiv\" onClick={this.submitCompanyLocation.bind(this)}>Submit</button>\n              </div>\n            </form>\n            </div>\n            </div>\n          </div>\n  \t\t  </div>\n\n  \t\t  <div className=\"table-responsive\">\n\t\t\t<table className=\"table table-bordered table-striped table-hover\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className=\"tableHeader\">\n\t\t\t\t\t\t<th> Company Location </th>\n\t\t\t\t\t\t<th> Company Address </th>\n\t\t\t\t\t\t<th> Pincode </th>\n\t\t\t\t\t\t<th> City </th>\n\t\t\t\t\t\t<th> State </th>\n\t\t\t\t\t\t<th> Country </th>\n\t\t\t\t\t\t<th> Action </th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.companyListData().map( (locationData)=>{\n\t\t\t\t\t\treturn <CompanyInfoList key={locationData.index} companyLocationDataVales={locationData}/>\n\t\t\t\t\t  })\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t  </div>\n\n\n\n      {/*<div className=\"emptyDiv\"></div>*/}\n      </section>\n\n\n  \t\t);\n  }\n\n }\n\n EditCompanyLocation = createContainer((props)=>{\n\n    const postHandle = Meteor.subscribe('companyData');\n    const post       = CompanySettings.findOne({})||{};\n    const loading    = !postHandle.ready();\n\n    return {\n        loading,\n        post,\n    };\n}, CompanyLocation);\n\nexport default EditCompanyLocation;\n"]},"hash":"240e6b6f4bd7c2090d919c0e83ad58c4c7d7bccf"}

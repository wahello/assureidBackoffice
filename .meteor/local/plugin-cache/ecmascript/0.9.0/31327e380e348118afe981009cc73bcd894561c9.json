{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-validation","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Validation"}]},{"source":"validator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"validator"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"../../website/ServiceProcess/api/TicketMaster.js","imported":["TicketMaster"],"specifiers":[{"kind":"named","imported":"TicketMaster","local":"TicketMaster"}]},{"source":"./AddImagesVideo.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AddImagesVideo"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx","filenameRelative":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx.map","sourceFileName":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"RoleTicketStatus"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 0);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo: function (v) {\n        Mongo = v;\n    }\n}, 1);\nvar React = void 0,\n    Component = void 0;\nmodule.watch(require(\"react\"), {\n    \"default\": function (v) {\n        React = v;\n    },\n    Component: function (v) {\n        Component = v;\n    }\n}, 2);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n    render: function (v) {\n        render = v;\n    }\n}, 3);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n    \"default\": function (v) {\n        TrackerReact = v;\n    }\n}, 4);\nvar withTracker = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    withTracker: function (v) {\n        withTracker = v;\n    }\n}, 5);\nvar Validation = void 0;\nmodule.watch(require(\"react-validation\"), {\n    \"default\": function (v) {\n        Validation = v;\n    }\n}, 6);\nvar validator = void 0;\nmodule.watch(require(\"validator\"), {\n    \"default\": function (v) {\n        validator = v;\n    }\n}, 7);\nvar Tracker = void 0;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker: function (v) {\n        Tracker = v;\n    }\n}, 8);\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n    browserHistory: function (v) {\n        browserHistory = v;\n    }\n}, 9);\nvar Link = void 0;\nmodule.watch(require(\"react-router\"), {\n    Link: function (v) {\n        Link = v;\n    }\n}, 10);\nvar TicketMaster = void 0;\nmodule.watch(require(\"../../website/ServiceProcess/api/TicketMaster.js\"), {\n    TicketMaster: function (v) {\n        TicketMaster = v;\n    }\n}, 11);\nvar AddImagesVideo = void 0;\nmodule.watch(require(\"./AddImagesVideo.jsx\"), {\n    \"default\": function (v) {\n        AddImagesVideo = v;\n    }\n}, 12);\n\n// import { Services } from '../reactCMS/api/Services.js';\nvar RoleTicketStatus = function (_TrackerReact) {\n    (0, _inherits3.default)(RoleTicketStatus, _TrackerReact);\n\n    function RoleTicketStatus(props) {\n        (0, _classCallCheck3.default)(this, RoleTicketStatus);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, _TrackerReact.call(this, props));\n\n        _this.state = {\n            \"subscription\": {\n                \"allTickets\": Meteor.subscribe(\"allTickets\"),\n                \"userfunction\": Meteor.subscribe('userfunction')\n            },\n            'radioState': 'Self'\n        };\n        return _this;\n    }\n\n    RoleTicketStatus.prototype.allocateToTeamMember = function () {\n        function allocateToTeamMember(event) {\n            event.preventDefault();\n            var allocateTo = this.refs.allocateToName.value;\n            var allocateToSplit = allocateTo.split(\" \");\n            var firstName = allocateToSplit[0];\n            var lastName = allocateToSplit[1];\n            var ticketDetails = this.props.getTicket;\n            var ticketId = ticketDetails._id;\n            var allocateToMemberDetails = ticketDetails.ticketElement[1]; //   var allocateToMemberDetails.permanentAddress.status = \"New\";\n\n            console.log(allocateToMemberDetails);\n            Meteor.call('allocateToTeamMember', ticketId, firstName, lastName, allocateToMemberDetails, function (error, result) {\n                console.log(result);\n            });\n        }\n\n        return allocateToTeamMember;\n    }();\n\n    RoleTicketStatus.prototype.changeTMStatus = function () {\n        function changeTMStatus(event) {\n            var ticketId = $(event.currentTarget).attr('data-id');\n            var addressType = $(event.currentTarget).attr('data-addressType');\n            var status = $(event.currentTarget).attr('data-status');\n            console.log(ticketId, addressType, status);\n            Meteor.call('updateTMStatus', ticketId, addressType, status);\n        }\n\n        return changeTMStatus;\n    }(); /*Get radio value and display dropdown and textbox*/\n\n    RoleTicketStatus.prototype.getRadioValue = function () {\n        function getRadioValue(event) {\n            event.preventDefault();\n            var radioValue = $(event.currentTarget).val();\n            this.setState({\n                'radioState': radioValue\n            });\n        }\n\n        return getRadioValue;\n    }();\n\n    RoleTicketStatus.prototype.uploadDocsDiv = function () {\n        function uploadDocsDiv(event) {\n            event.preventDefault();\n            $('#AddImagesVideo').css({\n                \"display\": \"block\"\n            });\n        }\n\n        return uploadDocsDiv;\n    }(); /*Add BA Details  */\n\n    RoleTicketStatus.prototype.addBADetails = function () {\n        function addBADetails(event) {\n            event.preventDefault();\n            var addressType = $(event.currentTarget).attr(\"data-addressType\");\n            var role = $(event.currentTarget).attr('data-role');\n            var ticketId = $(event.currentTarget).attr('data-id');\n            console.log(addressType, role, ticketId);\n            var baName = this.refs.BAName.value;\n\n            if (role == \"BA\") {\n                Meteor.call(\"addBADetails\", baName, function (error, result) {\n                    if (result) {\n                        console.log(result);\n                        $('#uploadDocs').css({\n                            \"display\": \"block\"\n                        }); // Meteor.call('genericTicketUpdate',addressType,role,ticketId,(error,result)=>{\n                        //     if(result){\n                        //         swal({\n                        //                         title: \"Assing Ticket!\",\n                        //                         text: \"Successfully Assign\",\n                        //                         icon: \"success\",\n                        //         });\n                        //     }\n                        // });\n                    }\n                });\n            }\n        }\n\n        return addBADetails;\n    }();\n\n    RoleTicketStatus.prototype.roleSwitch = function () {\n        function roleSwitch(roleStatus, role, empid) {\n            if (!this.props.loading) {\n                var userDetails = Meteor.users.findOne({\n                    \"_id\": empid\n                });\n                var name = userDetails.profile.firstname + \" \" + userDetails.profile.lastname;\n                var teammemberDetails = Meteor.users.find({\n                    \"profile.reportToName\": name\n                }).fetch();\n                var reportUserArr = [];\n\n                if (teammemberDetails) {\n                    for (k = 0; k < teammemberDetails.length; k++) {\n                        var newStr = teammemberDetails[k].profile.firstname + \" \" + teammemberDetails[k].profile.lastname;\n                        reportUserArr.push(newStr);\n                    }\n                }\n\n                switch (role) {\n                    case 'team leader':\n                        if (roleStatus == \"Accepted\" || roleStatus == \"Reassign\") {\n                            return React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-8\"\n                                    },\n                                    React.createElement(\n                                        \"lable\",\n                                        null,\n                                        \"Allocate To Field Expert\"\n                                    ),\n                                    React.createElement(\n                                        \"select\",\n                                        {\n                                            className: \"form-control allProductSubCategories\",\n                                            \"aria-describedby\": \"basic-addon1\",\n                                            ref: \"allocateToName\"\n                                        },\n                                        reportUserArr.map(function (data, index) {\n                                            return React.createElement(\n                                                \"option\",\n                                                {\n                                                    key: index\n                                                },\n                                                data\n                                            );\n                                        })\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-4 noLRPad\"\n                                    },\n                                    React.createElement(\n                                        \"button\",\n                                        {\n                                            type: \"button\",\n                                            className: \"bg-primary col-lg-12 teammember\",\n                                            onClick: this.allocateToTeamMember.bind(this)\n                                        },\n                                        \"Ok\"\n                                    )\n                                )\n                            );\n                        }\n\n                        break;\n\n                    case 'team member':\n                        if (roleStatus == \"New\") {\n                            return React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"button\",\n                                    {\n                                        type: \"button\",\n                                        className: \"bg-primary col-lg-5 teammember\",\n                                        \"data-status\": \"Accepted\",\n                                        \"data-addressType\": this.props.getTicket.addressType,\n                                        \"data-id\": this.props.ticketId,\n                                        onClick: this.changeTMStatus.bind(this)\n                                    },\n                                    \"Accept\"\n                                ),\n                                React.createElement(\n                                    \"button\",\n                                    {\n                                        type: \"button\",\n                                        className: \"btn-danger col-lg-5 teammember\",\n                                        \"data-status\": \"Rejected\",\n                                        \"data-addressType\": this.props.getTicket.addressType,\n                                        \"data-id\": this.props.ticketId,\n                                        onClick: this.changeTMStatus.bind(this)\n                                    },\n                                    \"Reject\"\n                                )\n                            );\n                        } else {\n                            return React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \" col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"radio radiobtn col-lg-3 noLRPad\"\n                                        },\n                                        React.createElement(\n                                            \"label\",\n                                            {\n                                                className: \"noLRPad\"\n                                            },\n                                            React.createElement(\"input\", {\n                                                type: \"radio\",\n                                                name: \"optradio\",\n                                                value: \"Self\",\n                                                className: \"optradio\",\n                                                checked: this.state.radioState === \"Self\",\n                                                onChange: this.getRadioValue.bind(this)\n                                            }),\n                                            \"Self\"\n                                        )\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"radio col-lg-6 radiobtn noLRPad\"\n                                        },\n                                        React.createElement(\n                                            \"label\",\n                                            {\n                                                className: \"noLRPad\"\n                                            },\n                                            React.createElement(\"input\", {\n                                                type: \"radio\",\n                                                name: \"optradio\",\n                                                value: \"Field Expert\",\n                                                className: \"optradio\",\n                                                checked: this.state.radioState === \"Field Expert\",\n                                                onChange: this.getRadioValue.bind(this)\n                                            }),\n                                            \"Field Expert\"\n                                        )\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"radio radiobtn col-lg-3 noLRPad\"\n                                        },\n                                        React.createElement(\n                                            \"label\",\n                                            {\n                                                className: \"noLRPad\"\n                                            },\n                                            React.createElement(\"input\", {\n                                                type: \"radio\",\n                                                name: \"optradio\",\n                                                value: \"BA\",\n                                                className: \"optradio\",\n                                                checked: this.state.radioState === \"BA\",\n                                                onChange: this.getRadioValue.bind(this)\n                                            }),\n                                            \"BA\"\n                                        )\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \" col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                                    },\n                                    this.state.radioState == 'Field Expert' ? React.createElement(\n                                        \"select\",\n                                        null,\n                                        React.createElement(\n                                            \"option\",\n                                            null,\n                                            \"Field Expert 1\"\n                                        ),\n                                        React.createElement(\n                                            \"option\",\n                                            null,\n                                            \"Field Expert 2\"\n                                        ),\n                                        React.createElement(\n                                            \"option\",\n                                            null,\n                                            \"Field Expert 3\"\n                                        ),\n                                        React.createElement(\n                                            \"option\",\n                                            null,\n                                            \"Field Expert 4\"\n                                        ),\n                                        React.createElement(\n                                            \"option\",\n                                            null,\n                                            \"Field Expert 5\"\n                                        )\n                                    ) : this.state.radioState == 'BA' ? React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \" col-lg-12 col-md-12 col-sm-12 col-xs-12 noLRPad\"\n                                        },\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-5 noLRPad\"\n                                            },\n                                            React.createElement(\"input\", {\n                                                type: \"text\",\n                                                name: \"baName\",\n                                                className: \"banametext\",\n                                                ref: \"BAName\"\n                                            })\n                                        ),\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-3 noLRPad\"\n                                            },\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"submit\",\n                                                    value: \"Submit\",\n                                                    className: \"col-lg-11 noLRPad\",\n                                                    onClick: this.addBADetails.bind(this),\n                                                    \"data-addressType\": this.props.getTicket.addressType,\n                                                    \"data-id\": this.props.ticketId,\n                                                    \"data-role\": this.state.radioState\n                                                },\n                                                \"Submit\"\n                                            )\n                                        ),\n                                        React.createElement(\n                                            \"div\",\n                                            {\n                                                className: \"col-lg-4 noLRPad\",\n                                                id: \"uploadDocs\",\n                                                style: {\n                                                    \"display\": \"none\"\n                                                }\n                                            },\n                                            React.createElement(\n                                                \"button\",\n                                                {\n                                                    type: \"submit\",\n                                                    value: \"Submit\",\n                                                    className: \"col-lg-12 noLRPad\",\n                                                    onClick: this.uploadDocsDiv.bind(this)\n                                                },\n                                                \"Upload Docs\"\n                                            )\n                                        )\n                                    ) : \"\"\n                                )\n                            );\n                        }\n\n                }\n            }\n        }\n\n        return roleSwitch;\n    }();\n\n    RoleTicketStatus.prototype.userData = function () {\n        function userData() {\n            var getTicket = TicketMaster.findOne({\n                \"_id\": this.props.ticketId\n            });\n\n            if (getTicket) {\n                var newCommeeteeArr = [];\n\n                for (var i = 0; i < getTicket.ticketElement.length; i++) {\n                    var roleDetails = Meteor.users.findOne({\n                        \"_id\": getTicket.ticketElement[i].empid\n                    });\n                    newCommeeteeArr.push(React.createElement(\n                        \"div\",\n                        {\n                            key: i,\n                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noLRPad\"\n                        },\n                        React.createElement(\n                            \"div\",\n                            {\n                                className: \"ticketServiceWrapper col-lg-12 col-md-6 col-sm-6 col-xs-6\"\n                            },\n                            React.createElement(\n                                \"div\",\n                                {\n                                    className: \"col-lg-8 col-lg-offset-3 col-md-8 col-sm-8 col-xs-8 outerTickeBlock noPadLeftRight\"\n                                },\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\"\n                                        },\n                                        \"State\",\n                                        React.createElement(\n                                            \"span\",\n                                            {\n                                                className: \"pull-right\"\n                                            },\n                                            \":\"\n                                        )\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\"\n                                        },\n                                        React.createElement(\n                                            \"p\",\n                                            null,\n                                            getTicket.ticketElement[i].role_status\n                                        )\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    {\n                                        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\"\n                                    },\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\"\n                                        },\n                                        \"Date :\",\n                                        React.createElement(\n                                            \"span\",\n                                            {\n                                                className: \"pull-right\"\n                                            },\n                                            \":\"\n                                        )\n                                    ),\n                                    React.createElement(\n                                        \"div\",\n                                        {\n                                            className: \"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\"\n                                        },\n                                        React.createElement(\n                                            \"p\",\n                                            null,\n                                            moment(getTicket.ticketElement[i].createdAt).format(\"DD/MM/YYYY\")\n                                        )\n                                    )\n                                ),\n                                React.createElement(\n                                    \"div\",\n                                    null,\n                                    this.roleSwitch(getTicket.ticketElement[i].role_status, getTicket.ticketElement[i].role, getTicket.ticketElement[i].empid)\n                                )\n                            )\n                        )\n                    ));\n                }\n\n                return newCommeeteeArr;\n            }\n        }\n\n        return userData;\n    }();\n\n    RoleTicketStatus.prototype.render = function () {\n        function render() {\n            return React.createElement(\n                \"div\",\n                {\n                    className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noLRPad\"\n                },\n                this.userData(),\n                React.createElement(\n                    \"div\",\n                    {\n                        id: \"AddImagesVideo\",\n                        style: {\n                            \"display\": \"none\"\n                        }\n                    },\n                    React.createElement(AddImagesVideo, null)\n                )\n            );\n        }\n\n        return render;\n    }();\n\n    return RoleTicketStatus;\n}(TrackerReact(Component));\n\nticketContainer = withTracker(function (props) {\n    //   console.log('props: ',this.props);\n    var _id = props.ticketId; // console.log(\"_id\",_id);\n\n    var postHandle = Meteor.subscribe('singleTicket', _id);\n    var userfunction = Meteor.subscribe('userfunction');\n    var getTicket = TicketMaster.findOne({\n        \"_id\": _id\n    }) || {}; // console.log(\"getTicket\",getTicket); \n\n    var loading = !postHandle.ready() && !userfunction.ready(); // if(_id){\n\n    return {\n        loading: loading,\n        getTicket: getTicket,\n        ticketId: _id\n    }; // }\n})(RoleTicketStatus);\nmodule.exportDefault(ticketContainer);","map":{"version":3,"sources":["imports/dashboard/ticketManagement/RoleTicketStatus.jsx"],"names":["Meteor","module","watch","require","v","Mongo","React","Component","render","TrackerReact","withTracker","Validation","validator","Tracker","browserHistory","Link","TicketMaster","AddImagesVideo","RoleTicketStatus","props","state","subscribe","allocateToTeamMember","event","preventDefault","allocateTo","refs","allocateToName","value","allocateToSplit","split","firstName","lastName","ticketDetails","getTicket","ticketId","_id","allocateToMemberDetails","ticketElement","console","log","call","error","result","changeTMStatus","$","currentTarget","attr","addressType","status","getRadioValue","radioValue","val","setState","uploadDocsDiv","css","addBADetails","role","baName","BAName","roleSwitch","roleStatus","empid","loading","userDetails","users","findOne","name","profile","firstname","lastname","teammemberDetails","find","fetch","reportUserArr","k","length","newStr","push","map","data","index","bind","radioState","userData","newCommeeteeArr","i","roleDetails","role_status","moment","createdAt","format","ticketContainer","postHandle","userfunction","ready","exportDefault"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,UAAD,YAAQI,CAAR,EAAU;AAACJ,iBAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,SAAD,YAAOD,CAAP,EAAS;AAACC,gBAAMD,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,cAAJ;AAAA,IAAUC,kBAAV;AAAoBN,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,yBAASC,CAAT,EAAW;AAACE,gBAAMF,CAAN;AAAQ,KAApB;AAAqBG,aAArB,YAA+BH,CAA/B,EAAiC;AAACG,oBAAUH,CAAV;AAAY;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAII,eAAJ;AAAWP,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACK,UAAD,YAAQJ,CAAR,EAAU;AAACI,iBAAOJ,CAAP;AAAS;AAApB,CAAlC,EAAwD,CAAxD;AAA2D,IAAIK,qBAAJ;AAAiBR,OAAOC,KAAP,CAAaC,QAAQ,iCAAR,CAAb,EAAwD;AAAA,yBAASC,CAAT,EAAW;AAACK,uBAAaL,CAAb;AAAe;AAA3B,CAAxD,EAAqF,CAArF;AAAwF,IAAIM,oBAAJ;AAAgBT,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACO,eAAD,YAAaN,CAAb,EAAe;AAACM,sBAAYN,CAAZ;AAAc;AAA9B,CAAjD,EAAiF,CAAjF;AAAoF,IAAIO,mBAAJ;AAAeV,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAAA,yBAASC,CAAT,EAAW;AAACO,qBAAWP,CAAX;AAAa;AAAzB,CAAzC,EAAoE,CAApE;AAAuE,IAAIQ,kBAAJ;AAAcX,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA,yBAASC,CAAT,EAAW;AAACQ,oBAAUR,CAAV;AAAY;AAAxB,CAAlC,EAA4D,CAA5D;AAA+D,IAAIS,gBAAJ;AAAYZ,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACU,WAAD,YAAST,CAAT,EAAW;AAACS,kBAAQT,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIU,uBAAJ;AAAmBb,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACW,kBAAD,YAAgBV,CAAhB,EAAkB;AAACU,yBAAeV,CAAf;AAAiB;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIW,aAAJ;AAASd,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACY,QAAD,YAAMX,CAAN,EAAQ;AAACW,eAAKX,CAAL;AAAO;AAAhB,CAArC,EAAuD,EAAvD;AAA2D,IAAIY,qBAAJ;AAAiBf,OAAOC,KAAP,CAAaC,QAAQ,kDAAR,CAAb,EAAyE;AAACa,gBAAD,YAAcZ,CAAd,EAAgB;AAACY,uBAAaZ,CAAb;AAAe;AAAhC,CAAzE,EAA2G,EAA3G;AAA+G,IAAIa,uBAAJ;AAAmBhB,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAAA,yBAASC,CAAT,EAAW;AAACa,yBAAeb,CAAf;AAAiB;AAA7B,CAA7C,EAA4E,EAA5E;;AAcjjC;IAEMc,gB;;;AAEN,8BAAYC,KAAZ,EAAkB;AAAA;;AAAA,mEACd,yBAAMA,KAAN,CADc;;AAEd,cAAKC,KAAL,GAAa;AAEX,4BAAiB;AACf,8BAAepB,OAAOqB,SAAP,CAAiB,YAAjB,CADA;AAEf,gCAAiBrB,OAAOqB,SAAP,CAAiB,cAAjB;AAFF,aAFN;AAMX,0BAAa;AANF,SAAb;AAFc;AAUf;;+BACDC,oB;sCAAqBC,K,EAAM;AACvBA,kBAAMC,cAAN;AACA,gBAAIC,aAAa,KAAKC,IAAL,CAAUC,cAAV,CAAyBC,KAA1C;AACA,gBAAIC,kBAAkBJ,WAAWK,KAAX,CAAiB,GAAjB,CAAtB;AACA,gBAAIC,YAAYF,gBAAgB,CAAhB,CAAhB;AACA,gBAAIG,WAAYH,gBAAgB,CAAhB,CAAhB;AAEA,gBAAII,gBAAgB,KAAKd,KAAL,CAAWe,SAA/B;AACA,gBAAIC,WAAWF,cAAcG,GAA7B;AACA,gBAAIC,0BAA0BJ,cAAcK,aAAd,CAA4B,CAA5B,CAA9B,CATuB,CAUzB;;AACEC,oBAAQC,GAAR,CAAYH,uBAAZ;AACArC,mBAAOyC,IAAP,CAAY,sBAAZ,EAAmCN,QAAnC,EAA4CJ,SAA5C,EAAsDC,QAAtD,EAA+DK,uBAA/D,EAAuF,UAACK,KAAD,EAAOC,MAAP,EAAgB;AACjGJ,wBAAQC,GAAR,CAAYG,MAAZ;AACL,aAFD;AAGH;;;;;+BAEDC,c;gCAAerB,K,EAAM;AACjB,gBAAIY,WAAWU,EAAEtB,MAAMuB,aAAR,EAAuBC,IAAvB,CAA4B,SAA5B,CAAf;AACA,gBAAIC,cAAcH,EAAEtB,MAAMuB,aAAR,EAAuBC,IAAvB,CAA4B,kBAA5B,CAAlB;AACA,gBAAIE,SAAcJ,EAAEtB,MAAMuB,aAAR,EAAuBC,IAAvB,CAA4B,aAA5B,CAAlB;AACAR,oBAAQC,GAAR,CAAYL,QAAZ,EAAqBa,WAArB,EAAiCC,MAAjC;AACAjD,mBAAOyC,IAAP,CAAY,gBAAZ,EAA6BN,QAA7B,EAAsCa,WAAtC,EAAkDC,MAAlD;AACH;;;SAED;;+BACAC,a;+BAAc3B,K,EAAM;AAClBA,kBAAMC,cAAN;AACA,gBAAI2B,aAAaN,EAAEtB,MAAMuB,aAAR,EAAuBM,GAAvB,EAAjB;AACA,iBAAKC,QAAL,CAAc;AACV,8BAAaF;AADH,aAAd;AAGD;;;;;+BAEDG,a;+BAAc/B,K,EAAM;AAClBA,kBAAMC,cAAN;AACAqB,cAAE,iBAAF,EAAqBU,GAArB,CAAyB;AAAC,2BAAY;AAAb,aAAzB;AACD;;;SAED;;+BACAC,Y;8BAAajC,K,EAAM;AACjBA,kBAAMC,cAAN;AACA,gBAAIwB,cAAcH,EAAEtB,MAAMuB,aAAR,EAAuBC,IAAvB,CAA6B,kBAA7B,CAAlB;AACA,gBAAIU,OAAcZ,EAAEtB,MAAMuB,aAAR,EAAuBC,IAAvB,CAA4B,WAA5B,CAAlB;AACA,gBAAIZ,WAAcU,EAAEtB,MAAMuB,aAAR,EAAuBC,IAAvB,CAA4B,SAA5B,CAAlB;AACAR,oBAAQC,GAAR,CAAYQ,WAAZ,EAAwBS,IAAxB,EAA6BtB,QAA7B;AACA,gBAAIuB,SAAS,KAAKhC,IAAL,CAAUiC,MAAV,CAAiB/B,KAA9B;;AACA,gBAAG6B,QAAQ,IAAX,EAAgB;AACZzD,uBAAOyC,IAAP,CAAY,cAAZ,EAA2BiB,MAA3B,EAAkC,UAAChB,KAAD,EAAOC,MAAP,EAAgB;AAC9C,wBAAGA,MAAH,EAAU;AACNJ,gCAAQC,GAAR,CAAYG,MAAZ;AACCE,0BAAE,aAAF,EAAiBU,GAAjB,CAAqB;AAAC,uCAAY;AAAb,yBAArB,EAFK,CAGN;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEH;AACJ,iBAhBD;AAiBH;AAEF;;;;;+BAEDK,U;4BAAWC,U,EAAWJ,I,EAAKK,K,EAAM;AAC/B,gBAAI,CAAC,KAAK3C,KAAL,CAAW4C,OAAhB,EAAyB;AAErB,oBAAIC,cAAchE,OAAOiE,KAAP,CAAaC,OAAb,CAAqB;AAAC,2BAAMJ;AAAP,iBAArB,CAAlB;AACA,oBAAIK,OAAOH,YAAYI,OAAZ,CAAoBC,SAApB,GAA+B,GAA/B,GAAmCL,YAAYI,OAAZ,CAAoBE,QAAlE;AACA,oBAAIC,oBAAoBvE,OAAOiE,KAAP,CAAaO,IAAb,CAAkB;AAAC,4CAAuBL;AAAxB,iBAAlB,EAAiDM,KAAjD,EAAxB;AACA,oBAAIC,gBAAgB,EAApB;;AACA,oBAAGH,iBAAH,EAAqB;AACjB,yBAAII,IAAE,CAAN,EAAQA,IAAEJ,kBAAkBK,MAA5B,EAAmCD,GAAnC,EAAuC;AACnC,4BAAIE,SAASN,kBAAkBI,CAAlB,EAAqBP,OAArB,CAA6BC,SAA7B,GAAuC,GAAvC,GAA2CE,kBAAkBI,CAAlB,EAAqBP,OAArB,CAA6BE,QAArF;AACAI,sCAAcI,IAAd,CAAmBD,MAAnB;AACH;AACJ;;AACD,wBAAOpB,IAAP;AACI,yBAAK,aAAL;AACQ,4BAAII,cAAc,UAAf,IAA+BA,cAAc,UAAhD,EAA4D;AACxD,mCACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAK,mDAAU;AAAf;AACA;AAAA;AAAA;AAAA;AAAA,qCADA;AAEA;AAAA;AAAA;AAAQ,uDAAU,sCAAlB;AAAyD,gEAAiB,cAA1E;AAAyF,iDAAI;AAA7F;AAEQa,sDAAcK,GAAd,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAe;AAC9B,mDACI;AAAA;AAAA;AAAQ,yDAAKA;AAAb;AAECD;AAFD,6CADJ;AAMH,yCAPD;AAFR;AAFA,iCADJ;AAgBI;AAAA;AAAA;AAAK,mDAAU;AAAf;AACI;AAAA;AAAA;AAAQ,kDAAK,QAAb;AAAsB,uDAAU,iCAAhC;AAAkE,qDAAS,KAAK1D,oBAAL,CAA0B4D,IAA1B,CAA+B,IAA/B;AAA3E;AAAA;AAAA;AADJ;AAhBJ,6BADJ;AAsBH;;AACD;;AACR,yBAAK,aAAL;AACI,4BAAGrB,cAAc,KAAjB,EAAuB;AACnB,mCACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAQ,8CAAK,QAAb;AAAsB,mDAAU,gCAAhC;AAAiE,uDAAY,UAA7E;AAAwF,4DAAoB,KAAK1C,KAAL,CAAWe,SAAX,CAAqBc,WAAjI;AAA8I,mDAAS,KAAK7B,KAAL,CAAWgB,QAAlK;AAA4K,iDAAS,KAAKS,cAAL,CAAoBsC,IAApB,CAAyB,IAAzB;AAArL;AAAA;AAAA,iCADJ;AAEI;AAAA;AAAA;AAAQ,8CAAK,QAAb;AAAsB,mDAAU,gCAAhC;AAAiE,uDAAY,UAA7E;AAAwF,4DAAoB,KAAK/D,KAAL,CAAWe,SAAX,CAAqBc,WAAjI;AAA8I,mDAAS,KAAK7B,KAAL,CAAWgB,QAAlK;AAA4K,iDAAS,KAAKS,cAAL,CAAoBsC,IAApB,CAAyB,IAAzB;AAArL;AAAA;AAAA;AAFJ,6BADJ;AAMH,yBAPD,MAOK;AACF,mCACI;AAAA;AAAA;AACC;AAAA;AAAA;AAAK,mDAAU;AAAf;AACQ;AAAA;AAAA;AAAK,uDAAU;AAAf;AACA;AAAA;AAAA;AAAO,2DAAU;AAAjB;AAA2B;AAAO,sDAAK,OAAZ;AAAoB,sDAAK,UAAzB;AAAoC,uDAAM,MAA1C;AAAiD,2DAAU,UAA3D;AAAsE,yDAAS,KAAK9D,KAAL,CAAW+D,UAAX,KAAyB,MAAxG;AAAgH,0DAAU,KAAKjC,aAAL,CAAmBgC,IAAnB,CAAwB,IAAxB;AAA1H,8CAA3B;AAAA;AAAA;AADA,qCADR;AAIQ;AAAA;AAAA;AAAK,uDAAU;AAAf;AACA;AAAA;AAAA;AAAO,2DAAU;AAAjB;AAA2B;AAAO,sDAAK,OAAZ;AAAoB,sDAAK,UAAzB;AAAoC,uDAAM,cAA1C;AAAyD,2DAAU,UAAnE;AAA8E,yDAAS,KAAK9D,KAAL,CAAW+D,UAAX,KAAyB,cAAhH;AAAgI,0DAAU,KAAKjC,aAAL,CAAmBgC,IAAnB,CAAwB,IAAxB;AAA1I,8CAA3B;AAAA;AAAA;AADA,qCAJR;AAOQ;AAAA;AAAA;AAAK,uDAAU;AAAf;AACA;AAAA;AAAA;AAAO,2DAAU;AAAjB;AAA2B;AAAO,sDAAK,OAAZ;AAAoB,sDAAK,UAAzB;AAAoC,uDAAM,IAA1C;AAA+C,2DAAU,UAAzD;AAAoE,yDAAS,KAAK9D,KAAL,CAAW+D,UAAX,KAAyB,IAAtG;AAA4G,0DAAU,KAAKjC,aAAL,CAAmBgC,IAAnB,CAAwB,IAAxB;AAAtH,8CAA3B;AAAA;AAAA;AADA;AAPR,iCADD;AAYC;AAAA;AAAA;AAAK,mDAAU;AAAf;AAEY,yCAAK9D,KAAL,CAAW+D,UAAX,IAAyB,cAAzB,GAEA;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yCADJ;AAEI;AAAA;AAAA;AAAA;AAAA,yCAFJ;AAGI;AAAA;AAAA;AAAA;AAAA,yCAHJ;AAII;AAAA;AAAA;AAAA;AAAA,yCAJJ;AAKI;AAAA;AAAA;AAAA;AAAA;AALJ,qCAFA,GAUA,KAAK/D,KAAL,CAAW+D,UAAX,IAAyB,IAAzB,GACA;AAAA;AAAA;AAAK,uDAAU;AAAf;AAEI;AAAA;AAAA;AAAK,2DAAU;AAAf;AACC;AAAO,sDAAK,MAAZ;AAAmB,sDAAK,QAAxB;AAAiC,2DAAU,YAA3C;AAAwD,qDAAI;AAA5D;AADD,yCAFJ;AAMI;AAAA;AAAA;AAAK,2DAAU;AAAf;AACC;AAAA;AAAA;AAAQ,0DAAK,QAAb;AAAsB,2DAAM,QAA5B;AAAqC,+DAAU,mBAA/C;AAAmE,6DAAS,KAAK3B,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAA5E;AAA0G,wEAAoB,KAAK/D,KAAL,CAAWe,SAAX,CAAqBc,WAAnJ;AAAgK,+DAAS,KAAK7B,KAAL,CAAWgB,QAApL;AAA8L,iEAAW,KAAKf,KAAL,CAAW+D;AAApN;AAAA;AAAA;AADD,yCANJ;AASM;AAAA;AAAA;AAAK,2DAAU,kBAAf;AAAkC,oDAAG,YAArC;AAAkD,uDAAO;AAAC,+DAAY;AAAb;AAAzD;AACE;AAAA;AAAA;AAAQ,0DAAK,QAAb;AAAsB,2DAAM,QAA5B;AAAsC,+DAAU,mBAAhD;AAAoE,6DAAS,KAAK7B,aAAL,CAAmB4B,IAAnB,CAAwB,IAAxB;AAA7E;AAAA;AAAA;AADF;AATN,qCADA,GAiBA;AA7BZ;AAZD,6BADJ;AAgDF;;AApFT;AAwFC;AAGN;;;;;+BAEDE,Q;4BAAU;AACT,gBAAIlD,YAAYlB,aAAakD,OAAb,CAAqB;AAAC,uBAAQ,KAAK/C,KAAL,CAAWgB;AAApB,aAArB,CAAhB;;AACC,gBAAID,SAAJ,EAAc;AACZ,oBAAImD,kBAAkB,EAAtB;;AAEA,qBAAI,IAAIC,IAAE,CAAV,EAAYA,IAAEpD,UAAUI,aAAV,CAAwBsC,MAAtC,EAA6CU,GAA7C,EAAiD;AAE/C,wBAAIC,cAAcvF,OAAOiE,KAAP,CAAaC,OAAb,CAAqB;AAAC,+BAAMhC,UAAUI,aAAV,CAAwBgD,CAAxB,EAA2BxB;AAAlC,qBAArB,CAAlB;AACEuB,oCAAgBP,IAAhB,CACE;AAAA;AAAA;AAAK,iCAAOQ,CAAZ;AAAe,uCAAU;AAAzB;AACI;AAAA;AAAA;AAAK,2CAAU;AAAf;AACQ;AAAA;AAAA;AAAK,+CAAU;AAAf;AACI;AAAA;AAAA;AAAK,mDAAU;AAAf;AACI;AAAA;AAAA;AAAK,uDAAU;AAAf;AAAA;AACC;AAAA;AAAA;AAAM,2DAAU;AAAhB;AAAA;AAAA;AADD,qCADJ;AAII;AAAA;AAAA;AAAK,uDAAU;AAAf;AACA;AAAA;AAAA;AAAIpD,sDAAUI,aAAV,CAAwBgD,CAAxB,EAA2BE;AAA/B;AADA;AAJJ,iCADJ;AASI;AAAA;AAAA;AAAK,mDAAU;AAAf;AACI;AAAA;AAAA;AAAK,uDAAU;AAAf;AAAA;AACM;AAAA;AAAA;AAAM,2DAAU;AAAhB;AAAA;AAAA;AADN,qCADJ;AAII;AAAA;AAAA;AAAK,uDAAU;AAAf;AACA;AAAA;AAAA;AAAIC,mDAAOvD,UAAUI,aAAV,CAAwBgD,CAAxB,EAA2BI,SAAlC,EAA6CC,MAA7C,CAAoD,YAApD;AAAJ;AADA;AAJJ,iCATJ;AAkBI;AAAA;AAAA;AACK,yCAAK/B,UAAL,CAAgB1B,UAAUI,aAAV,CAAwBgD,CAAxB,EAA2BE,WAA3C,EAAwDtD,UAAUI,aAAV,CAAwBgD,CAAxB,EAA2B7B,IAAnF,EAAwFvB,UAAUI,aAAV,CAAwBgD,CAAxB,EAA2BxB,KAAnH;AADL;AAlBJ;AADR;AADJ,qBADF;AA6BH;;AACD,uBAAOuB,eAAP;AAED;AACF;;;;;+BAEF7E,M;0BAAQ;AACL,mBACE;AAAA;AAAA;AAAK,+BAAU;AAAf;AAGO,qBAAK4E,QAAL,EAHP;AAIM;AAAA;AAAA;AAAK,4BAAG,gBAAR;AAAyB,+BAAO;AAAC,uCAAY;AAAb;AAAhC;AACE,wCAAC,cAAD;AADF;AAJN,aADF;AAYA;;;;;;EApP2B3E,aAAaF,SAAb,C;;AAsP/BqF,kBAAkBlF,YAAY,iBAAS;AACvC;AACI,QAAI0B,MAAMjB,MAAMgB,QAAhB,CAFmC,CAGnC;;AACA,QAAM0D,aAAa7F,OAAOqB,SAAP,CAAiB,cAAjB,EAAgCe,GAAhC,CAAnB;AACA,QAAQ0D,eAAe9F,OAAOqB,SAAP,CAAiB,cAAjB,CAAvB;AAEA,QAAMa,YAAalB,aAAakD,OAAb,CAAqB;AAAC,eAAQ9B;AAAT,KAArB,KAAuC,EAA1D,CAPmC,CAQnC;;AAEA,QAAM2B,UAAU,CAAC8B,WAAWE,KAAX,EAAD,IAAuB,CAACD,aAAaC,KAAb,EAAxC,CAVmC,CAYnC;;AACE,WAAO;AACHhC,iBAAWA,OADR;AAEH7B,mBAAYA,SAFT;AAGHC,kBAAYC;AAHT,KAAP,CAbiC,CAkBnC;AACH,CAnBiB,EAmBflB,gBAnBe,CAAlB;AAtQAjB,OAAO+F,aAAP,CA0ReJ,eA1Rf","file":"imports/dashboard/ticketManagement/RoleTicketStatus.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport Validation from 'react-validation';\nimport validator from 'validator';\nimport {Tracker} from 'meteor/tracker';\nimport { browserHistory } from 'react-router'; \nimport { Link } from 'react-router';\nimport { TicketMaster } from '../../website/ServiceProcess/api/TicketMaster.js'; \nimport AddImagesVideo from './AddImagesVideo.jsx';\n\n// import { Services } from '../reactCMS/api/Services.js';\n\nclass RoleTicketStatus extends TrackerReact(Component){   \n\nconstructor(props){\n    super(props);\n    this.state = {\n\n      \"subscription\" : {\n        \"allTickets\" : Meteor.subscribe(\"allTickets\"), \n        \"userfunction\" : Meteor.subscribe('userfunction'),\n      },\n      'radioState':'Self', \n    }\n  }\n  allocateToTeamMember(event){\n      event.preventDefault();\n      var allocateTo = this.refs.allocateToName.value;\n      var allocateToSplit = allocateTo.split(\" \");\n      var firstName = allocateToSplit[0];\n      var lastName  = allocateToSplit[1];\n\n      var ticketDetails = this.props.getTicket;\n      var ticketId = ticketDetails._id;\n      var allocateToMemberDetails = ticketDetails.ticketElement[1];\n    //   var allocateToMemberDetails.permanentAddress.status = \"New\";\n      console.log(allocateToMemberDetails);\n      Meteor.call('allocateToTeamMember',ticketId,firstName,lastName,allocateToMemberDetails,(error,result)=>{\n            console.log(result);\n      });\n  }\n\n  changeTMStatus(event){\n      var ticketId = $(event.currentTarget).attr('data-id');\n      var addressType = $(event.currentTarget).attr('data-addressType');\n      var status      = $(event.currentTarget).attr('data-status');\n      console.log(ticketId,addressType,status);\n      Meteor.call('updateTMStatus',ticketId,addressType,status);\n  }\n\n  /*Get radio value and display dropdown and textbox*/\n  getRadioValue(event){\n    event.preventDefault();\n    var radioValue = $(event.currentTarget).val();\n    this.setState({\n        'radioState':radioValue,\n    });\n  }\n\n  uploadDocsDiv(event){\n    event.preventDefault();\n    $('#AddImagesVideo').css({\"display\" : \"block\"});\n  }\n\n  /*Add BA Details  */\n  addBADetails(event){\n    event.preventDefault();\n    var addressType = $(event.currentTarget).attr( \"data-addressType\"); \n    var role        = $(event.currentTarget).attr('data-role');\n    var ticketId    = $(event.currentTarget).attr('data-id');\n    console.log(addressType,role,ticketId);\n    var baName = this.refs.BAName.value;\n    if(role == \"BA\"){\n        Meteor.call(\"addBADetails\",baName,(error,result)=>{\n            if(result){\n                console.log(result);\n                 $('#uploadDocs').css({\"display\" : \"block\"});\n                // Meteor.call('genericTicketUpdate',addressType,role,ticketId,(error,result)=>{\n                //     if(result){\n                //         swal({\n                //                         title: \"Assing Ticket!\",\n                //                         text: \"Successfully Assign\",\n                //                         icon: \"success\",\n                //         });\n            \n                //     }\n                // });\n    \n            }\n        })\n    }\n    \n  }\n\n  roleSwitch(roleStatus,role,empid){\n    if (!this.props.loading) {\n\n        var userDetails = Meteor.users.findOne({\"_id\":empid});\n        var name = userDetails.profile.firstname +\" \"+userDetails.profile.lastname;\n        var teammemberDetails = Meteor.users.find({\"profile.reportToName\":name}).fetch();\n        var reportUserArr = [];\n        if(teammemberDetails){\n            for(k=0;k<teammemberDetails.length;k++){\n                var newStr = teammemberDetails[k].profile.firstname+\" \"+teammemberDetails[k].profile.lastname;\n                reportUserArr.push(newStr);\n            }\n        }\n        switch(role){\n            case 'team leader':\n                    if((roleStatus == \"Accepted\") || (roleStatus == \"Reassign\")){\n                        return(\n                            <div>\n                                <div className=\"col-lg-8\">\n                                <lable>Allocate To Field Expert</lable>\n                                <select className=\"form-control allProductSubCategories\" aria-describedby=\"basic-addon1\" ref=\"allocateToName\">\n                                    { \n                                        reportUserArr.map( (data, index)=>{\n                                            return (\n                                                <option key={index}>\n                                                    \n                                                {data}\n                                                </option>\n                                            );\n                                        })\n                                    } \n                                </select>\n                                </div>\n                                <div className=\"col-lg-4 noLRPad\">\n                                    <button type=\"button\" className=\"bg-primary col-lg-12 teammember\" onClick={this.allocateToTeamMember.bind(this)}>Ok</button>\n                                </div>\n                            </div>\n                        );\n                    }\n                    break;\n            case 'team member':\n                if(roleStatus == \"New\"){\n                    return(\n                        <div>\n                            <button type=\"button\" className=\"bg-primary col-lg-5 teammember\" data-status=\"Accepted\" data-addressType = {this.props.getTicket.addressType} data-id={this.props.ticketId} onClick={this.changeTMStatus.bind(this)}>Accept</button>\n                            <button type=\"button\" className=\"btn-danger col-lg-5 teammember\" data-status=\"Rejected\" data-addressType = {this.props.getTicket.addressType} data-id={this.props.ticketId} onClick={this.changeTMStatus.bind(this)}>Reject</button>\n                        </div>\n                    );\n                }else{\n                   return(\n                       <div>\n                        <div className=\" col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <div className=\"radio radiobtn col-lg-3 noLRPad\">\n                                <label className=\"noLRPad\"><input type=\"radio\" name=\"optradio\" value=\"Self\" className=\"optradio\" checked={this.state.radioState ===\"Self\"} onChange={this.getRadioValue.bind(this)}/>Self</label>\n                                </div>\n                                <div className=\"radio col-lg-6 radiobtn noLRPad\">\n                                <label className=\"noLRPad\"><input type=\"radio\" name=\"optradio\" value=\"Field Expert\" className=\"optradio\" checked={this.state.radioState ===\"Field Expert\"} onChange={this.getRadioValue.bind(this)}/>Field Expert</label>\n                                </div>\n                                <div className=\"radio radiobtn col-lg-3 noLRPad\">\n                                <label className=\"noLRPad\"><input type=\"radio\" name=\"optradio\" value=\"BA\" className=\"optradio\" checked={this.state.radioState ===\"BA\"} onChange={this.getRadioValue.bind(this)}/>BA</label>\n                                </div>\n                        </div>\n                        <div className=\" col-lg-12 col-md-12 col-sm-12 col-xs-12\">                            \n                                {\n                                    this.state.radioState == 'Field Expert'?\n\n                                    <select>\n                                        <option>Field Expert 1</option>\n                                        <option>Field Expert 2</option>\n                                        <option>Field Expert 3</option>\n                                        <option>Field Expert 4</option>\n                                        <option>Field Expert 5</option>\n                                    </select>\n                                    : \n                                    this.state.radioState == 'BA'?\n                                    <div className=\" col-lg-12 col-md-12 col-sm-12 col-xs-12 noLRPad\">\n                                    \n                                        <div className=\"col-lg-5 noLRPad\">\n                                         <input type=\"text\" name=\"baName\" className=\"banametext\" ref=\"BAName\"/>\n                                        </div>\n                                    \n                                        <div className=\"col-lg-3 noLRPad\">                                        \n                                         <button type=\"submit\" value=\"Submit\" className=\"col-lg-11 noLRPad\" onClick={this.addBADetails.bind(this)} data-addressType = {this.props.getTicket.addressType} data-id={this.props.ticketId} data-role={this.state.radioState}>Submit</button>\n                                         </div>\n                                          <div className=\"col-lg-4 noLRPad\" id=\"uploadDocs\" style={{\"display\" : \"none\"}}>                                        \n                                            <button type=\"submit\" value=\"Submit\"  className=\"col-lg-12 noLRPad\" onClick={this.uploadDocsDiv.bind(this)}>Upload Docs</button>\n                                         </div>\n\n                                    </div>\n                                    :\n\n                                    \"\"\n                                }\n                            </div>\n                        </div>\n                    );\n                    \n                }\n                    \n\n            }\n        }\n    \n\n  }\n\n  userData(){\n  \tvar getTicket = TicketMaster.findOne({\"_id\" : this.props.ticketId});\n    if (getTicket){\n      var newCommeeteeArr = [];\n\n      for(var i=0;i<getTicket.ticketElement.length;i++){\n\n        var roleDetails = Meteor.users.findOne({\"_id\":getTicket.ticketElement[i].empid});\n          newCommeeteeArr.push(\n            <div key = {i} className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noLRPad\">\n                <div className=\"ticketServiceWrapper col-lg-12 col-md-6 col-sm-6 col-xs-6\">              \n                        <div className=\"col-lg-8 col-lg-offset-3 col-md-8 col-sm-8 col-xs-8 outerTickeBlock noPadLeftRight\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\">\n                                <div className=\"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\">\n                            State<span className=\"pull-right\">:</span>\n                                </div>  \n                                <div className=\"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\">\n                                <p>{getTicket.ticketElement[i].role_status}</p>\n                                </div> \n                            </div> \n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noPadLeftRight\">\n                                <div className=\"col-lg-5 col-md-4 col-sm-4 col-xs-4 text-left userLabel\">\n                                Date :<span className=\"pull-right\">:</span>\n                                </div>  \n                                <div className=\"col-lg-7 col-md-8 col-sm-8 col-xs-8 text-left userValue\">\n                                <p>{moment(getTicket.ticketElement[i].createdAt).format(\"DD/MM/YYYY\")}</p> \n                                {/*  <p> - </p>*/}\n                                </div>  \n                            </div>  \n                            <div>\n                                {this.roleSwitch(getTicket.ticketElement[i].role_status, getTicket.ticketElement[i].role,getTicket.ticketElement[i].empid)}\n                                \n                            </div>\n                        </div>\n                </div>    \n            </div>\n          );\n      }\n      return newCommeeteeArr;\n    \n    }\n  }\n \n\trender(){\n    return(\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noLRPad\">\n         {/* <div className=\"userInformationWrapper col-lg-6 col-md-6 col-sm-6 col-xs-6\"> */}\n\n            {this.userData()}\n            <div id=\"AddImagesVideo\" style={{\"display\" : \"none\"}}>\n              <AddImagesVideo />\n            </div>\n\n          {/* </div>     */}\n      </div>    \n    );\n   }\n}\nticketContainer = withTracker(props => {\n//   console.log('props: ',this.props);\n    var _id = props.ticketId;\n    // console.log(\"_id\",_id);\n    const postHandle = Meteor.subscribe('singleTicket',_id);\n    const   userfunction = Meteor.subscribe('userfunction');\n    \n    const getTicket  = TicketMaster.findOne({\"_id\" : _id}) || {};  \n    // console.log(\"getTicket\",getTicket); \n   \n    const loading = !postHandle.ready() && !userfunction.ready();\n\n    // if(_id){\n      return {\n          loading  : loading,\n          getTicket : getTicket,\n          ticketId  : _id\n      };\n    // }\n})(RoleTicketStatus);\nexport default ticketContainer;\n\n"]},"hash":"31327e380e348118afe981009cc73bcd894561c9"}

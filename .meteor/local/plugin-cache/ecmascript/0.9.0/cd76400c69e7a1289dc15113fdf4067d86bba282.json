{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"meteor/ultimatejs:tracker-react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TrackerReact"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]},{"source":"./ListOfColleges.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ListOfColleges"}]},{"source":"../api/College.js","imported":["College"],"specifiers":[{"kind":"named","imported":"College","local":"College"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/dashboard/forms/college/AddEditCollege.jsx","filenameRelative":"imports/dashboard/forms/college/AddEditCollege.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/dashboard/forms/college/AddEditCollege.jsx.map","sourceFileName":"imports/dashboard/forms/college/AddEditCollege.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AddEditCollege"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar render = void 0;\nmodule.watch(require(\"react-dom\"), {\n  render: function (v) {\n    render = v;\n  }\n}, 1);\nvar TrackerReact = void 0;\nmodule.watch(require(\"meteor/ultimatejs:tracker-react\"), {\n  \"default\": function (v) {\n    TrackerReact = v;\n  }\n}, 2);\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n  browserHistory: function (v) {\n    browserHistory = v;\n  }\n}, 3);\nvar withTracker = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 4);\nvar Link = void 0;\nmodule.watch(require(\"react-router\"), {\n  Link: function (v) {\n    Link = v;\n  }\n}, 5);\nvar ListOfColleges = void 0;\nmodule.watch(require(\"./ListOfColleges.jsx\"), {\n  \"default\": function (v) {\n    ListOfColleges = v;\n  }\n}, 6);\nvar College = void 0;\nmodule.watch(require(\"../api/College.js\"), {\n  College: function (v) {\n    College = v;\n  }\n}, 7);\n\nvar AddEditCollege = function (_TrackerReact) {\n  (0, _inherits3.default)(AddEditCollege, _TrackerReact);\n\n  function AddEditCollege(props) {\n    (0, _classCallCheck3.default)(this, AddEditCollege);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _TrackerReact.call(this, props));\n\n    _this.state = {\n      collegeName: '',\n      universityName: '',\n      collegeStatus: '',\n      // button : 'ADD',\n      \"subscription\": {\n        \"college\": Meteor.subscribe(\"college\")\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_this);\n    return _this;\n  }\n\n  AddEditCollege.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (!nextProps.loading) {\n        if (nextProps.college) {\n          this.setState({\n            collegeName: nextProps.college.collegeName,\n            universityName: nextProps.college.universityName,\n            collegeStatus: nextProps.college.collegeStatus,\n            id: nextProps.college._id,\n            button: nextProps.button\n          });\n        }\n      } else {\n        this.setState({\n          collegeName: '',\n          universityName: '',\n          collegeStatus: '',\n          id: '',\n          button: ''\n        });\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  AddEditCollege.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      $(\"html,body\").scrollTop(0);\n\n      if (!$(\"#adminLte\").length > 0 && !$('body').hasClass('adminLte')) {\n        var adminLte = document.createElement(\"script\");\n        adminLte.type = \"text/javascript\";\n        adminLte.src = \"/js/adminLte.js\";\n        $(\"body\").append(adminLte);\n      }\n    }\n\n    return componentDidMount;\n  }();\n\n  AddEditCollege.prototype.componentWillMount = function () {\n    function componentWillMount() {// if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n      //   var dashboardCss = document.createElement(\"link\");\n      //   dashboardCss.type = \"text/css\"; \n      //   dashboardCss.rel = \"stylesheet\";\n      //   dashboardCss.href = \"/css/dashboard.css\"; \n      //   document.head.append(dashboardCss);\n      // }\n    }\n\n    return componentWillMount;\n  }();\n\n  AddEditCollege.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      $(\"script[src='/js/adminLte.js']\").remove(); // $(\"link[href='/css/dashboard.css']\").remove(); \n    }\n\n    return componentWillUnmount;\n  }();\n\n  AddEditCollege.prototype.handleChange = function () {\n    function handleChange(event) {\n      var _setState;\n\n      var target = event.target;\n      var name = target.name;\n      this.setState((_setState = {}, _setState[name] = event.target.value, _setState));\n    }\n\n    return handleChange;\n  }();\n\n  AddEditCollege.prototype.uppercase = function () {\n    function uppercase(str) {\n      var array1 = str.split(' ');\n      var newarray1 = [];\n\n      for (var x = 0; x < array1.length; x++) {\n        newarray1.push(array1[x].charAt(0).toUpperCase() + array1[x].slice(1));\n      }\n\n      return newarray1.join(' ');\n    }\n\n    return uppercase;\n  }();\n\n  AddEditCollege.prototype.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault();\n      var collegeName = this.uppercase(this.refs.collegeName.value);\n      var universityName = this.uppercase(this.refs.universityName.value);\n      var collegeStatus = this.refs.collegeStatus.value;\n      var id = this.props.params.id;\n\n      if (id) {\n        Meteor.call('updateCollegeData', id, collegeName, universityName, collegeStatus, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else {\n            swal(\"Done\", \"College Data has been Updated!.\", \"success\");\n            var path = \"/admin/College\";\n            browserHistory.replace(path);\n            $(\".collegeName\").val(\"\");\n            $(\".universityName\").val(\"\");\n            $(\".collegeStatus\").val(\"\");\n          }\n        });\n      } else {\n        Meteor.call('createCollegeData', collegeName, universityName, collegeStatus, function (error, result) {\n          if (error) {\n            console.log(error.reason);\n          } else {\n            swal(\"Done\", \"College Data has been Created!.\", \"success\");\n            $(\".collegeName\").val(\"\");\n            $(\".universityName\").val(\"\");\n            $(\".collegeStatus\").val(\"\");\n          }\n        });\n      }\n    }\n\n    return handleSubmit;\n  }();\n\n  AddEditCollege.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        {\n          className: \"content-wrapper\"\n        },\n        React.createElement(\n          \"section\",\n          {\n            className: \"content-header\"\n          },\n          React.createElement(\n            \"h1\",\n            null,\n            \" Master Data \"\n          ),\n          React.createElement(\n            \"ol\",\n            {\n              className: \"breadcrumb\"\n            },\n            React.createElement(\n              \"li\",\n              null,\n              React.createElement(\n                \"a\",\n                {\n                  href: \"#\"\n                },\n                React.createElement(\"i\", {\n                  className: \"fa fa-newspaper-o\"\n                }),\n                \"Master Data\"\n              )\n            ),\n            React.createElement(\n              \"li\",\n              {\n                className: \"active\"\n              },\n              \"Manage College\"\n            )\n          )\n        ),\n        React.createElement(\n          \"section\",\n          {\n            className: \"content\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"row\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"box box-primary\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box-header with-border\"\n                  },\n                  React.createElement(\n                    \"h2\",\n                    {\n                      className: \"box-title\"\n                    },\n                    \"Manage College\"\n                  )\n                ),\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"box-body\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"col-lg-12 col-sm-12 col-xs-12 col-md-12\"\n                    },\n                    React.createElement(\n                      \"form\",\n                      {\n                        id: \"\"\n                      },\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"row inputrow\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                          },\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"form-group\"\n                            },\n                            React.createElement(\n                              \"label\",\n                              {\n                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                              },\n                              \"College Name\"\n                            ),\n                            React.createElement(\"input\", {\n                              type: \"text\",\n                              ref: \"collegeName\",\n                              id: \"collegeName\",\n                              name: \"collegeName\",\n                              value: this.state.collegeName,\n                              onChange: this.handleChange,\n                              className: \"templateName collegeName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                            })\n                          )\n                        )\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"row inputrow\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n                          },\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"form-group\"\n                            },\n                            React.createElement(\n                              \"label\",\n                              {\n                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                              },\n                              \"University Name\"\n                            ),\n                            React.createElement(\"input\", {\n                              type: \"text\",\n                              ref: \"universityName\",\n                              id: \"universityName\",\n                              name: \"universityName\",\n                              value: this.state.universityName,\n                              onChange: this.handleChange,\n                              className: \"templateName universityName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\"\n                            })\n                          )\n                        )\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"row inputrow\"\n                        },\n                        React.createElement(\n                          \"div\",\n                          {\n                            className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\"\n                          },\n                          React.createElement(\n                            \"div\",\n                            {\n                              className: \"form-group\"\n                            },\n                            React.createElement(\n                              \"label\",\n                              {\n                                className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\"\n                              },\n                              \"Status\"\n                            ),\n                            React.createElement(\n                              \"select\",\n                              {\n                                className: \"form-control inputText collegeStatus\",\n                                ref: \"collegeStatus\",\n                                value: this.state.collegeStatus,\n                                onChange: this.handleChange,\n                                id: \"collegeStatus\",\n                                name: \"collegeStatus\",\n                                required: true\n                              },\n                              React.createElement(\n                                \"option\",\n                                {\n                                  value: \"Functioning\"\n                                },\n                                \"Functioning\"\n                              ),\n                              React.createElement(\n                                \"option\",\n                                {\n                                  value: \"Fake\"\n                                },\n                                \"Fake\"\n                              ),\n                              React.createElement(\n                                \"option\",\n                                {\n                                  value: \"Disfunctioning\"\n                                },\n                                \"Disfunctioning\"\n                              )\n                            )\n                          )\n                        )\n                      ),\n                      React.createElement(\n                        \"div\",\n                        {\n                          className: \"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12\"\n                        },\n                        React.createElement(\n                          \"button\",\n                          {\n                            className: \"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\",\n                            onClick: this.handleSubmit.bind(this),\n                            type: \"submit\",\n                            value: \"\"\n                          },\n                          this.state.button\n                        )\n                      )\n                    )\n                  ),\n                  React.createElement(ListOfColleges, null)\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return AddEditCollege;\n}(TrackerReact(Component));\n\nEditPageContainer = withTracker(function (_ref) {\n  var params = _ref.params;\n  var _id = params.id;\n  var postHandle = Meteor.subscribe('singlecollege', _id); // var editServices   = this.props.params.id;\n  // console.log(\"Param\" +editServices);\n\n  var college = College.findOne({\n    \"_id\": _id\n  }) || {};\n  var loading = !postHandle.ready();\n\n  if (_id) {\n    var button = \"UPDATE\";\n    return {\n      loading: loading,\n      college: college,\n      button: button\n    };\n  } else {\n    var button = \"ADD\";\n    return {\n      loading: loading,\n      college: college,\n      button: button\n    };\n  }\n})(AddEditCollege);\nmodule.exportDefault(EditPageContainer);","map":{"version":3,"sources":["imports/dashboard/forms/college/AddEditCollege.jsx"],"names":["React","Component","module","watch","require","v","render","TrackerReact","browserHistory","withTracker","Link","ListOfColleges","College","AddEditCollege","props","state","collegeName","universityName","collegeStatus","Meteor","subscribe","handleChange","bind","componentWillReceiveProps","nextProps","loading","college","setState","id","_id","button","componentDidMount","$","scrollTop","length","hasClass","adminLte","document","createElement","type","src","append","componentWillMount","componentWillUnmount","remove","event","target","name","value","uppercase","str","array1","split","newarray1","x","push","charAt","toUpperCase","slice","join","handleSubmit","preventDefault","refs","params","call","error","result","console","log","reason","swal","path","replace","val","EditPageContainer","postHandle","findOne","ready","exportDefault"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,kBAAV;AAAoBC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ,GAApB;AAAqBJ,WAArB,YAA+BI,CAA/B,EAAiC;AAACJ,gBAAUI,CAAV;AAAY;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,eAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAlC,EAAwD,CAAxD;AAA2D,IAAIE,qBAAJ;AAAiBL,OAAOC,KAAP,CAAaC,QAAQ,iCAAR,CAAb,EAAwD;AAAA,uBAASC,CAAT,EAAW;AAACE,mBAAaF,CAAb;AAAe;AAA3B,CAAxD,EAAqF,CAArF;AAAwF,IAAIG,uBAAJ;AAAmBN,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACI,gBAAD,YAAgBH,CAAhB,EAAkB;AAACG,qBAAeH,CAAf;AAAiB;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAII,oBAAJ;AAAgBP,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACK,aAAD,YAAaJ,CAAb,EAAe;AAACI,kBAAYJ,CAAZ;AAAc;AAA9B,CAAjD,EAAiF,CAAjF;AAAoF,IAAIK,aAAJ;AAASR,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACM,MAAD,YAAML,CAAN,EAAQ;AAACK,WAAKL,CAAL;AAAO;AAAhB,CAArC,EAAuD,CAAvD;AAA0D,IAAIM,uBAAJ;AAAmBT,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAAA,uBAASC,CAAT,EAAW;AAACM,qBAAeN,CAAf;AAAiB;AAA7B,CAA7C,EAA4E,CAA5E;AAA+E,IAAIO,gBAAJ;AAAYV,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACQ,SAAD,YAASP,CAAT,EAAW;AAACO,cAAQP,CAAR;AAAU;AAAtB,CAA1C,EAAkE,CAAlE;;IASpoBQ,c;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,+DACjB,yBAAMA,KAAN,CADiB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,mBAAiB,EADN;AAEXC,sBAAiB,EAFN;AAGXC,qBAAiB,EAHN;AAIX;AACA,sBAAkB;AAChB,mBAAYC,OAAOC,SAAP,CAAiB,SAAjB;AADI;AALP,KAAb;AASC,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AAXgB;AAYlB;;2BACDC,yB;uCAA0BC,S,EAAW;AACnC,UAAG,CAACA,UAAUC,OAAd,EAAsB;AACpB,YAAGD,UAAUE,OAAb,EAAqB;AAClB,eAAKC,QAAL,CAAc;AACVX,yBAAsBQ,UAAUE,OAAV,CAAkBV,WAD9B;AAEVC,4BAAsBO,UAAUE,OAAV,CAAkBT,cAF9B;AAGVC,2BAAsBM,UAAUE,OAAV,CAAkBR,aAH9B;AAIVU,gBAAsBJ,UAAUE,OAAV,CAAkBG,GAJ9B;AAKVC,oBAAsBN,UAAUM;AALtB,WAAd;AAOF;AACF,OAVD,MAUK;AACH,aAAKH,QAAL,CAAc;AACPX,uBAAkB,EADX;AAEPC,0BAAkB,EAFX;AAGPC,yBAAkB,EAHX;AAIPU,cAAkB,EAJX;AAKPE,kBAAkB;AALX,SAAd;AAOD;;AAED,WAAKT,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;;;;2BACFS,iB;iCAAoB;AACjBC,QAAE,WAAF,EAAeC,SAAf,CAAyB,CAAzB;;AACA,UAAI,CAACD,EAAE,WAAF,EAAeE,MAAhB,GAAuB,CAAvB,IAA4B,CAACF,EAAE,MAAF,EAAUG,QAAV,CAAmB,UAAnB,CAAjC,EAAiE;AAChE,YAAIC,WAAWC,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAF,iBAASG,IAAT,GAAc,iBAAd;AACAH,iBAASI,GAAT,GAAe,iBAAf;AACAR,UAAE,MAAF,EAAUS,MAAV,CAAiBL,QAAjB;AACA;AACF;;;;;2BACDM,kB;kCAAqB,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;;2BACDC,oB;oCAAsB;AACnBX,QAAE,+BAAF,EAAmCY,MAAnC,GADmB,CAEnB;AACD;;;;;2BACFvB,Y;0BAAawB,K,EAAM;AAAA;;AAChB,UAAMC,SAASD,MAAMC,MAArB;AACA,UAAMC,OAASD,OAAOC,IAAtB;AACA,WAAKpB,QAAL,4BACEoB,IADF,IACSF,MAAMC,MAAN,CAAaE,KADtB;AAGD;;;;;2BACFC,S;uBAAUC,G,EACV;AACE,UAAIC,SAASD,IAAIE,KAAJ,CAAU,GAAV,CAAb;AACA,UAAIC,YAAY,EAAhB;;AAEA,WAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIH,OAAOjB,MAA1B,EAAkCoB,GAAlC,EAAsC;AAClCD,kBAAUE,IAAV,CAAeJ,OAAOG,CAAP,EAAUE,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAkCN,OAAOG,CAAP,EAAUI,KAAV,CAAgB,CAAhB,CAAjD;AACH;;AACD,aAAOL,UAAUM,IAAV,CAAe,GAAf,CAAP;AACD;;;;;2BACAC,Y;0BAAaf,K,EAAM;AAClBA,YAAMgB,cAAN;AACA,UAAI7C,cAAoB,KAAKiC,SAAL,CAAe,KAAKa,IAAL,CAAU9C,WAAV,CAAsBgC,KAArC,CAAxB;AACA,UAAI/B,iBAAoB,KAAKgC,SAAL,CAAe,KAAKa,IAAL,CAAU7C,cAAV,CAAyB+B,KAAxC,CAAxB;AACA,UAAI9B,gBAAoB,KAAK4C,IAAL,CAAU5C,aAAV,CAAwB8B,KAAhD;AACA,UAAIpB,KAAK,KAAKd,KAAL,CAAWiD,MAAX,CAAkBnC,EAA3B;;AACA,UAAGA,EAAH,EAAM;AACJT,eAAO6C,IAAP,CAAY,mBAAZ,EAAgCpC,EAAhC,EAAmCZ,WAAnC,EAA+CC,cAA/C,EAA8DC,aAA9D,EAA4E,UAAC+C,KAAD,EAAOC,MAAP,EAAgB;AAC1F,cAAGD,KAAH,EAAS;AACLE,oBAAQC,GAAR,CAAYH,MAAMI,MAAlB;AACH,WAFD,MAEK;AACHC,iBAAK,MAAL,EAAY,iCAAZ,EAA8C,SAA9C;AACA,gBAAIC,OAAO,gBAAX;AACA/D,2BAAegE,OAAf,CAAuBD,IAAvB;AACAvC,cAAE,cAAF,EAAkByC,GAAlB,CAAsB,EAAtB;AACAzC,cAAE,iBAAF,EAAqByC,GAArB,CAAyB,EAAzB;AACAzC,cAAE,gBAAF,EAAoByC,GAApB,CAAwB,EAAxB;AACD;AACF,SAXD;AAYD,OAbD,MAaK;AACHtD,eAAO6C,IAAP,CAAY,mBAAZ,EAAgChD,WAAhC,EAA4CC,cAA5C,EAA2DC,aAA3D,EAAyE,UAAC+C,KAAD,EAAOC,MAAP,EAAgB;AACvF,cAAGD,KAAH,EAAS;AACLE,oBAAQC,GAAR,CAAYH,MAAMI,MAAlB;AACH,WAFD,MAEK;AACHC,iBAAK,MAAL,EAAY,iCAAZ,EAA8C,SAA9C;AACAtC,cAAE,cAAF,EAAkByC,GAAlB,CAAsB,EAAtB;AACAzC,cAAE,iBAAF,EAAqByC,GAArB,CAAyB,EAAzB;AACAzC,cAAE,gBAAF,EAAoByC,GAApB,CAAwB,EAAxB;AACD;AACF,SATD;AAUD;AACD;;;;;2BACHnE,M;sBAAS;AACP,aACC;AAAA;AAAA;AAAK,qBAAU;AAAf;AACE;AAAA;AAAA;AAAS,uBAAU;AAAnB;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AAAI,yBAAU;AAAd;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAG,wBAAK;AAAR;AAAY;AAAG,6BAAU;AAAb,kBAAZ;AAAA;AAAA;AADF,aADF;AAGE;AAAA;AAAA;AAAI,2BAAU;AAAd;AAAA;AAAA;AAHF;AAFF,SADF;AASE;AAAA;AAAA;AAAS,uBAAU;AAAnB;AACG;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AAAK,2BAAU;AAAf;AACE;AAAA;AAAA;AAAK,6BAAU;AAAf;AACG;AAAA;AAAA;AAAK,+BAAU;AAAf;AACC;AAAA;AAAA;AAAI,iCAAU;AAAd;AAAA;AAAA;AADD,iBADH;AAIG;AAAA;AAAA;AAAK,+BAAU;AAAf;AACE;AAAA;AAAA;AAAK,iCAAU;AAAf;AACE;AAAA;AAAA;AAAM,4BAAG;AAAT;AACG;AAAA;AAAA;AAAK,qCAAU;AAAf;AACG;AAAA;AAAA;AAAK,uCAAU;AAAf;AACE;AAAA;AAAA;AAAK,yCAAU;AAAf;AACC;AAAA;AAAA;AAAO,2CAAU;AAAjB;AAAA;AAAA,6BADD;AAEG;AAAO,oCAAK,MAAZ;AAAmB,mCAAI,aAAvB;AAAqC,kCAAG,aAAxC;AAAsD,oCAAK,aAA3D;AAAyE,qCAAO,KAAKS,KAAL,CAAWC,WAA3F;AAAwG,wCAAU,KAAKK,YAAvH;AAAqI,yCAAU;AAA/I;AAFH;AADF;AADH,uBADH;AASG;AAAA;AAAA;AAAK,qCAAU;AAAf;AACG;AAAA;AAAA;AAAK,uCAAU;AAAf;AACE;AAAA;AAAA;AAAK,yCAAU;AAAf;AACC;AAAA;AAAA;AAAO,2CAAU;AAAjB;AAAA;AAAA,6BADD;AAEG;AAAO,oCAAK,MAAZ;AAAmB,mCAAI,gBAAvB;AAAwC,kCAAG,gBAA3C;AAA4D,oCAAK,gBAAjE;AAAkF,qCAAO,KAAKN,KAAL,CAAWE,cAApG;AAAoH,wCAAU,KAAKI,YAAnI;AAAiJ,yCAAU;AAA3J;AAFH;AADF;AADH,uBATH;AAiBG;AAAA;AAAA;AAAK,qCAAU;AAAf;AACE;AAAA;AAAA;AAAK,uCAAU;AAAf;AACG;AAAA;AAAA;AAAK,yCAAU;AAAf;AACC;AAAA;AAAA;AAAO,2CAAU;AAAjB;AAAA;AAAA,6BADD;AAEE;AAAA;AAAA;AAAQ,2CAAU,sCAAlB;AAAyD,qCAAI,eAA7D;AAA6E,uCAAO,KAAKN,KAAL,CAAWG,aAA/F;AAA8G,0CAAU,KAAKG,YAA7H;AAA2I,oCAAG,eAA9I;AAA8J,sCAAK,eAAnK;AAAmL;AAAnL;AACE;AAAA;AAAA;AAAQ,yCAAM;AAAd;AAAA;AAAA,+BADF;AAEE;AAAA;AAAA;AAAQ,yCAAM;AAAd;AAAA;AAAA,+BAFF;AAGE;AAAA;AAAA;AAAQ,yCAAM;AAAd;AAAA;AAAA;AAHF;AAFF;AADH;AADF,uBAjBH;AA6BI;AAAA;AAAA;AAAK,qCAAU;AAAf;AACE;AAAA;AAAA;AAAQ,uCAAU,4EAAlB;AAA+F,qCAAS,KAAKuC,YAAL,CAAkBtC,IAAlB,CAAuB,IAAvB,CAAxG;AAAsI,kCAAK,QAA3I;AAAoJ,mCAAM;AAA1J;AAA+J,+BAAKP,KAAL,CAAWe;AAA1K;AADF;AA7BJ;AADF,mBADF;AAoCE,sCAAC,cAAD;AApCF;AAJH;AADF;AADF;AADH;AATF,OADD;AA6DE;;;;;;EA1KwBvB,aAAaN,SAAb,C;;AA4K7ByE,oBAAoBjE,YAAY,gBAAc;AAAA,MAAZsD,MAAY,QAAZA,MAAY;AAC1C,MAAIlC,MAAekC,OAAOnC,EAA1B;AACA,MAAM+C,aAAaxD,OAAOC,SAAP,CAAiB,eAAjB,EAAiCS,GAAjC,CAAnB,CAF0C,CAG1C;AACA;;AACA,MAAMH,UAAad,QAAQgE,OAAR,CAAgB;AAAC,WAAM/C;AAAP,GAAhB,KAA+B,EAAlD;AACA,MAAMJ,UAAa,CAACkD,WAAWE,KAAX,EAApB;;AAEA,MAAGhD,GAAH,EAAO;AACL,QAAIC,SAAS,QAAb;AACA,WAAO;AACHL,sBADG;AAEHC,sBAFG;AAGHI;AAHG,KAAP;AAKD,GAPD,MAOK;AACF,QAAIA,SAAS,KAAb;AACD,WAAO;AACHL,sBADG;AAEHC,sBAFG;AAGHI;AAHG,KAAP;AAKD;AACJ,CAvBmB,EAuBjBjB,cAvBiB,CAApB;AArLAX,OAAO4E,aAAP,CA6MeJ,iBA7Mf","file":"imports/dashboard/forms/college/AddEditCollege.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport TrackerReact from 'meteor/ultimatejs:tracker-react';\nimport {browserHistory} from 'react-router';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport { Link } from 'react-router';\nimport ListOfColleges from './ListOfColleges.jsx';\nimport { College } from '../api/College.js'; \n\nclass AddEditCollege extends TrackerReact(Component) {\n  constructor(props) {\n    super(props);  \n    this.state = {\n      collegeName    : '',\n      universityName : '',\n      collegeStatus  : '',\n      // button : 'ADD',\n      \"subscription\"  : {\n        \"college\" : Meteor.subscribe(\"college\"),\n      }  \n    }; \n     this.handleChange = this.handleChange.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.loading){\n      if(nextProps.college){\n         this.setState({\n             collegeName         : nextProps.college.collegeName,\n             universityName      : nextProps.college.universityName,\n             collegeStatus       : nextProps.college.collegeStatus,\n             id                  : nextProps.college._id,\n             button              : nextProps.button,\n         });\n      }\n    }else{\n      this.setState({\n             collegeName     : '',\n             universityName  : '',\n             collegeStatus   : '',\n             id              : '',\n             button          : '',\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\tcomponentDidMount() {\n    $(\"html,body\").scrollTop(0);\n    if (!$(\"#adminLte\").length>0 && !$('body').hasClass('adminLte')) {\n     var adminLte = document.createElement(\"script\");  \n     adminLte.type=\"text/javascript\";  \n     adminLte.src = \"/js/adminLte.js\";  \n     $(\"body\").append(adminLte);  \n    }\n  }\n  componentWillMount() {\n    // if (!!!$(\"link[href='/css/dashboard.css']\").length > 0) {\n    //   var dashboardCss = document.createElement(\"link\");\n    //   dashboardCss.type = \"text/css\"; \n    //   dashboardCss.rel = \"stylesheet\";\n    //   dashboardCss.href = \"/css/dashboard.css\"; \n    //   document.head.append(dashboardCss);\n    // }\n  }\n  componentWillUnmount(){  \n     $(\"script[src='/js/adminLte.js']\").remove(); \n     // $(\"link[href='/css/dashboard.css']\").remove(); \n   }\n  handleChange(event){\n     const target = event.target;\n     const name   = target.name;\n     this.setState({\n      [name]: event.target.value,\n     });\n   }\n  uppercase(str)\n  {\n    var array1 = str.split(' ');\n    var newarray1 = [];\n      \n    for(var x = 0; x < array1.length; x++){\n        newarray1.push(array1[x].charAt(0).toUpperCase()+array1[x].slice(1));\n    }\n    return newarray1.join(' ');\n  } \n   handleSubmit(event){\n    event.preventDefault();\n    var collegeName       = this.uppercase(this.refs.collegeName.value);\n    var universityName    = this.uppercase(this.refs.universityName.value);\n    var collegeStatus     = this.refs.collegeStatus.value;\n    var id = this.props.params.id;\n    if(id){\n      Meteor.call('updateCollegeData',id,collegeName,universityName,collegeStatus,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"College Data has been Updated!.\",\"success\"); \n          var path = \"/admin/College\";\n          browserHistory.replace(path);\n          $(\".collegeName\").val(\"\");\n          $(\".universityName\").val(\"\");\n          $(\".collegeStatus\").val(\"\"); \n        }            \n      });\n    }else{\n      Meteor.call('createCollegeData',collegeName,universityName,collegeStatus,(error,result)=>{\n        if(error){\n            console.log(error.reason);\n        }else{                      \n          swal(\"Done\",\"College Data has been Created!.\",\"success\");  \n          $(\".collegeName\").val(\"\");\n          $(\".universityName\").val(\"\");\n          $(\".collegeStatus\").val(\"\");\n        }            \n      });  \n    }\n   }\n\trender() {\n   return (\n    <div className=\"content-wrapper\">\n      <section className=\"content-header\">\n        <h1> Master Data </h1>\n        <ol className=\"breadcrumb\">\n          <li>\n            <a href=\"#\"><i className=\"fa fa-newspaper-o\" />Master Data</a></li>\n          <li className=\"active\">Manage College</li>\n        </ol>\n      </section>\n      <section className=\"content\">\n         <div className=\"row\">\n           <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n             <div className=\"box box-primary\">\n                <div className=\"box-header with-border\">\n                 <h2 className=\"box-title\">Manage College</h2>  \n                </div>\n                <div className=\"box-body\">                      \n                  <div className=\"col-lg-12 col-sm-12 col-xs-12 col-md-12\">\n                    <form id=\"\">\n                       <div className=\"row inputrow\">\n                          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">College Name</label>\n                               <input type=\"text\" ref=\"collegeName\" id=\"collegeName\" name=\"collegeName\" value={this.state.collegeName} onChange={this.handleChange} className=\"templateName collegeName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                            </div>\n                           </div>      \n                       </div>\n                       <div className=\"row inputrow\">\n                          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">University Name</label>\n                               <input type=\"text\" ref=\"universityName\" id=\"universityName\" name=\"universityName\" value={this.state.universityName} onChange={this.handleChange} className=\"templateName universityName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid\" />\n                            </div>\n                           </div>\n                       </div>\n                       <div className=\"row inputrow\">\n                         <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n                            <div className=\"form-group\">\n                             <label className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 label-category\">Status</label>\n                              <select className=\"form-control inputText collegeStatus\" ref=\"collegeStatus\" value={this.state.collegeStatus} onChange={this.handleChange} id=\"collegeStatus\" name=\"collegeStatus\" required>\n                                <option value=\"Functioning\">Functioning</option>\n                                <option value=\"Fake\">Fake</option>\n                                <option value=\"Disfunctioning\">Disfunctioning</option>\n                              </select>                          \n                            </div>\n                          </div> \n                       </div>\n                        <div className=\"form-group col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                          <button className=\"col-lg-3 col-md-4 col-xs-12 col-sm-12 col-xs-12 btn btn-primary pull-right\" onClick={this.handleSubmit.bind(this)} type=\"submit\" value=\"\" >{this.state.button}</button>\n                        </div> \n                    </form>\n                  </div>\n                  <ListOfColleges />\n                </div>\n             </div>\n            </div>\n         </div>\n         </section>\n      </div>\n      );\n    } \n}\nEditPageContainer = withTracker(({params}) => {\n    var _id          = params.id;\n    const postHandle = Meteor.subscribe('singlecollege',_id);\n    // var editServices   = this.props.params.id;\n    // console.log(\"Param\" +editServices);\n    const college    = College.findOne({\"_id\":_id})|| {};\n    const loading    = !postHandle.ready();\n    \n    if(_id){\n      var button = \"UPDATE\";\n      return {\n          loading,\n          college,\n          button,\n      };\n    }else{\n       var button = \"ADD\";\n      return {\n          loading,\n          college,\n          button,\n      };\n    }\n})(AddEditCollege);\nexport default EditPageContainer;\n\n"]},"hash":"cd76400c69e7a1289dc15113fdf4067d86bba282"}
